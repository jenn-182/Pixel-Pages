{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect, useCallback } from 'react';\nimport apiService from '../services/api';\nexport const useFocusSessions = username => {\n  _s();\n  const [sessions, setSessions] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  // Load sessions\n  const loadSessions = useCallback(async (options = {}) => {\n    if (!username) return;\n    setLoading(true);\n    setError(null);\n    try {\n      const data = await apiService.getFocusSessions(username, options);\n      setSessions(data);\n    } catch (err) {\n      setError(err.message);\n      console.error('Error loading focus sessions:', err);\n    } finally {\n      setLoading(false);\n    }\n  }, [username]);\n\n  // Create session\n  const createSession = async sessionData => {\n    setLoading(true);\n    setError(null);\n    try {\n      const newSession = await apiService.createFocusSession({\n        ...sessionData,\n        ownerUsername: username\n      });\n\n      // Add to local state\n      setSessions(prev => [newSession, ...prev]);\n      return newSession;\n    } catch (err) {\n      setError(err.message);\n      console.error('Error creating focus session:', err);\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Update session\n  const updateSession = async (sessionId, sessionData) => {\n    setLoading(true);\n    setError(null);\n    try {\n      const updatedSession = await apiService.updateFocusSession(sessionId, sessionData);\n\n      // Update local state\n      setSessions(prev => prev.map(session => session.id === sessionId ? updatedSession : session));\n      return updatedSession;\n    } catch (err) {\n      setError(err.message);\n      console.error('Error updating focus session:', err);\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Delete (deactivate) session\n  const deleteSession = async sessionId => {\n    setLoading(true);\n    setError(null);\n    try {\n      await apiService.deleteFocusSession(sessionId);\n\n      // Update local state (mark as inactive)\n      setSessions(prev => prev.map(session => session.id === sessionId ? {\n        ...session,\n        isActive: false\n      } : session));\n      return true;\n    } catch (err) {\n      setError(err.message);\n      console.error('Error deleting focus session:', err);\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Get session by ID\n  const getSession = useCallback(sessionId => {\n    return sessions.find(session => session.id === sessionId);\n  }, [sessions]);\n\n  // Filter sessions\n  const getActiveSessions = useCallback(() => {\n    return sessions.filter(session => session.isActive);\n  }, [sessions]);\n  const getSessionsByCategory = useCallback(category => {\n    return sessions.filter(session => session.category === category);\n  }, [sessions]);\n\n  // Load sessions on mount\n  useEffect(() => {\n    if (username) {\n      loadSessions();\n    }\n  }, [username, loadSessions]);\n  return {\n    sessions,\n    loading,\n    error,\n    loadSessions,\n    createSession,\n    updateSession,\n    deleteSession,\n    getSession,\n    getActiveSessions,\n    getSessionsByCategory,\n    refreshSessions: loadSessions\n  };\n};\n_s(useFocusSessions, \"pxfjHH9JmnSADLdVfBd8bPBalB0=\");","map":{"version":3,"names":["useState","useEffect","useCallback","apiService","useFocusSessions","username","_s","sessions","setSessions","loading","setLoading","error","setError","loadSessions","options","data","getFocusSessions","err","message","console","createSession","sessionData","newSession","createFocusSession","ownerUsername","prev","updateSession","sessionId","updatedSession","updateFocusSession","map","session","id","deleteSession","deleteFocusSession","isActive","getSession","find","getActiveSessions","filter","getSessionsByCategory","category","refreshSessions"],"sources":["/Users/jenn/Projects/Pixel-Pages/frontend/src/hooks/useFocusSessions.js"],"sourcesContent":["import { useState, useEffect, useCallback } from 'react';\nimport apiService from '../services/api';\n\nexport const useFocusSessions = (username) => {\n  const [sessions, setSessions] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  // Load sessions\n  const loadSessions = useCallback(async (options = {}) => {\n    if (!username) return;\n    \n    setLoading(true);\n    setError(null);\n    \n    try {\n      const data = await apiService.getFocusSessions(username, options);\n      setSessions(data);\n    } catch (err) {\n      setError(err.message);\n      console.error('Error loading focus sessions:', err);\n    } finally {\n      setLoading(false);\n    }\n  }, [username]);\n\n  // Create session\n  const createSession = async (sessionData) => {\n    setLoading(true);\n    setError(null);\n    \n    try {\n      const newSession = await apiService.createFocusSession({\n        ...sessionData,\n        ownerUsername: username\n      });\n      \n      // Add to local state\n      setSessions(prev => [newSession, ...prev]);\n      return newSession;\n    } catch (err) {\n      setError(err.message);\n      console.error('Error creating focus session:', err);\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Update session\n  const updateSession = async (sessionId, sessionData) => {\n    setLoading(true);\n    setError(null);\n    \n    try {\n      const updatedSession = await apiService.updateFocusSession(sessionId, sessionData);\n      \n      // Update local state\n      setSessions(prev => prev.map(session => \n        session.id === sessionId ? updatedSession : session\n      ));\n      \n      return updatedSession;\n    } catch (err) {\n      setError(err.message);\n      console.error('Error updating focus session:', err);\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Delete (deactivate) session\n  const deleteSession = async (sessionId) => {\n    setLoading(true);\n    setError(null);\n    \n    try {\n      await apiService.deleteFocusSession(sessionId);\n      \n      // Update local state (mark as inactive)\n      setSessions(prev => prev.map(session => \n        session.id === sessionId ? { ...session, isActive: false } : session\n      ));\n      \n      return true;\n    } catch (err) {\n      setError(err.message);\n      console.error('Error deleting focus session:', err);\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Get session by ID\n  const getSession = useCallback((sessionId) => {\n    return sessions.find(session => session.id === sessionId);\n  }, [sessions]);\n\n  // Filter sessions\n  const getActiveSessions = useCallback(() => {\n    return sessions.filter(session => session.isActive);\n  }, [sessions]);\n\n  const getSessionsByCategory = useCallback((category) => {\n    return sessions.filter(session => session.category === category);\n  }, [sessions]);\n\n  // Load sessions on mount\n  useEffect(() => {\n    if (username) {\n      loadSessions();\n    }\n  }, [username, loadSessions]);\n\n  return {\n    sessions,\n    loading,\n    error,\n    loadSessions,\n    createSession,\n    updateSession,\n    deleteSession,\n    getSession,\n    getActiveSessions,\n    getSessionsByCategory,\n    refreshSessions: loadSessions\n  };\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}