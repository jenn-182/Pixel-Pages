{"ast":null,"code":"import { noteAchievements } from './noteAchievements';\nimport { focusAchievements } from './focusAchievements';\nimport { taskAchievements } from './taskAchievements';\nimport { specialAchievements } from './specialAchievements';\n\n// Combine all achievements\nexport const allAchievements = [...noteAchievements, ...focusAchievements, ...taskAchievements, ...specialAchievements];\n\n// Export by category\nexport const achievementsByCategory = {\n  notes: noteAchievements,\n  focus: focusAchievements,\n  tasks: taskAchievements,\n  special: specialAchievements,\n  combo: specialAchievements.filter(a => a.category === 'combo'),\n  meta: specialAchievements.filter(a => a.category === 'meta')\n};\n\n// Export by tier\nexport const achievementsByTier = {\n  common: allAchievements.filter(a => a.tier === 'common'),\n  uncommon: allAchievements.filter(a => a.tier === 'uncommon'),\n  rare: allAchievements.filter(a => a.tier === 'rare'),\n  legendary: allAchievements.filter(a => a.tier === 'legendary')\n};\n\n// Tier colors and info\nexport const tierInfo = {\n  common: {\n    color: '#10B981',\n    name: 'Common',\n    emoji: '游릭',\n    description: 'Easy entry-level unlocks',\n    glow: 'rgba(16, 185, 129, 0.3)'\n  },\n  uncommon: {\n    color: '#3B82F6',\n    name: 'Uncommon',\n    emoji: '游댯',\n    description: 'Regular user milestones',\n    glow: 'rgba(59, 130, 246, 0.3)'\n  },\n  rare: {\n    color: '#8B5CF6',\n    name: 'Rare',\n    emoji: '游릮',\n    description: 'Dedicated user rewards',\n    glow: 'rgba(139, 92, 246, 0.3)'\n  },\n  legendary: {\n    color: '#F59E0B',\n    name: 'Legendary',\n    emoji: '游리',\n    description: 'Elite mastery tier',\n    glow: 'rgba(245, 158, 11, 0.4)'\n  }\n};\n\n// Achievement statistics\nexport const achievementStats = {\n  total: allAchievements.length,\n  byTier: {\n    common: achievementsByTier.common.length,\n    uncommon: achievementsByTier.uncommon.length,\n    rare: achievementsByTier.rare.length,\n    legendary: achievementsByTier.legendary.length\n  },\n  byCategory: {\n    notes: noteAchievements.length,\n    focus: focusAchievements.length,\n    tasks: taskAchievements.length,\n    special: specialAchievements.length\n  }\n};\n\n// Helper functions\nexport const getAchievementById = id => {\n  return allAchievements.find(achievement => achievement.id === id);\n};\nexport const getAchievementsByCategory = category => {\n  return allAchievements.filter(achievement => achievement.category === category);\n};\nexport const getAchievementsByTier = tier => {\n  return allAchievements.filter(achievement => achievement.tier === tier);\n};\nexport const getRandomAchievement = (tier = null) => {\n  const pool = tier ? achievementsByTier[tier] : allAchievements;\n  return pool[Math.floor(Math.random() * pool.length)];\n};\nexport const searchAchievements = query => {\n  const lowercaseQuery = query.toLowerCase();\n  return allAchievements.filter(achievement => achievement.name.toLowerCase().includes(lowercaseQuery) || achievement.description.toLowerCase().includes(lowercaseQuery) || achievement.category.toLowerCase().includes(lowercaseQuery) || achievement.tier.toLowerCase().includes(lowercaseQuery));\n};","map":{"version":3,"names":["noteAchievements","focusAchievements","taskAchievements","specialAchievements","allAchievements","achievementsByCategory","notes","focus","tasks","special","combo","filter","a","category","meta","achievementsByTier","common","tier","uncommon","rare","legendary","tierInfo","color","name","emoji","description","glow","achievementStats","total","length","byTier","byCategory","getAchievementById","id","find","achievement","getAchievementsByCategory","getAchievementsByTier","getRandomAchievement","pool","Math","floor","random","searchAchievements","query","lowercaseQuery","toLowerCase","includes"],"sources":["/Users/jenn/Projects/Pixel-Pages/frontend/src/data/achievements/index.js"],"sourcesContent":["import { noteAchievements } from './noteAchievements';\nimport { focusAchievements } from './focusAchievements';\nimport { taskAchievements } from './taskAchievements';\nimport { specialAchievements } from './specialAchievements';\n\n// Combine all achievements\nexport const allAchievements = [\n  ...noteAchievements,\n  ...focusAchievements,\n  ...taskAchievements,\n  ...specialAchievements\n];\n\n// Export by category\nexport const achievementsByCategory = {\n  notes: noteAchievements,\n  focus: focusAchievements,\n  tasks: taskAchievements,\n  special: specialAchievements,\n  combo: specialAchievements.filter(a => a.category === 'combo'),\n  meta: specialAchievements.filter(a => a.category === 'meta')\n};\n\n// Export by tier\nexport const achievementsByTier = {\n  common: allAchievements.filter(a => a.tier === 'common'),\n  uncommon: allAchievements.filter(a => a.tier === 'uncommon'),\n  rare: allAchievements.filter(a => a.tier === 'rare'),\n  legendary: allAchievements.filter(a => a.tier === 'legendary')\n};\n\n// Tier colors and info\nexport const tierInfo = {\n  common: {\n    color: '#10B981',\n    name: 'Common',\n    emoji: '游릭',\n    description: 'Easy entry-level unlocks',\n    glow: 'rgba(16, 185, 129, 0.3)'\n  },\n  uncommon: {\n    color: '#3B82F6', \n    name: 'Uncommon',\n    emoji: '游댯',\n    description: 'Regular user milestones',\n    glow: 'rgba(59, 130, 246, 0.3)'\n  },\n  rare: {\n    color: '#8B5CF6',\n    name: 'Rare', \n    emoji: '游릮',\n    description: 'Dedicated user rewards',\n    glow: 'rgba(139, 92, 246, 0.3)'\n  },\n  legendary: {\n    color: '#F59E0B',\n    name: 'Legendary',\n    emoji: '游리',\n    description: 'Elite mastery tier',\n    glow: 'rgba(245, 158, 11, 0.4)'\n  }\n};\n\n// Achievement statistics\nexport const achievementStats = {\n  total: allAchievements.length,\n  byTier: {\n    common: achievementsByTier.common.length,\n    uncommon: achievementsByTier.uncommon.length,\n    rare: achievementsByTier.rare.length,\n    legendary: achievementsByTier.legendary.length\n  },\n  byCategory: {\n    notes: noteAchievements.length,\n    focus: focusAchievements.length,\n    tasks: taskAchievements.length,\n    special: specialAchievements.length\n  }\n};\n\n// Helper functions\nexport const getAchievementById = (id) => {\n  return allAchievements.find(achievement => achievement.id === id);\n};\n\nexport const getAchievementsByCategory = (category) => {\n  return allAchievements.filter(achievement => achievement.category === category);\n};\n\nexport const getAchievementsByTier = (tier) => {\n  return allAchievements.filter(achievement => achievement.tier === tier);\n};\n\nexport const getRandomAchievement = (tier = null) => {\n  const pool = tier ? achievementsByTier[tier] : allAchievements;\n  return pool[Math.floor(Math.random() * pool.length)];\n};\n\nexport const searchAchievements = (query) => {\n  const lowercaseQuery = query.toLowerCase();\n  return allAchievements.filter(achievement => \n    achievement.name.toLowerCase().includes(lowercaseQuery) ||\n    achievement.description.toLowerCase().includes(lowercaseQuery) ||\n    achievement.category.toLowerCase().includes(lowercaseQuery) ||\n    achievement.tier.toLowerCase().includes(lowercaseQuery)\n  );\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}