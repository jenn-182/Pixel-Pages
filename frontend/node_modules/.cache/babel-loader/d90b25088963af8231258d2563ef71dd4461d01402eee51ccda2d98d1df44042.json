{"ast":null,"code":"var _s = $RefreshSig$();\n// src/hooks/useNotes.js\nimport { useState, useEffect } from 'react';\nconst useNotes = () => {\n  _s();\n  const [notes, setNotes] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    fetchNotes();\n  }, []);\n  const fetchNotes = async () => {\n    try {\n      setLoading(true);\n      const response = await fetch('/api/notes');\n      if (response.ok) {\n        const data = await response.json();\n        setNotes(data);\n      } else {\n        console.error('Failed to fetch notes:', response.statusText);\n      }\n    } catch (error) {\n      console.error('Error fetching notes:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const createNote = async noteData => {\n    try {\n      const response = await fetch('/api/notes/create', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(noteData)\n      });\n      if (response.ok) {\n        const newNote = await response.json();\n        setNotes(prevNotes => [newNote, ...prevNotes]);\n        return newNote;\n      } else {\n        throw new Error(`Failed to create note: ${response.status}`);\n      }\n    } catch (error) {\n      console.error('Error creating note:', error);\n      throw error;\n    }\n  };\n  const updateNote = async (id, noteData) => {\n    try {\n      const response = await fetch(`/api/notes/${id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(noteData)\n      });\n      if (response.ok) {\n        const updatedNote = await response.json();\n        setNotes(prevNotes => prevNotes.map(note => note.id === id ? updatedNote : note));\n        return updatedNote;\n      } else {\n        throw new Error(`Failed to update note: ${response.status}`);\n      }\n    } catch (error) {\n      console.error('Error updating note:', error);\n      throw error;\n    }\n  };\n  const deleteNote = async id => {\n    try {\n      const response = await fetch(`/api/notes/${id}`, {\n        method: 'DELETE'\n      });\n      if (response.ok) {\n        setNotes(prevNotes => prevNotes.filter(note => note.id !== id));\n      } else {\n        throw new Error(`Failed to delete note: ${response.status}`);\n      }\n    } catch (error) {\n      console.error('Error deleting note:', error);\n      throw error;\n    }\n  };\n  return {\n    notes,\n    loading,\n    createNote,\n    updateNote,\n    deleteNote,\n    refreshNotes: fetchNotes\n  };\n};\n_s(useNotes, \"I4K4w9oJpuKUIeK96G/eoa0AU7g=\");\nexport default useNotes;","map":{"version":3,"names":["useState","useEffect","useNotes","_s","notes","setNotes","loading","setLoading","fetchNotes","response","fetch","ok","data","json","console","error","statusText","createNote","noteData","method","headers","body","JSON","stringify","newNote","prevNotes","Error","status","updateNote","id","updatedNote","map","note","deleteNote","filter","refreshNotes"],"sources":["/Users/jenn/Projects/Pixel-Pages/frontend/src/hooks/useNotes.js"],"sourcesContent":["// src/hooks/useNotes.js\nimport { useState, useEffect } from 'react';\n\nconst useNotes = () => {\n  const [notes, setNotes] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    fetchNotes();\n  }, []);\n\n  const fetchNotes = async () => {\n    try {\n      setLoading(true);\n      const response = await fetch('/api/notes');\n      if (response.ok) {\n        const data = await response.json();\n        setNotes(data);\n      } else {\n        console.error('Failed to fetch notes:', response.statusText);\n      }\n    } catch (error) {\n      console.error('Error fetching notes:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const createNote = async (noteData) => {\n    try {\n      const response = await fetch('/api/notes/create', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(noteData)\n      });\n\n      if (response.ok) {\n        const newNote = await response.json();\n        setNotes(prevNotes => [newNote, ...prevNotes]);\n        return newNote;\n      } else {\n        throw new Error(`Failed to create note: ${response.status}`);\n      }\n    } catch (error) {\n      console.error('Error creating note:', error);\n      throw error;\n    }\n  };\n\n  const updateNote = async (id, noteData) => {\n    try {\n      const response = await fetch(`/api/notes/${id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(noteData)\n      });\n\n      if (response.ok) {\n        const updatedNote = await response.json();\n        setNotes(prevNotes => \n          prevNotes.map(note => note.id === id ? updatedNote : note)\n        );\n        return updatedNote;\n      } else {\n        throw new Error(`Failed to update note: ${response.status}`);\n      }\n    } catch (error) {\n      console.error('Error updating note:', error);\n      throw error;\n    }\n  };\n\n  const deleteNote = async (id) => {\n    try {\n      const response = await fetch(`/api/notes/${id}`, {\n        method: 'DELETE'\n      });\n\n      if (response.ok) {\n        setNotes(prevNotes => prevNotes.filter(note => note.id !== id));\n      } else {\n        throw new Error(`Failed to delete note: ${response.status}`);\n      }\n    } catch (error) {\n      console.error('Error deleting note:', error);\n      throw error;\n    }\n  };\n\n  return {\n    notes,\n    loading,\n    createNote,\n    updateNote,\n    deleteNote,\n    refreshNotes: fetchNotes\n  };\n};\n\nexport default useNotes;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}