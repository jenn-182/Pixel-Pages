{"ast":null,"code":"import{useState,useEffect}from'react';const useFolders=()=>{const[folders,setFolders]=useState([]);const[loading,setLoading]=useState(true);// Fetch folders on component mount\nuseEffect(()=>{fetchFolders();},[]);const fetchFolders=async()=>{try{setLoading(true);const response=await fetch('/api/folders');if(response.ok){const data=await response.json();setFolders(data);}else{console.error('Failed to fetch folders:',response.statusText);}}catch(error){console.error('Error fetching folders:',error);}finally{setLoading(false);}};// CREATE FOLDER - This is where your fetch call goes\nconst createFolder=async folderData=>{try{const response=await fetch('/api/folders/create',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(folderData)});if(response.ok){const newFolder=await response.json();// Add the new folder to the state\nsetFolders(prevFolders=>[...prevFolders,newFolder]);return newFolder;}else{throw new Error(\"Failed to create folder: \".concat(response.status));}}catch(error){console.error('Error creating folder:',error);throw error;}};// UPDATE FOLDER\nconst updateFolder=async(id,folderData)=>{try{const response=await fetch(\"/api/folders/\".concat(id),{method:'PUT',headers:{'Content-Type':'application/json'},body:JSON.stringify(folderData)});if(response.ok){const updatedFolder=await response.json();setFolders(prevFolders=>prevFolders.map(folder=>folder.id===id?updatedFolder:folder));return updatedFolder;}else{throw new Error(\"Failed to update folder: \".concat(response.status));}}catch(error){console.error('Error updating folder:',error);throw error;}};const deleteFolder=async id=>{try{const response=await fetch(\"/api/folders/\".concat(id),{method:'DELETE'});if(response.ok){setFolders(prevFolders=>prevFolders.filter(folder=>folder.id!==id));}else{throw new Error(\"Failed to delete folder: \".concat(response.status));}}catch(error){console.error('Error deleting folder:',error);throw error;}};return{folders,loading,createFolder,updateFolder,deleteFolder,// ✅ Export delete function\nrefreshFolders:fetchFolders};};export default useFolders;","map":{"version":3,"names":["useState","useEffect","useFolders","folders","setFolders","loading","setLoading","fetchFolders","response","fetch","ok","data","json","console","error","statusText","createFolder","folderData","method","headers","body","JSON","stringify","newFolder","prevFolders","Error","concat","status","updateFolder","id","updatedFolder","map","folder","deleteFolder","filter","refreshFolders"],"sources":["/Users/jenn/Projects/Pixel-Pages/frontend/src/hooks/useFolders.js"],"sourcesContent":["import { useState, useEffect } from 'react';\n\nconst useFolders = () => {\n  const [folders, setFolders] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  // Fetch folders on component mount\n  useEffect(() => {\n    fetchFolders();\n  }, []);\n\n  const fetchFolders = async () => {\n    try {\n      setLoading(true);\n      const response = await fetch('/api/folders');\n      if (response.ok) {\n        const data = await response.json();\n        setFolders(data);\n      } else {\n        console.error('Failed to fetch folders:', response.statusText);\n      }\n    } catch (error) {\n      console.error('Error fetching folders:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // CREATE FOLDER - This is where your fetch call goes\n  const createFolder = async (folderData) => {\n    try {\n      const response = await fetch('/api/folders/create', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(folderData)\n      });\n\n      if (response.ok) {\n        const newFolder = await response.json();\n        // Add the new folder to the state\n        setFolders(prevFolders => [...prevFolders, newFolder]);\n        return newFolder;\n      } else {\n        throw new Error(`Failed to create folder: ${response.status}`);\n      }\n    } catch (error) {\n      console.error('Error creating folder:', error);\n      throw error;\n    }\n  };\n\n  // UPDATE FOLDER\n  const updateFolder = async (id, folderData) => {\n    try {\n      const response = await fetch(`/api/folders/${id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(folderData)\n      });\n\n      if (response.ok) {\n        const updatedFolder = await response.json();\n        setFolders(prevFolders => \n          prevFolders.map(folder => folder.id === id ? updatedFolder : folder)\n        );\n        return updatedFolder;\n      } else {\n        throw new Error(`Failed to update folder: ${response.status}`);\n      }\n    } catch (error) {\n      console.error('Error updating folder:', error);\n      throw error;\n    }\n  };\n\n  const deleteFolder = async (id) => {\n    try {\n      const response = await fetch(`/api/folders/${id}`, {\n        method: 'DELETE'\n      });\n\n      if (response.ok) {\n        setFolders(prevFolders => prevFolders.filter(folder => folder.id !== id));\n      } else {\n        throw new Error(`Failed to delete folder: ${response.status}`);\n      }\n    } catch (error) {\n      console.error('Error deleting folder:', error);\n      throw error;\n    }\n  };\n\n  return {\n    folders,\n    loading,\n    createFolder,\n    updateFolder,\n    deleteFolder, // ✅ Export delete function\n    refreshFolders: fetchFolders\n  };\n};\n\nexport default useFolders;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}