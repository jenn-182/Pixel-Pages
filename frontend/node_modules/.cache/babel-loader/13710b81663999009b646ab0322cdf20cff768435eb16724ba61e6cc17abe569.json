{"ast":null,"code":"import{useState,useEffect,useCallback}from'react';import apiService from'../services/api';export const useAchievements=()=>{const[achievements,setAchievements]=useState([]);const[loading,setLoading]=useState(true);const[error,setError]=useState(null);const[summary,setSummary]=useState({total:0,completed:0,inProgress:0,locked:0});const fetchAchievements=useCallback(async()=>{try{setLoading(true);setError(null);const response=await apiService.getAchievements();// Handle gaming response format\nconst achievementData=response.data||response;setAchievements(achievementData);if(response.summary){setSummary(response.summary);}else{// Calculate summary from data\nconst completed=achievementData.filter(a=>a.isCompleted).length;const inProgress=achievementData.filter(a=>a.progress>0&&!a.isCompleted).length;setSummary({total:achievementData.length,completed,inProgress,locked:achievementData.length-completed-inProgress});}}catch(err){setError('Failed to fetch achievements');console.error('Error fetching achievements:',err);}finally{setLoading(false);}},[]);useEffect(()=>{fetchAchievements();},[fetchAchievements]);return{achievements,summary,loading,error,refreshAchievements:fetchAchievements};};","map":{"version":3,"names":["useState","useEffect","useCallback","apiService","useAchievements","achievements","setAchievements","loading","setLoading","error","setError","summary","setSummary","total","completed","inProgress","locked","fetchAchievements","response","getAchievements","achievementData","data","filter","a","isCompleted","length","progress","err","console","refreshAchievements"],"sources":["/Users/jenn/Projects/Pixel-Pages/frontend/src/hooks/useAchievements.js"],"sourcesContent":["import { useState, useEffect, useCallback } from 'react';\nimport apiService from '../services/api';\n\nexport const useAchievements = () => {\n  const [achievements, setAchievements] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [summary, setSummary] = useState({\n    total: 0,\n    completed: 0,\n    inProgress: 0,\n    locked: 0\n  });\n\n  const fetchAchievements = useCallback(async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      const response = await apiService.getAchievements();\n      \n      // Handle gaming response format\n      const achievementData = response.data || response;\n      setAchievements(achievementData);\n      \n      if (response.summary) {\n        setSummary(response.summary);\n      } else {\n        // Calculate summary from data\n        const completed = achievementData.filter(a => a.isCompleted).length;\n        const inProgress = achievementData.filter(a => a.progress > 0 && !a.isCompleted).length;\n        setSummary({\n          total: achievementData.length,\n          completed,\n          inProgress,\n          locked: achievementData.length - completed - inProgress\n        });\n      }\n    } catch (err) {\n      setError('Failed to fetch achievements');\n      console.error('Error fetching achievements:', err);\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  useEffect(() => {\n    fetchAchievements();\n  }, [fetchAchievements]);\n\n  return {\n    achievements,\n    summary,\n    loading,\n    error,\n    refreshAchievements: fetchAchievements,\n  };\n};"],"mappings":"AAAA,OAASA,QAAQ,CAAEC,SAAS,CAAEC,WAAW,KAAQ,OAAO,CACxD,MAAO,CAAAC,UAAU,KAAM,iBAAiB,CAExC,MAAO,MAAM,CAAAC,eAAe,CAAGA,CAAA,GAAM,CACnC,KAAM,CAACC,YAAY,CAAEC,eAAe,CAAC,CAAGN,QAAQ,CAAC,EAAE,CAAC,CACpD,KAAM,CAACO,OAAO,CAAEC,UAAU,CAAC,CAAGR,QAAQ,CAAC,IAAI,CAAC,CAC5C,KAAM,CAACS,KAAK,CAAEC,QAAQ,CAAC,CAAGV,QAAQ,CAAC,IAAI,CAAC,CACxC,KAAM,CAACW,OAAO,CAAEC,UAAU,CAAC,CAAGZ,QAAQ,CAAC,CACrCa,KAAK,CAAE,CAAC,CACRC,SAAS,CAAE,CAAC,CACZC,UAAU,CAAE,CAAC,CACbC,MAAM,CAAE,CACV,CAAC,CAAC,CAEF,KAAM,CAAAC,iBAAiB,CAAGf,WAAW,CAAC,SAAY,CAChD,GAAI,CACFM,UAAU,CAAC,IAAI,CAAC,CAChBE,QAAQ,CAAC,IAAI,CAAC,CACd,KAAM,CAAAQ,QAAQ,CAAG,KAAM,CAAAf,UAAU,CAACgB,eAAe,CAAC,CAAC,CAEnD;AACA,KAAM,CAAAC,eAAe,CAAGF,QAAQ,CAACG,IAAI,EAAIH,QAAQ,CACjDZ,eAAe,CAACc,eAAe,CAAC,CAEhC,GAAIF,QAAQ,CAACP,OAAO,CAAE,CACpBC,UAAU,CAACM,QAAQ,CAACP,OAAO,CAAC,CAC9B,CAAC,IAAM,CACL;AACA,KAAM,CAAAG,SAAS,CAAGM,eAAe,CAACE,MAAM,CAACC,CAAC,EAAIA,CAAC,CAACC,WAAW,CAAC,CAACC,MAAM,CACnE,KAAM,CAAAV,UAAU,CAAGK,eAAe,CAACE,MAAM,CAACC,CAAC,EAAIA,CAAC,CAACG,QAAQ,CAAG,CAAC,EAAI,CAACH,CAAC,CAACC,WAAW,CAAC,CAACC,MAAM,CACvFb,UAAU,CAAC,CACTC,KAAK,CAAEO,eAAe,CAACK,MAAM,CAC7BX,SAAS,CACTC,UAAU,CACVC,MAAM,CAAEI,eAAe,CAACK,MAAM,CAAGX,SAAS,CAAGC,UAC/C,CAAC,CAAC,CACJ,CACF,CAAE,MAAOY,GAAG,CAAE,CACZjB,QAAQ,CAAC,8BAA8B,CAAC,CACxCkB,OAAO,CAACnB,KAAK,CAAC,8BAA8B,CAAEkB,GAAG,CAAC,CACpD,CAAC,OAAS,CACRnB,UAAU,CAAC,KAAK,CAAC,CACnB,CACF,CAAC,CAAE,EAAE,CAAC,CAENP,SAAS,CAAC,IAAM,CACdgB,iBAAiB,CAAC,CAAC,CACrB,CAAC,CAAE,CAACA,iBAAiB,CAAC,CAAC,CAEvB,MAAO,CACLZ,YAAY,CACZM,OAAO,CACPJ,OAAO,CACPE,KAAK,CACLoB,mBAAmB,CAAEZ,iBACvB,CAAC,CACH,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}