{"ast":null,"code":"import{noteAchievements}from'./noteAchievements';import{focusAchievements}from'./focusAchievements';import{taskAchievements}from'./taskAchievements';import{specialAchievements}from'./specialAchievements';// Combine all achievements\nexport const allAchievements=[...noteAchievements,...focusAchievements,...taskAchievements,...specialAchievements];// Export by category\nexport const achievementsByCategory={notes:noteAchievements,focus:focusAchievements,tasks:taskAchievements,special:specialAchievements,combo:specialAchievements.filter(a=>a.category==='combo'),meta:specialAchievements.filter(a=>a.category==='meta')};// Export by tier\nexport const achievementsByTier={common:allAchievements.filter(a=>a.tier==='common'),uncommon:allAchievements.filter(a=>a.tier==='uncommon'),rare:allAchievements.filter(a=>a.tier==='rare'),legendary:allAchievements.filter(a=>a.tier==='legendary')};// Tier colors and info\nexport const tierInfo={common:{color:'#10B981',name:'Common',emoji:'游릭',description:'Easy entry-level unlocks',glow:'rgba(16, 185, 129, 0.3)'},uncommon:{color:'#3B82F6',name:'Uncommon',emoji:'游댯',description:'Regular user milestones',glow:'rgba(59, 130, 246, 0.3)'},rare:{color:'#8B5CF6',name:'Rare',emoji:'游릮',description:'Dedicated user rewards',glow:'rgba(139, 92, 246, 0.3)'},legendary:{color:'#F59E0B',name:'Legendary',emoji:'游리',description:'Elite mastery tier',glow:'rgba(245, 158, 11, 0.4)'}};// Achievement statistics\nexport const achievementStats={total:allAchievements.length,byTier:{common:achievementsByTier.common.length,uncommon:achievementsByTier.uncommon.length,rare:achievementsByTier.rare.length,legendary:achievementsByTier.legendary.length},byCategory:{notes:noteAchievements.length,focus:focusAchievements.length,tasks:taskAchievements.length,special:specialAchievements.length}};// Helper functions\nexport const getAchievementById=id=>{return allAchievements.find(achievement=>achievement.id===id);};export const getAchievementsByCategory=category=>{return allAchievements.filter(achievement=>achievement.category===category);};export const getAchievementsByTier=tier=>{return allAchievements.filter(achievement=>achievement.tier===tier);};export const getRandomAchievement=function(){let tier=arguments.length>0&&arguments[0]!==undefined?arguments[0]:null;const pool=tier?achievementsByTier[tier]:allAchievements;return pool[Math.floor(Math.random()*pool.length)];};export const searchAchievements=query=>{const lowercaseQuery=query.toLowerCase();return allAchievements.filter(achievement=>achievement.name.toLowerCase().includes(lowercaseQuery)||achievement.description.toLowerCase().includes(lowercaseQuery)||achievement.category.toLowerCase().includes(lowercaseQuery)||achievement.tier.toLowerCase().includes(lowercaseQuery));};","map":{"version":3,"names":["noteAchievements","focusAchievements","taskAchievements","specialAchievements","allAchievements","achievementsByCategory","notes","focus","tasks","special","combo","filter","a","category","meta","achievementsByTier","common","tier","uncommon","rare","legendary","tierInfo","color","name","emoji","description","glow","achievementStats","total","length","byTier","byCategory","getAchievementById","id","find","achievement","getAchievementsByCategory","getAchievementsByTier","getRandomAchievement","arguments","undefined","pool","Math","floor","random","searchAchievements","query","lowercaseQuery","toLowerCase","includes"],"sources":["/Users/jenn/Projects/Pixel-Pages/frontend/src/data/achievements/index.js"],"sourcesContent":["import { noteAchievements } from './noteAchievements';\nimport { focusAchievements } from './focusAchievements';\nimport { taskAchievements } from './taskAchievements';\nimport { specialAchievements } from './specialAchievements';\n\n// Combine all achievements\nexport const allAchievements = [\n  ...noteAchievements,\n  ...focusAchievements,\n  ...taskAchievements,\n  ...specialAchievements\n];\n\n// Export by category\nexport const achievementsByCategory = {\n  notes: noteAchievements,\n  focus: focusAchievements,\n  tasks: taskAchievements,\n  special: specialAchievements,\n  combo: specialAchievements.filter(a => a.category === 'combo'),\n  meta: specialAchievements.filter(a => a.category === 'meta')\n};\n\n// Export by tier\nexport const achievementsByTier = {\n  common: allAchievements.filter(a => a.tier === 'common'),\n  uncommon: allAchievements.filter(a => a.tier === 'uncommon'),\n  rare: allAchievements.filter(a => a.tier === 'rare'),\n  legendary: allAchievements.filter(a => a.tier === 'legendary')\n};\n\n// Tier colors and info\nexport const tierInfo = {\n  common: {\n    color: '#10B981',\n    name: 'Common',\n    emoji: '游릭',\n    description: 'Easy entry-level unlocks',\n    glow: 'rgba(16, 185, 129, 0.3)'\n  },\n  uncommon: {\n    color: '#3B82F6', \n    name: 'Uncommon',\n    emoji: '游댯',\n    description: 'Regular user milestones',\n    glow: 'rgba(59, 130, 246, 0.3)'\n  },\n  rare: {\n    color: '#8B5CF6',\n    name: 'Rare', \n    emoji: '游릮',\n    description: 'Dedicated user rewards',\n    glow: 'rgba(139, 92, 246, 0.3)'\n  },\n  legendary: {\n    color: '#F59E0B',\n    name: 'Legendary',\n    emoji: '游리',\n    description: 'Elite mastery tier',\n    glow: 'rgba(245, 158, 11, 0.4)'\n  }\n};\n\n// Achievement statistics\nexport const achievementStats = {\n  total: allAchievements.length,\n  byTier: {\n    common: achievementsByTier.common.length,\n    uncommon: achievementsByTier.uncommon.length,\n    rare: achievementsByTier.rare.length,\n    legendary: achievementsByTier.legendary.length\n  },\n  byCategory: {\n    notes: noteAchievements.length,\n    focus: focusAchievements.length,\n    tasks: taskAchievements.length,\n    special: specialAchievements.length\n  }\n};\n\n// Helper functions\nexport const getAchievementById = (id) => {\n  return allAchievements.find(achievement => achievement.id === id);\n};\n\nexport const getAchievementsByCategory = (category) => {\n  return allAchievements.filter(achievement => achievement.category === category);\n};\n\nexport const getAchievementsByTier = (tier) => {\n  return allAchievements.filter(achievement => achievement.tier === tier);\n};\n\nexport const getRandomAchievement = (tier = null) => {\n  const pool = tier ? achievementsByTier[tier] : allAchievements;\n  return pool[Math.floor(Math.random() * pool.length)];\n};\n\nexport const searchAchievements = (query) => {\n  const lowercaseQuery = query.toLowerCase();\n  return allAchievements.filter(achievement => \n    achievement.name.toLowerCase().includes(lowercaseQuery) ||\n    achievement.description.toLowerCase().includes(lowercaseQuery) ||\n    achievement.category.toLowerCase().includes(lowercaseQuery) ||\n    achievement.tier.toLowerCase().includes(lowercaseQuery)\n  );\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}