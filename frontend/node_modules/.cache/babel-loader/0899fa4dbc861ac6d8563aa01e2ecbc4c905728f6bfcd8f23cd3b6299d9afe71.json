{"ast":null,"code":"var _jsxFileName = \"/Users/jenn/Projects/Pixel-Pages/frontend/src/components/profile/LogStatsSection.jsx\";\nimport React from 'react';\nimport { Clock, Calendar, Trophy, Target } from 'lucide-react';\n\n/**\n * Log Stats Section Component\n * Displays user statistics like total time, sessions, achievements, etc.\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LogStatsSection = ({\n  totalTimeMinutes,\n  totalSessions,\n  achievementStats,\n  className = \"\"\n}) => {\n  // Convert minutes to hours and minutes for display\n  const formatTime = minutes => {\n    const hours = Math.floor(minutes / 60);\n    const mins = minutes % 60;\n    if (hours > 0) {\n      return `${hours}h ${mins}m`;\n    }\n    return `${mins}m`;\n  };\n  const stats = [{\n    icon: Clock,\n    label: 'Total Time',\n    value: formatTime(totalTimeMinutes),\n    color: 'text-blue-400'\n  }, {\n    icon: Calendar,\n    label: 'Sessions',\n    value: totalSessions.toString(),\n    color: 'text-green-400'\n  }, {\n    icon: Trophy,\n    label: 'Achievements',\n    value: `${achievementStats.unlocked}/${achievementStats.total}`,\n    color: 'text-yellow-400'\n  }, {\n    icon: Target,\n    label: 'Completion',\n    value: achievementStats.total > 0 ? `${Math.round(achievementStats.unlocked / achievementStats.total * 100)}%` : '0%',\n    color: 'text-purple-400'\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: className,\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"text-lg font-semibold text-white mb-4 flex items-center gap-2\",\n      children: [/*#__PURE__*/_jsxDEV(Target, {\n        className: \"text-blue-400\",\n        size: 20\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), \"Log Stats\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-2 gap-4\",\n      children: stats.map((stat, index) => {\n        const IconComponent = stat.icon;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-gray-800/30 border border-gray-700/50 rounded-lg p-4 text-center hover:bg-gray-800/40 transition-colors\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center justify-center mb-2\",\n            children: /*#__PURE__*/_jsxDEV(IconComponent, {\n              className: stat.color,\n              size: 20\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-lg font-bold text-white mb-1\",\n            children: stat.value\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-xs text-gray-400\",\n            children: stat.label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_c = LogStatsSection;\nexport default LogStatsSection;\nvar _c;\n$RefreshReg$(_c, \"LogStatsSection\");","map":{"version":3,"names":["React","Clock","Calendar","Trophy","Target","jsxDEV","_jsxDEV","LogStatsSection","totalTimeMinutes","totalSessions","achievementStats","className","formatTime","minutes","hours","Math","floor","mins","stats","icon","label","value","color","toString","unlocked","total","round","children","size","fileName","_jsxFileName","lineNumber","columnNumber","map","stat","index","IconComponent","_c","$RefreshReg$"],"sources":["/Users/jenn/Projects/Pixel-Pages/frontend/src/components/profile/LogStatsSection.jsx"],"sourcesContent":["import React from 'react';\nimport { Clock, Calendar, Trophy, Target } from 'lucide-react';\n\n/**\n * Log Stats Section Component\n * Displays user statistics like total time, sessions, achievements, etc.\n */\nconst LogStatsSection = ({ \n  totalTimeMinutes, \n  totalSessions, \n  achievementStats,\n  className = \"\" \n}) => {\n  // Convert minutes to hours and minutes for display\n  const formatTime = (minutes) => {\n    const hours = Math.floor(minutes / 60);\n    const mins = minutes % 60;\n    if (hours > 0) {\n      return `${hours}h ${mins}m`;\n    }\n    return `${mins}m`;\n  };\n\n  const stats = [\n    {\n      icon: Clock,\n      label: 'Total Time',\n      value: formatTime(totalTimeMinutes),\n      color: 'text-blue-400'\n    },\n    {\n      icon: Calendar,\n      label: 'Sessions',\n      value: totalSessions.toString(),\n      color: 'text-green-400'\n    },\n    {\n      icon: Trophy,\n      label: 'Achievements',\n      value: `${achievementStats.unlocked}/${achievementStats.total}`,\n      color: 'text-yellow-400'\n    },\n    {\n      icon: Target,\n      label: 'Completion',\n      value: achievementStats.total > 0 \n        ? `${Math.round((achievementStats.unlocked / achievementStats.total) * 100)}%`\n        : '0%',\n      color: 'text-purple-400'\n    }\n  ];\n\n  return (\n    <div className={className}>\n      {/* Section Header */}\n      <h3 className=\"text-lg font-semibold text-white mb-4 flex items-center gap-2\">\n        <Target className=\"text-blue-400\" size={20} />\n        Log Stats\n      </h3>\n\n      {/* Stats Grid */}\n      <div className=\"grid grid-cols-2 gap-4\">\n        {stats.map((stat, index) => {\n          const IconComponent = stat.icon;\n          return (\n            <div\n              key={index}\n              className=\"bg-gray-800/30 border border-gray-700/50 rounded-lg p-4 text-center hover:bg-gray-800/40 transition-colors\"\n            >\n              <div className=\"flex items-center justify-center mb-2\">\n                <IconComponent className={stat.color} size={20} />\n              </div>\n              <div className=\"text-lg font-bold text-white mb-1\">\n                {stat.value}\n              </div>\n              <div className=\"text-xs text-gray-400\">\n                {stat.label}\n              </div>\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default LogStatsSection;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,KAAK,EAAEC,QAAQ,EAAEC,MAAM,EAAEC,MAAM,QAAQ,cAAc;;AAE9D;AACA;AACA;AACA;AAHA,SAAAC,MAAA,IAAAC,OAAA;AAIA,MAAMC,eAAe,GAAGA,CAAC;EACvBC,gBAAgB;EAChBC,aAAa;EACbC,gBAAgB;EAChBC,SAAS,GAAG;AACd,CAAC,KAAK;EACJ;EACA,MAAMC,UAAU,GAAIC,OAAO,IAAK;IAC9B,MAAMC,KAAK,GAAGC,IAAI,CAACC,KAAK,CAACH,OAAO,GAAG,EAAE,CAAC;IACtC,MAAMI,IAAI,GAAGJ,OAAO,GAAG,EAAE;IACzB,IAAIC,KAAK,GAAG,CAAC,EAAE;MACb,OAAO,GAAGA,KAAK,KAAKG,IAAI,GAAG;IAC7B;IACA,OAAO,GAAGA,IAAI,GAAG;EACnB,CAAC;EAED,MAAMC,KAAK,GAAG,CACZ;IACEC,IAAI,EAAElB,KAAK;IACXmB,KAAK,EAAE,YAAY;IACnBC,KAAK,EAAET,UAAU,CAACJ,gBAAgB,CAAC;IACnCc,KAAK,EAAE;EACT,CAAC,EACD;IACEH,IAAI,EAAEjB,QAAQ;IACdkB,KAAK,EAAE,UAAU;IACjBC,KAAK,EAAEZ,aAAa,CAACc,QAAQ,CAAC,CAAC;IAC/BD,KAAK,EAAE;EACT,CAAC,EACD;IACEH,IAAI,EAAEhB,MAAM;IACZiB,KAAK,EAAE,cAAc;IACrBC,KAAK,EAAE,GAAGX,gBAAgB,CAACc,QAAQ,IAAId,gBAAgB,CAACe,KAAK,EAAE;IAC/DH,KAAK,EAAE;EACT,CAAC,EACD;IACEH,IAAI,EAAEf,MAAM;IACZgB,KAAK,EAAE,YAAY;IACnBC,KAAK,EAAEX,gBAAgB,CAACe,KAAK,GAAG,CAAC,GAC7B,GAAGV,IAAI,CAACW,KAAK,CAAEhB,gBAAgB,CAACc,QAAQ,GAAGd,gBAAgB,CAACe,KAAK,GAAI,GAAG,CAAC,GAAG,GAC5E,IAAI;IACRH,KAAK,EAAE;EACT,CAAC,CACF;EAED,oBACEhB,OAAA;IAAKK,SAAS,EAAEA,SAAU;IAAAgB,QAAA,gBAExBrB,OAAA;MAAIK,SAAS,EAAC,+DAA+D;MAAAgB,QAAA,gBAC3ErB,OAAA,CAACF,MAAM;QAACO,SAAS,EAAC,eAAe;QAACiB,IAAI,EAAE;MAAG;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,aAEhD;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAGL1B,OAAA;MAAKK,SAAS,EAAC,wBAAwB;MAAAgB,QAAA,EACpCT,KAAK,CAACe,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,KAAK;QAC1B,MAAMC,aAAa,GAAGF,IAAI,CAACf,IAAI;QAC/B,oBACEb,OAAA;UAEEK,SAAS,EAAC,4GAA4G;UAAAgB,QAAA,gBAEtHrB,OAAA;YAAKK,SAAS,EAAC,uCAAuC;YAAAgB,QAAA,eACpDrB,OAAA,CAAC8B,aAAa;cAACzB,SAAS,EAAEuB,IAAI,CAACZ,KAAM;cAACM,IAAI,EAAE;YAAG;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC/C,CAAC,eACN1B,OAAA;YAAKK,SAAS,EAAC,mCAAmC;YAAAgB,QAAA,EAC/CO,IAAI,CAACb;UAAK;YAAAQ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACR,CAAC,eACN1B,OAAA;YAAKK,SAAS,EAAC,uBAAuB;YAAAgB,QAAA,EACnCO,IAAI,CAACd;UAAK;YAAAS,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACR,CAAC;QAAA,GAXDG,KAAK;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAYP,CAAC;MAEV,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACK,EAAA,GA7EI9B,eAAe;AA+ErB,eAAeA,eAAe;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}