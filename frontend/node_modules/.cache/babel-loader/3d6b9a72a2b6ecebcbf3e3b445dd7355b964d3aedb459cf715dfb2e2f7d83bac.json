{"ast":null,"code":"// Default player information\nconst defaultPlayerInfo = {\n  nickname: '',\n  country: '',\n  age: '',\n  favoriteSkill: '',\n  dreamCareer: '',\n  favoriteGame: ''\n};\n\n// Skill branches from your skill tree\nexport const skillBranches = ['Scholar', 'Profession', 'Artisan', 'Scribe', 'Programming', 'Literacy', 'Strategist', 'Mindfulness', 'Knowledge'];\n\n// Countries dropdown options\nexport const countries = ['United States', 'Canada', 'United Kingdom', 'Australia', 'Germany', 'France', 'Spain', 'Italy', 'Netherlands', 'Sweden', 'Norway', 'Denmark', 'Finland', 'Japan', 'South Korea', 'China', 'India', 'Brazil', 'Mexico', 'Argentina', 'Chile', 'South Africa', 'Egypt', 'Nigeria', 'Kenya', 'Russia', 'Poland', 'Czech Republic', 'Hungary', 'Greece', 'Turkey', 'Israel', 'New Zealand', 'Singapore', 'Thailand', 'Philippines', 'Indonesia', 'Malaysia', 'Vietnam', 'Other'];\n\n// Get saved player info or return defaults\nexport const getPlayerInfo = () => {\n  try {\n    const saved = localStorage.getItem('playerInfo');\n    return saved ? {\n      ...defaultPlayerInfo,\n      ...JSON.parse(saved)\n    } : defaultPlayerInfo;\n  } catch (error) {\n    console.error('Error loading player info:', error);\n    return defaultPlayerInfo;\n  }\n};\n\n// Save player info to localStorage\nexport const savePlayerInfo = playerInfo => {\n  try {\n    localStorage.setItem('playerInfo', JSON.stringify(playerInfo));\n  } catch (error) {\n    console.error('Error saving player info:', error);\n  }\n};\nexport { defaultPlayerInfo };","map":{"version":3,"names":["defaultPlayerInfo","nickname","country","age","favoriteSkill","dreamCareer","favoriteGame","skillBranches","countries","getPlayerInfo","saved","localStorage","getItem","JSON","parse","error","console","savePlayerInfo","playerInfo","setItem","stringify"],"sources":["/Users/jenn/Projects/Pixel-Pages/frontend/src/data/playerInfo.js"],"sourcesContent":["// Default player information\nconst defaultPlayerInfo = {\n  nickname: '',\n  country: '',\n  age: '',\n  favoriteSkill: '',\n  dreamCareer: '',\n  favoriteGame: ''\n};\n\n// Skill branches from your skill tree\nexport const skillBranches = [\n  'Scholar',\n  'Profession', \n  'Artisan',\n  'Scribe',\n  'Programming',\n  'Literacy',\n  'Strategist',\n  'Mindfulness',\n  'Knowledge'\n];\n\n// Countries dropdown options\nexport const countries = [\n  'United States',\n  'Canada',\n  'United Kingdom',\n  'Australia',\n  'Germany',\n  'France',\n  'Spain',\n  'Italy',\n  'Netherlands',\n  'Sweden',\n  'Norway',\n  'Denmark',\n  'Finland',\n  'Japan',\n  'South Korea',\n  'China',\n  'India',\n  'Brazil',\n  'Mexico',\n  'Argentina',\n  'Chile',\n  'South Africa',\n  'Egypt',\n  'Nigeria',\n  'Kenya',\n  'Russia',\n  'Poland',\n  'Czech Republic',\n  'Hungary',\n  'Greece',\n  'Turkey',\n  'Israel',\n  'New Zealand',\n  'Singapore',\n  'Thailand',\n  'Philippines',\n  'Indonesia',\n  'Malaysia',\n  'Vietnam',\n  'Other'\n];\n\n// Get saved player info or return defaults\nexport const getPlayerInfo = () => {\n  try {\n    const saved = localStorage.getItem('playerInfo');\n    return saved ? { ...defaultPlayerInfo, ...JSON.parse(saved) } : defaultPlayerInfo;\n  } catch (error) {\n    console.error('Error loading player info:', error);\n    return defaultPlayerInfo;\n  }\n};\n\n// Save player info to localStorage\nexport const savePlayerInfo = (playerInfo) => {\n  try {\n    localStorage.setItem('playerInfo', JSON.stringify(playerInfo));\n  } catch (error) {\n    console.error('Error saving player info:', error);\n  }\n};\n\nexport { defaultPlayerInfo };"],"mappings":"AAAA;AACA,MAAMA,iBAAiB,GAAG;EACxBC,QAAQ,EAAE,EAAE;EACZC,OAAO,EAAE,EAAE;EACXC,GAAG,EAAE,EAAE;EACPC,aAAa,EAAE,EAAE;EACjBC,WAAW,EAAE,EAAE;EACfC,YAAY,EAAE;AAChB,CAAC;;AAED;AACA,OAAO,MAAMC,aAAa,GAAG,CAC3B,SAAS,EACT,YAAY,EACZ,SAAS,EACT,QAAQ,EACR,aAAa,EACb,UAAU,EACV,YAAY,EACZ,aAAa,EACb,WAAW,CACZ;;AAED;AACA,OAAO,MAAMC,SAAS,GAAG,CACvB,eAAe,EACf,QAAQ,EACR,gBAAgB,EAChB,WAAW,EACX,SAAS,EACT,QAAQ,EACR,OAAO,EACP,OAAO,EACP,aAAa,EACb,QAAQ,EACR,QAAQ,EACR,SAAS,EACT,SAAS,EACT,OAAO,EACP,aAAa,EACb,OAAO,EACP,OAAO,EACP,QAAQ,EACR,QAAQ,EACR,WAAW,EACX,OAAO,EACP,cAAc,EACd,OAAO,EACP,SAAS,EACT,OAAO,EACP,QAAQ,EACR,QAAQ,EACR,gBAAgB,EAChB,SAAS,EACT,QAAQ,EACR,QAAQ,EACR,QAAQ,EACR,aAAa,EACb,WAAW,EACX,UAAU,EACV,aAAa,EACb,WAAW,EACX,UAAU,EACV,SAAS,EACT,OAAO,CACR;;AAED;AACA,OAAO,MAAMC,aAAa,GAAGA,CAAA,KAAM;EACjC,IAAI;IACF,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC;IAChD,OAAOF,KAAK,GAAG;MAAE,GAAGV,iBAAiB;MAAE,GAAGa,IAAI,CAACC,KAAK,CAACJ,KAAK;IAAE,CAAC,GAAGV,iBAAiB;EACnF,CAAC,CAAC,OAAOe,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IAClD,OAAOf,iBAAiB;EAC1B;AACF,CAAC;;AAED;AACA,OAAO,MAAMiB,cAAc,GAAIC,UAAU,IAAK;EAC5C,IAAI;IACFP,YAAY,CAACQ,OAAO,CAAC,YAAY,EAAEN,IAAI,CAACO,SAAS,CAACF,UAAU,CAAC,CAAC;EAChE,CAAC,CAAC,OAAOH,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;EACnD;AACF,CAAC;AAED,SAASf,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}