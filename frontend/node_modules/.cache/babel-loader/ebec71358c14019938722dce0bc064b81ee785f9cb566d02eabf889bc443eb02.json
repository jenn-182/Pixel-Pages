{"ast":null,"code":"export const playerRanks = [\n// Beginner Ranks (Levels 1-10)\n{\n  level: 1,\n  name: 'PIXEL NOVICE',\n  minXP: 0,\n  color: '#9CA3AF',\n  icon: '🌱',\n  gradient: 'from-gray-400 to-gray-600'\n}, {\n  level: 2,\n  name: 'DATA SEEKER',\n  minXP: 100,\n  color: '#9CA3AF',\n  icon: '🔍',\n  gradient: 'from-gray-400 to-gray-600'\n}, {\n  level: 3,\n  name: 'LOG KEEPER',\n  minXP: 250,\n  color: '#9CA3AF',\n  icon: '📝',\n  gradient: 'from-gray-400 to-gray-600'\n}, {\n  level: 4,\n  name: 'BYTE WARRIOR',\n  minXP: 450,\n  color: '#9CA3AF',\n  icon: '⚔️',\n  gradient: 'from-gray-400 to-gray-600'\n}, {\n  level: 5,\n  name: 'CODE SCOUT',\n  minXP: 700,\n  color: '#9CA3AF',\n  icon: '🎯',\n  gradient: 'from-gray-400 to-gray-600'\n},\n// Intermediate Ranks (Levels 6-15)\n{\n  level: 6,\n  name: 'DIGITAL RANGER',\n  minXP: 1000,\n  color: '#10B981',\n  icon: '🏹',\n  gradient: 'from-green-400 to-green-600'\n}, {\n  level: 7,\n  name: 'CYBER GUARDIAN',\n  minXP: 1350,\n  color: '#10B981',\n  icon: '🛡️',\n  gradient: 'from-green-400 to-green-600'\n}, {\n  level: 8,\n  name: 'MATRIX EXPLORER',\n  minXP: 1750,\n  color: '#10B981',\n  icon: '🗺️',\n  gradient: 'from-green-400 to-green-600'\n}, {\n  level: 9,\n  name: 'PIXEL KNIGHT',\n  minXP: 2200,\n  color: '#10B981',\n  icon: '🗡️',\n  gradient: 'from-green-400 to-green-600'\n}, {\n  level: 10,\n  name: 'DATA CHAMPION',\n  minXP: 2700,\n  color: '#10B981',\n  icon: '🏆',\n  gradient: 'from-green-400 to-green-600'\n},\n// Advanced Ranks (Levels 11-25)\n{\n  level: 11,\n  name: 'BYTE COMMANDER',\n  minXP: 3250,\n  color: '#3B82F6',\n  icon: '⭐',\n  gradient: 'from-blue-400 to-blue-600'\n}, {\n  level: 12,\n  name: 'LOGIC OVERLORD',\n  minXP: 3850,\n  color: '#3B82F6',\n  icon: '🔮',\n  gradient: 'from-blue-400 to-blue-600'\n}, {\n  level: 13,\n  name: 'SYSTEM ARCHITECT',\n  minXP: 4500,\n  color: '#3B82F6',\n  icon: '🏗️',\n  gradient: 'from-blue-400 to-blue-600'\n}, {\n  level: 14,\n  name: 'NEURAL HACKER',\n  minXP: 5200,\n  color: '#3B82F6',\n  icon: '🧠',\n  gradient: 'from-blue-400 to-blue-600'\n}, {\n  level: 15,\n  name: 'QUANTUM ANALYST',\n  minXP: 5950,\n  color: '#3B82F6',\n  icon: '⚛️',\n  gradient: 'from-blue-400 to-blue-600'\n},\n// Expert Ranks (Levels 16-30)\n{\n  level: 16,\n  name: 'CYBER SAGE',\n  minXP: 6750,\n  color: '#8B5CF6',\n  icon: '🔯',\n  gradient: 'from-purple-400 to-purple-600'\n}, {\n  level: 17,\n  name: 'MATRIX MASTER',\n  minXP: 7600,\n  color: '#8B5CF6',\n  icon: '👑',\n  gradient: 'from-purple-400 to-purple-600'\n}, {\n  level: 18,\n  name: 'DIGITAL EMPEROR',\n  minXP: 8500,\n  color: '#8B5CF6',\n  icon: '🏛️',\n  gradient: 'from-purple-400 to-purple-600'\n}, {\n  level: 19,\n  name: 'DATA DEITY',\n  minXP: 9450,\n  color: '#8B5CF6',\n  icon: '⚡',\n  gradient: 'from-purple-400 to-purple-600'\n}, {\n  level: 20,\n  name: 'PIXEL LEGEND',\n  minXP: 10450,\n  color: '#8B5CF6',\n  icon: '🌟',\n  gradient: 'from-purple-400 to-purple-600'\n},\n// Legendary Ranks (Levels 21-50)\n{\n  level: 21,\n  name: 'BINARY TITAN',\n  minXP: 11500,\n  color: '#F59E0B',\n  icon: '🏔️',\n  gradient: 'from-yellow-400 to-orange-500'\n}, {\n  level: 25,\n  name: 'ALGORITHM OVERLORD',\n  minXP: 15000,\n  color: '#F59E0B',\n  icon: '👁️',\n  gradient: 'from-yellow-400 to-orange-500'\n}, {\n  level: 30,\n  name: 'SYSTEM OMEGA',\n  minXP: 22500,\n  color: '#F59E0B',\n  icon: '🔱',\n  gradient: 'from-yellow-400 to-orange-500'\n}, {\n  level: 35,\n  name: 'QUANTUM SUPREME',\n  minXP: 35000,\n  color: '#DC2626',\n  icon: '💎',\n  gradient: 'from-red-400 to-red-600'\n}, {\n  level: 40,\n  name: 'DIGITAL TRANSCENDENT',\n  minXP: 55000,\n  color: '#DC2626',\n  icon: '🌌',\n  gradient: 'from-red-400 to-red-600'\n}, {\n  level: 50,\n  name: 'PIXEL OMNARCH',\n  minXP: 100000,\n  color: '#DC2626',\n  icon: '♦️',\n  gradient: 'from-red-400 to-red-600'\n}];\nexport const getRankByXP = totalXP => {\n  return [...playerRanks].reverse().find(rank => totalXP >= rank.minXP) || playerRanks[0];\n};\nexport const getNextRank = currentLevel => {\n  return playerRanks.find(rank => rank.level > currentLevel);\n};\nexport const getRankProgress = totalXP => {\n  const currentRank = getRankByXP(totalXP);\n  const nextRank = getNextRank(currentRank.level);\n  if (!nextRank) return {\n    progress: 100,\n    current: totalXP - currentRank.minXP,\n    needed: 0\n  };\n  const current = totalXP - currentRank.minXP;\n  const needed = nextRank.minXP - currentRank.minXP;\n  const progress = current / needed * 100;\n  return {\n    progress,\n    current,\n    needed\n  };\n};","map":{"version":3,"names":["playerRanks","level","name","minXP","color","icon","gradient","getRankByXP","totalXP","reverse","find","rank","getNextRank","currentLevel","getRankProgress","currentRank","nextRank","progress","current","needed"],"sources":["/Users/jenn/Projects/Pixel-Pages/frontend/src/data/ranks.js"],"sourcesContent":["export const playerRanks = [\n  // Beginner Ranks (Levels 1-10)\n  { level: 1, name: 'PIXEL NOVICE', minXP: 0, color: '#9CA3AF', icon: '🌱', gradient: 'from-gray-400 to-gray-600' },\n  { level: 2, name: 'DATA SEEKER', minXP: 100, color: '#9CA3AF', icon: '🔍', gradient: 'from-gray-400 to-gray-600' },\n  { level: 3, name: 'LOG KEEPER', minXP: 250, color: '#9CA3AF', icon: '📝', gradient: 'from-gray-400 to-gray-600' },\n  { level: 4, name: 'BYTE WARRIOR', minXP: 450, color: '#9CA3AF', icon: '⚔️', gradient: 'from-gray-400 to-gray-600' },\n  { level: 5, name: 'CODE SCOUT', minXP: 700, color: '#9CA3AF', icon: '🎯', gradient: 'from-gray-400 to-gray-600' },\n  \n  // Intermediate Ranks (Levels 6-15)\n  { level: 6, name: 'DIGITAL RANGER', minXP: 1000, color: '#10B981', icon: '🏹', gradient: 'from-green-400 to-green-600' },\n  { level: 7, name: 'CYBER GUARDIAN', minXP: 1350, color: '#10B981', icon: '🛡️', gradient: 'from-green-400 to-green-600' },\n  { level: 8, name: 'MATRIX EXPLORER', minXP: 1750, color: '#10B981', icon: '🗺️', gradient: 'from-green-400 to-green-600' },\n  { level: 9, name: 'PIXEL KNIGHT', minXP: 2200, color: '#10B981', icon: '🗡️', gradient: 'from-green-400 to-green-600' },\n  { level: 10, name: 'DATA CHAMPION', minXP: 2700, color: '#10B981', icon: '🏆', gradient: 'from-green-400 to-green-600' },\n  \n  // Advanced Ranks (Levels 11-25)\n  { level: 11, name: 'BYTE COMMANDER', minXP: 3250, color: '#3B82F6', icon: '⭐', gradient: 'from-blue-400 to-blue-600' },\n  { level: 12, name: 'LOGIC OVERLORD', minXP: 3850, color: '#3B82F6', icon: '🔮', gradient: 'from-blue-400 to-blue-600' },\n  { level: 13, name: 'SYSTEM ARCHITECT', minXP: 4500, color: '#3B82F6', icon: '🏗️', gradient: 'from-blue-400 to-blue-600' },\n  { level: 14, name: 'NEURAL HACKER', minXP: 5200, color: '#3B82F6', icon: '🧠', gradient: 'from-blue-400 to-blue-600' },\n  { level: 15, name: 'QUANTUM ANALYST', minXP: 5950, color: '#3B82F6', icon: '⚛️', gradient: 'from-blue-400 to-blue-600' },\n  \n  // Expert Ranks (Levels 16-30)\n  { level: 16, name: 'CYBER SAGE', minXP: 6750, color: '#8B5CF6', icon: '🔯', gradient: 'from-purple-400 to-purple-600' },\n  { level: 17, name: 'MATRIX MASTER', minXP: 7600, color: '#8B5CF6', icon: '👑', gradient: 'from-purple-400 to-purple-600' },\n  { level: 18, name: 'DIGITAL EMPEROR', minXP: 8500, color: '#8B5CF6', icon: '🏛️', gradient: 'from-purple-400 to-purple-600' },\n  { level: 19, name: 'DATA DEITY', minXP: 9450, color: '#8B5CF6', icon: '⚡', gradient: 'from-purple-400 to-purple-600' },\n  { level: 20, name: 'PIXEL LEGEND', minXP: 10450, color: '#8B5CF6', icon: '🌟', gradient: 'from-purple-400 to-purple-600' },\n  \n  // Legendary Ranks (Levels 21-50)\n  { level: 21, name: 'BINARY TITAN', minXP: 11500, color: '#F59E0B', icon: '🏔️', gradient: 'from-yellow-400 to-orange-500' },\n  { level: 25, name: 'ALGORITHM OVERLORD', minXP: 15000, color: '#F59E0B', icon: '👁️', gradient: 'from-yellow-400 to-orange-500' },\n  { level: 30, name: 'SYSTEM OMEGA', minXP: 22500, color: '#F59E0B', icon: '🔱', gradient: 'from-yellow-400 to-orange-500' },\n  { level: 35, name: 'QUANTUM SUPREME', minXP: 35000, color: '#DC2626', icon: '💎', gradient: 'from-red-400 to-red-600' },\n  { level: 40, name: 'DIGITAL TRANSCENDENT', minXP: 55000, color: '#DC2626', icon: '🌌', gradient: 'from-red-400 to-red-600' },\n  { level: 50, name: 'PIXEL OMNARCH', minXP: 100000, color: '#DC2626', icon: '♦️', gradient: 'from-red-400 to-red-600' }\n];\n\nexport const getRankByXP = (totalXP) => {\n  return [...playerRanks].reverse().find(rank => totalXP >= rank.minXP) || playerRanks[0];\n};\n\nexport const getNextRank = (currentLevel) => {\n  return playerRanks.find(rank => rank.level > currentLevel);\n};\n\nexport const getRankProgress = (totalXP) => {\n  const currentRank = getRankByXP(totalXP);\n  const nextRank = getNextRank(currentRank.level);\n  \n  if (!nextRank) return { progress: 100, current: totalXP - currentRank.minXP, needed: 0 };\n  \n  const current = totalXP - currentRank.minXP;\n  const needed = nextRank.minXP - currentRank.minXP;\n  const progress = (current / needed) * 100;\n  \n  return { progress, current, needed };\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}