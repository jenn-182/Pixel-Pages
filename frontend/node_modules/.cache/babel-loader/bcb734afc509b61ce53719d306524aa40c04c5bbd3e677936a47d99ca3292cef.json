{"ast":null,"code":"export const playerRanks = [\n// Beginner Ranks (Levels 1-5) - Adjusted for current XP levels\n{\n  level: 1,\n  name: 'PIXEL SPROUT',\n  minXP: 0,\n  color: '#9CA3AF',\n  description: 'Just getting started'\n}, {\n  level: 2,\n  name: 'PIXEL RECRUIT',\n  minXP: 800,\n  color: '#9CA3AF',\n  description: 'Learning the ropes'\n}, {\n  level: 3,\n  name: 'PIXEL SCOUT',\n  minXP: 1600,\n  color: '#10B981',\n  description: 'Building good habits'\n}, {\n  level: 4,\n  name: 'PIXEL CADET',\n  minXP: 2800,\n  color: '#10B981',\n  description: 'Finding your rhythm'\n}, {\n  level: 5,\n  name: 'PIXEL APRENTICE',\n  minXP: 3800,\n  color: '#10B981',\n  description: 'Consistent progress'\n},\n// Intermediate Ranks (Levels 6-10) - Increased spacing\n{\n  level: 6,\n  name: 'DIGITAL RANGER',\n  minXP: 5000,\n  color: '#3B82F6',\n  description: 'Steady advancement'\n}, {\n  level: 7,\n  name: 'CYBER GUARDIAN',\n  minXP: 7000,\n  color: '#3B82F6',\n  description: 'Reliable performer'\n}, {\n  level: 8,\n  name: 'MATRIX TRAVELER',\n  minXP: 10000,\n  color: '#3B82F6',\n  description: 'Expanding horizons'\n}, {\n  level: 9,\n  name: 'PIXEL CRUSADER',\n  minXP: 13500,\n  color: '#8B5CF6',\n  description: 'Proven dedication'\n}, {\n  level: 10,\n  name: 'DATA WARDEN',\n  minXP: 17000,\n  color: '#8B5CF6',\n  description: 'Excellence achieved'\n},\n// Advanced Ranks (Levels 11-15) - Higher requirements\n{\n  level: 11,\n  name: 'BYTE CAPTAIN',\n  minXP: 21000,\n  color: '#8B5CF6',\n  description: 'Leading by example'\n}, {\n  level: 12,\n  name: 'LOGIC OVERLORD',\n  minXP: 26000,\n  color: '#8B5CF6',\n  description: 'Mastering complexity'\n}, {\n  level: 13,\n  name: 'SYSTEM ARCHITECT',\n  minXP: 32000,\n  color: '#F59E0B',\n  description: 'Building greatness'\n}, {\n  level: 14,\n  name: 'NEURAL HACKER',\n  minXP: 39000,\n  color: '#F59E0B',\n  description: 'Exceptional insight'\n}, {\n  level: 15,\n  name: 'QUANTUM VISONARY',\n  minXP: 47000,\n  color: '#F59E0B',\n  description: 'Transcending limits'\n},\n// Master Ranks (Levels 16-20) - Elite territory\n{\n  level: 16,\n  name: 'CYBER ORACLE',\n  minXP: 56000,\n  color: '#06b6d4',\n  description: 'Wisdom incarnate'\n}, {\n  level: 17,\n  name: 'MATRIX LEGEND',\n  minXP: 66000,\n  color: '#06b6d4',\n  description: 'Legendary status'\n}, {\n  level: 18,\n  name: 'DIGITAL OVERLOAD',\n  minXP: 77000,\n  color: '#06b6d4',\n  description: 'Ruling the realm'\n}, {\n  level: 19,\n  name: 'DATA DIETY',\n  minXP: 90000,\n  color: '#06b6d4',\n  description: 'Divine mastery'\n}, {\n  level: 20,\n  name: 'PIXEL ETERNAL',\n  minXP: 105000,\n  color: '#06b6d4',\n  description: 'Ultimate achievement'\n}];\nexport const getRankByXP = totalXP => {\n  return [...playerRanks].reverse().find(rank => totalXP >= rank.minXP) || playerRanks[0];\n};\nexport const getNextRank = currentLevel => {\n  return playerRanks.find(rank => rank.level > currentLevel);\n};\nexport const getRankByLevel = level => {\n  return playerRanks.find(rank => rank.level === level) || playerRanks[0];\n};","map":{"version":3,"names":["playerRanks","level","name","minXP","color","description","getRankByXP","totalXP","reverse","find","rank","getNextRank","currentLevel","getRankByLevel"],"sources":["/Users/jenn/Projects/Pixel-Pages/frontend/src/data/ranks.js"],"sourcesContent":["export const playerRanks = [\n  // Beginner Ranks (Levels 1-5) - Adjusted for current XP levels\n  { level: 1, name: 'PIXEL SPROUT', minXP: 0, color: '#9CA3AF', description: 'Just getting started' },\n  { level: 2, name: 'PIXEL RECRUIT', minXP: 800, color: '#9CA3AF', description: 'Learning the ropes' },\n  { level: 3, name: 'PIXEL SCOUT', minXP: 1600, color: '#10B981', description: 'Building good habits' },\n  { level: 4, name: 'PIXEL CADET', minXP: 2800, color: '#10B981', description: 'Finding your rhythm' },\n  { level: 5, name: 'PIXEL APRENTICE', minXP: 3800, color: '#10B981', description: 'Consistent progress' },\n  \n  // Intermediate Ranks (Levels 6-10) - Increased spacing\n  { level: 6, name: 'DIGITAL RANGER', minXP: 5000, color: '#3B82F6', description: 'Steady advancement' },\n  { level: 7, name: 'CYBER GUARDIAN', minXP: 7000, color: '#3B82F6', description: 'Reliable performer' },\n  { level: 8, name: 'MATRIX TRAVELER', minXP: 10000, color: '#3B82F6', description: 'Expanding horizons' },\n  { level: 9, name: 'PIXEL CRUSADER', minXP: 13500, color: '#8B5CF6', description: 'Proven dedication' },\n  { level: 10, name: 'DATA WARDEN', minXP: 17000, color: '#8B5CF6', description: 'Excellence achieved' },\n  \n  // Advanced Ranks (Levels 11-15) - Higher requirements\n  { level: 11, name: 'BYTE CAPTAIN', minXP: 21000, color: '#8B5CF6', description: 'Leading by example' },\n  { level: 12, name: 'LOGIC OVERLORD', minXP: 26000, color: '#8B5CF6', description: 'Mastering complexity' },\n  { level: 13, name: 'SYSTEM ARCHITECT', minXP: 32000, color: '#F59E0B', description: 'Building greatness' },\n  { level: 14, name: 'NEURAL HACKER', minXP: 39000, color: '#F59E0B', description: 'Exceptional insight' },\n  { level: 15, name: 'QUANTUM VISONARY', minXP: 47000, color: '#F59E0B', description: 'Transcending limits' },\n  \n  // Master Ranks (Levels 16-20) - Elite territory\n  { level: 16, name: 'CYBER ORACLE', minXP: 56000, color: '#06b6d4', description: 'Wisdom incarnate' },\n  { level: 17, name: 'MATRIX LEGEND', minXP: 66000, color: '#06b6d4', description: 'Legendary status' },\n  { level: 18, name: 'DIGITAL OVERLOAD', minXP: 77000, color: '#06b6d4', description: 'Ruling the realm' },\n  { level: 19, name: 'DATA DIETY', minXP: 90000, color: '#06b6d4', description: 'Divine mastery' },\n  { level: 20, name: 'PIXEL ETERNAL', minXP: 105000, color: '#06b6d4', description: 'Ultimate achievement' }\n];\n\nexport const getRankByXP = (totalXP) => {\n  return [...playerRanks].reverse().find(rank => totalXP >= rank.minXP) || playerRanks[0];\n};\n\nexport const getNextRank = (currentLevel) => {\n  return playerRanks.find(rank => rank.level > currentLevel);\n};\n\nexport const getRankByLevel = (level) => {\n  return playerRanks.find(rank => rank.level === level) || playerRanks[0];\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}