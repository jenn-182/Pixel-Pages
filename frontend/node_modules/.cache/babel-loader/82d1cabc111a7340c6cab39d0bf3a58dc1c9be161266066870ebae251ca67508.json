{"ast":null,"code":"import React,{useState}from'react';import{motion,AnimatePresence}from'framer-motion';import{Plus,X,Star,Heart}from'lucide-react';import{useTheme}from'../../contexts/ThemeContext';import backendAchievementService from'../../services/backendAchievementService';import{allAchievements,tierInfo}from'../../data/achievements';import AchievementBadge from'../ui/AchievementBadge';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const FavoriteBadges=()=>{const[showSelector,setShowSelector]=useState(false);const[favoriteBadges,setFavoriteBadges]=useState(()=>{const saved=localStorage.getItem('favoriteBadges');return saved?JSON.parse(saved):[];});const{currentTheme,getThemeColors}=useTheme();const themeColors=getThemeColors();// Get unlocked achievements\nconst getUnlockedAchievements=()=>{const unlockedAchievements=backendAchievementService.getUnlockedAchievements();return unlockedAchievements||[];};// Save favorite badges to localStorage\nconst saveFavoriteBadges=badges=>{localStorage.setItem('favoriteBadges',JSON.stringify(badges));setFavoriteBadges(badges);};// Toggle badge selection\nconst toggleBadgeSelection=achievementId=>{let newSelection;if(favoriteBadges.includes(achievementId)){// Remove badge\nnewSelection=favoriteBadges.filter(id=>id!==achievementId);}else if(favoriteBadges.length<3){// Add badge (max 3)\nnewSelection=[...favoriteBadges,achievementId];}else{// Replace oldest badge\nnewSelection=[...favoriteBadges.slice(1),achievementId];}saveFavoriteBadges(newSelection);};// Get achievement data by ID\nconst getAchievementById=id=>{return allAchievements.find(achievement=>achievement.id===id);};const unlockedAchievements=getUnlockedAchievements();return/*#__PURE__*/_jsxs(motion.div,{initial:{opacity:0,y:20},animate:{opacity:1,y:0},className:\"p-6 relative overflow-hidden\",style:{backgroundColor:themeColors.backgroundColor,border:\"2px solid \".concat(themeColors.borderColor),borderRadius:'12px',// Fixed - use consistent rounding for all themes\nboxShadow:currentTheme==='default'?\"0 0 15px rgba(255, 255, 255, 0.2), 4px 4px 0px 0px rgba(0,0,0,1)\":\"0 0 3px \".concat(themeColors.primary,\"50, 4px 4px 0px 0px rgba(0,0,0,1)\")},children:[/*#__PURE__*/_jsx(\"div\",{className:\"absolute inset-0 pointer-events-none\",style:{background:currentTheme==='default'?'linear-gradient(135deg, rgba(255,255,255,0.05), rgba(6,182,212,0.1))':\"linear-gradient(to bottom right, \".concat(themeColors.secondary,\"15, \").concat(themeColors.secondary,\"20)\"),borderRadius:'12px'// Fixed - use consistent rounding for all themes\n}}),/*#__PURE__*/_jsxs(\"div\",{className:\"relative z-10\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between mb-4\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"h3\",{className:\"text-2xl font-mono font-bold text-white flex items-center\",children:[currentTheme==='pink'?/*#__PURE__*/_jsx(Heart,{size:20,className:\"mr-2\",style:{color:themeColors.secondary}}):/*#__PURE__*/_jsx(Star,{size:20,className:\"mr-2\",style:{color:themeColors.secondary}}),\"FAVORITE BADGES\"]}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-xs text-gray-400 font-mono\",children:[\"Unlocked: \",unlockedAchievements.length,\" achievements\"]})]}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setShowSelector(true),className:\"px-3 py-1.5 relative group cursor-pointer transition-all duration-300 font-mono font-bold overflow-hidden flex items-center gap-2\",style:{backgroundColor:themeColors.backgroundColor,border:\"2px solid \".concat(themeColors.controlColor),borderRadius:'12px',color:themeColors.controlColor,boxShadow:currentTheme==='default'?'0 0 10px rgba(255, 255, 255, 0.4), 2px 2px 0px 0px rgba(0,0,0,1)':\"0 0 6px \".concat(themeColors.controlColor,\"50, 2px 2px 0px 0px rgba(0,0,0,1)\")},children:/*#__PURE__*/_jsxs(\"div\",{className:\"relative z-10 flex items-center gap-2\",children:[/*#__PURE__*/_jsx(Plus,{size:14,style:{color:themeColors.controlColor}}),/*#__PURE__*/_jsx(\"span\",{className:\"text-xs\",children:unlockedAchievements.length>0?'ADD BADGES':'NO BADGES YET'})]})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-1 md:grid-cols-3 gap-4\",children:[favoriteBadges.map(badgeId=>{const achievement=getAchievementById(badgeId);if(!achievement)return null;return/*#__PURE__*/_jsx(\"div\",{className:\"relative\",children:/*#__PURE__*/_jsx(AchievementBadge,{achievement:achievement,isUnlocked:true,size:\"medium\",compact:false})},badgeId);}),Array.from({length:3-favoriteBadges.length},(_,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"border-2 border-dashed border-gray-600 p-8 flex flex-col items-center justify-center min-h-[200px] bg-gray-900/20\",style:{borderRadius:'12px'// Fixed - use consistent rounding for all themes\n},children:[/*#__PURE__*/_jsx(Plus,{size:32,className:\"text-gray-600 mb-2\"}),/*#__PURE__*/_jsx(\"span\",{className:\"text-gray-600 font-mono text-sm\",children:\"Empty Slot\"})]},\"empty-\".concat(index)))]})]}),/*#__PURE__*/_jsx(AnimatePresence,{children:showSelector&&/*#__PURE__*/_jsx(motion.div,{initial:{opacity:0},animate:{opacity:1},exit:{opacity:0},className:\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\",onClick:()=>setShowSelector(false),children:/*#__PURE__*/_jsxs(motion.div,{initial:{scale:0.8,opacity:0},animate:{scale:1,opacity:1},exit:{scale:0.8,opacity:0},className:\"p-4 max-w-5xl mx-4 relative max-h-[85vh] overflow-y-auto\",style:{backgroundColor:themeColors.backgroundColor,border:\"2px solid \".concat(themeColors.controlColor),borderRadius:'12px',// Fixed - use consistent rounding for all themes\nboxShadow:currentTheme==='default'?'0 0 30px rgba(255, 255, 255, 0.4), 8px 8px 0px 0px rgba(0,0,0,1)':\"0 0 20px \".concat(themeColors.controlColor,\"30, 8px 8px 0px 0px rgba(0,0,0,1)\")},onClick:e=>e.stopPropagation(),children:[/*#__PURE__*/_jsx(\"div\",{className:\"absolute inset-0 opacity-50 animate-pulse pointer-events-none\",style:{border:\"2px solid \".concat(themeColors.controlColor),borderRadius:'12px'// Fixed - use consistent rounding for all themes\n}}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setShowSelector(false),className:\"absolute top-4 right-4 text-gray-400 hover:text-white transition-colors z-10\",children:/*#__PURE__*/_jsx(X,{size:20})}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-2xl font-mono font-bold text-white mb-2\",children:\"SELECT FAVORITE BADGES\"}),/*#__PURE__*/_jsxs(\"p\",{className:\"font-mono text-sm mb-4\",style:{color:themeColors.controlColor},children:[\"Choose up to 3 unlocked achievement badges to showcase (\",favoriteBadges.length,\"/3 selected)\"]}),unlockedAchievements.length===0?/*#__PURE__*/_jsxs(\"div\",{className:\"text-center py-6\",children:[currentTheme==='pink'?/*#__PURE__*/_jsx(Heart,{size:40,className:\"text-gray-500 mx-auto mb-2\"}):/*#__PURE__*/_jsx(Star,{size:40,className:\"text-gray-500 mx-auto mb-2\"}),/*#__PURE__*/_jsx(\"div\",{className:\"text-gray-500 font-mono text-sm\",children:\"Complete achievements to unlock badges!\"})]}):/*#__PURE__*/_jsx(\"div\",{className:\"space-y-4\",children:Object.entries(tierInfo).map(_ref=>{let[tierKey,tier]=_ref;const tierAchievements=unlockedAchievements.filter(a=>a.tier===tierKey);if(tierAchievements.length===0)return null;return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"h3\",{className:\"font-mono font-bold text-base mb-2 flex items-center gap-2\",children:[/*#__PURE__*/_jsx(\"span\",{style:{color:tier.color},children:tier.emoji}),/*#__PURE__*/_jsx(\"span\",{style:{color:tier.color},children:tier.name}),/*#__PURE__*/_jsxs(\"span\",{className:\"text-gray-400 text-xs\",children:[\"(\",tierAchievements.length,\")\"]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-3\",children:tierAchievements.map(achievement=>/*#__PURE__*/_jsxs(\"div\",{className:\"relative\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"cursor-pointer transition-all duration-200 \".concat(favoriteBadges.includes(achievement.id)?'ring-2 ring-opacity-80':'hover:scale-105'),style:{ringColor:favoriteBadges.includes(achievement.id)?tier.color:'transparent'},onClick:()=>toggleBadgeSelection(achievement.id),children:/*#__PURE__*/_jsx(AchievementBadge,{achievement:achievement,isUnlocked:true,size:\"small\",compact:true})}),favoriteBadges.includes(achievement.id)&&/*#__PURE__*/_jsx(\"div\",{className:\"absolute -top-1 -right-1 w-5 h-5 bg-green-500 border border-white rounded-full flex items-center justify-center\",children:currentTheme==='pink'?/*#__PURE__*/_jsx(Heart,{size:10,className:\"text-white fill-current\"}):/*#__PURE__*/_jsx(Star,{size:10,className:\"text-white fill-current\"})})]},achievement.id))})]},tierKey);})})]})]})})})]});};export default FavoriteBadges;","map":{"version":3,"names":["React","useState","motion","AnimatePresence","Plus","X","Star","Heart","useTheme","backendAchievementService","allAchievements","tierInfo","AchievementBadge","jsx","_jsx","jsxs","_jsxs","FavoriteBadges","showSelector","setShowSelector","favoriteBadges","setFavoriteBadges","saved","localStorage","getItem","JSON","parse","currentTheme","getThemeColors","themeColors","getUnlockedAchievements","unlockedAchievements","saveFavoriteBadges","badges","setItem","stringify","toggleBadgeSelection","achievementId","newSelection","includes","filter","id","length","slice","getAchievementById","find","achievement","div","initial","opacity","y","animate","className","style","backgroundColor","border","concat","borderColor","borderRadius","boxShadow","primary","children","background","secondary","size","color","onClick","controlColor","map","badgeId","isUnlocked","compact","Array","from","_","index","exit","scale","e","stopPropagation","Object","entries","_ref","tierKey","tier","tierAchievements","a","emoji","name","ringColor"],"sources":["/Users/jenn/Projects/Pixel-Pages/frontend/src/components/profile/FavoriteBadges.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { Plus, X, Star, Heart } from 'lucide-react';\nimport { useTheme } from '../../contexts/ThemeContext';\nimport backendAchievementService from '../../services/backendAchievementService';\nimport { allAchievements, tierInfo } from '../../data/achievements';\nimport AchievementBadge from '../ui/AchievementBadge';\n\nconst FavoriteBadges = () => {\n  const [showSelector, setShowSelector] = useState(false);\n  const [favoriteBadges, setFavoriteBadges] = useState(() => {\n    const saved = localStorage.getItem('favoriteBadges');\n    return saved ? JSON.parse(saved) : [];\n  });\n  \n  const { currentTheme, getThemeColors } = useTheme();\n  const themeColors = getThemeColors();\n\n  // Get unlocked achievements\n  const getUnlockedAchievements = () => {\n    const unlockedAchievements = backendAchievementService.getUnlockedAchievements();\n    return unlockedAchievements || [];\n  };\n\n  // Save favorite badges to localStorage\n  const saveFavoriteBadges = (badges) => {\n    localStorage.setItem('favoriteBadges', JSON.stringify(badges));\n    setFavoriteBadges(badges);\n  };\n\n  // Toggle badge selection\n  const toggleBadgeSelection = (achievementId) => {\n    let newSelection;\n    if (favoriteBadges.includes(achievementId)) {\n      // Remove badge\n      newSelection = favoriteBadges.filter(id => id !== achievementId);\n    } else if (favoriteBadges.length < 3) {\n      // Add badge (max 3)\n      newSelection = [...favoriteBadges, achievementId];\n    } else {\n      // Replace oldest badge\n      newSelection = [...favoriteBadges.slice(1), achievementId];\n    }\n    saveFavoriteBadges(newSelection);\n  };\n\n  // Get achievement data by ID\n  const getAchievementById = (id) => {\n    return allAchievements.find(achievement => achievement.id === id);\n  };\n\n  const unlockedAchievements = getUnlockedAchievements();\n\n  return (\n    <motion.div\n      initial={{ opacity: 0, y: 20 }}\n      animate={{ opacity: 1, y: 0 }}\n      className=\"p-6 relative overflow-hidden\"\n      style={{\n        backgroundColor: themeColors.backgroundColor,\n        border: `2px solid ${themeColors.borderColor}`,\n        borderRadius: '12px', // Fixed - use consistent rounding for all themes\n        boxShadow: currentTheme === 'default' \n          ? `0 0 15px rgba(255, 255, 255, 0.2), 4px 4px 0px 0px rgba(0,0,0,1)` \n          : `0 0 3px ${themeColors.primary}50, 4px 4px 0px 0px rgba(0,0,0,1)`\n      }}\n    >\n      {/* Gradient overlay with theme colors */}\n      <div className=\"absolute inset-0 pointer-events-none\"\n           style={{\n             background: currentTheme === 'default' \n               ? 'linear-gradient(135deg, rgba(255,255,255,0.05), rgba(6,182,212,0.1))'\n               : `linear-gradient(to bottom right, ${themeColors.secondary}15, ${themeColors.secondary}20)`,\n             borderRadius: '12px' // Fixed - use consistent rounding for all themes\n           }} />\n\n      <div className=\"relative z-10\">\n        {/* Header */}\n        <div className=\"flex items-center justify-between mb-4\">\n          <div>\n            <h3 className=\"text-2xl font-mono font-bold text-white flex items-center\">\n              {currentTheme === 'pink' ? (\n                <Heart \n                  size={20} \n                  className=\"mr-2\" \n                  style={{ color: themeColors.secondary }}\n                />\n              ) : (\n                <Star \n                  size={20} \n                  className=\"mr-2\" \n                  style={{ color: themeColors.secondary }}\n                />\n              )}\n              FAVORITE BADGES\n            </h3>\n            {/* Debug info - remove this after fixing */}\n            <div className=\"text-xs text-gray-400 font-mono\">\n              Unlocked: {unlockedAchievements.length} achievements\n            </div>\n          </div>\n          \n          {/* Add Badge Button - Always show for debugging */}\n          <button\n            onClick={() => setShowSelector(true)}\n            className=\"px-3 py-1.5 relative group cursor-pointer transition-all duration-300 font-mono font-bold overflow-hidden flex items-center gap-2\"\n            style={{\n              backgroundColor: themeColors.backgroundColor,\n              border: `2px solid ${themeColors.controlColor}`,\n              borderRadius: '12px',\n              color: themeColors.controlColor,\n              boxShadow: currentTheme === 'default' \n                ? '0 0 10px rgba(255, 255, 255, 0.4), 2px 2px 0px 0px rgba(0,0,0,1)' \n                : `0 0 6px ${themeColors.controlColor}50, 2px 2px 0px 0px rgba(0,0,0,1)`\n            }}\n          >\n            <div className=\"relative z-10 flex items-center gap-2\">\n              <Plus size={14} style={{ color: themeColors.controlColor }} />\n              <span className=\"text-xs\">\n                {unlockedAchievements.length > 0 ? 'ADD BADGES' : 'NO BADGES YET'}\n              </span>\n            </div>\n          </button>\n        </div>\n\n        {/* Favorite Badges Display */}\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n          {favoriteBadges.map(badgeId => {\n            const achievement = getAchievementById(badgeId);\n            if (!achievement) return null;\n            \n            return (\n              <div key={badgeId} className=\"relative\">\n                <AchievementBadge \n                  achievement={achievement}\n                  isUnlocked={true}\n                  size=\"medium\"\n                  compact={false}\n                />\n              </div>\n            );\n          })}\n          \n          {/* Empty slots - Fixed rounding */}\n          {Array.from({ length: 3 - favoriteBadges.length }, (_, index) => (\n            <div\n              key={`empty-${index}`}\n              className=\"border-2 border-dashed border-gray-600 p-8 flex flex-col items-center justify-center min-h-[200px] bg-gray-900/20\"\n              style={{\n                borderRadius: '12px' // Fixed - use consistent rounding for all themes\n              }}\n            >\n              <Plus size={32} className=\"text-gray-600 mb-2\" />\n              <span className=\"text-gray-600 font-mono text-sm\">Empty Slot</span>\n            </div>\n          ))}\n        </div>\n      </div>\n\n      {/* Badge Selector Modal */}\n      <AnimatePresence>\n        {showSelector && (\n          <motion.div\n            initial={{ opacity: 0 }}\n            animate={{ opacity: 1 }}\n            exit={{ opacity: 0 }}\n            className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\"\n            onClick={() => setShowSelector(false)}\n          >\n            <motion.div\n              initial={{ scale: 0.8, opacity: 0 }}\n              animate={{ scale: 1, opacity: 1 }}\n              exit={{ scale: 0.8, opacity: 0 }}\n              className=\"p-4 max-w-5xl mx-4 relative max-h-[85vh] overflow-y-auto\"\n              style={{\n                backgroundColor: themeColors.backgroundColor,\n                border: `2px solid ${themeColors.controlColor}`,\n                borderRadius: '12px', // Fixed - use consistent rounding for all themes\n                boxShadow: currentTheme === 'default' \n                  ? '0 0 30px rgba(255, 255, 255, 0.4), 8px 8px 0px 0px rgba(0,0,0,1)' \n                  : `0 0 20px ${themeColors.controlColor}30, 8px 8px 0px 0px rgba(0,0,0,1)`\n              }}\n              onClick={(e) => e.stopPropagation()}\n            >\n              {/* Animated border */}\n              <div className=\"absolute inset-0 opacity-50 animate-pulse pointer-events-none\" \n                   style={{ \n                     border: `2px solid ${themeColors.controlColor}`,\n                     borderRadius: '12px' // Fixed - use consistent rounding for all themes\n                   }} />\n              \n              {/* Close button */}\n              <button\n                onClick={() => setShowSelector(false)}\n                className=\"absolute top-4 right-4 text-gray-400 hover:text-white transition-colors z-10\"\n              >\n                <X size={20} />\n              </button>\n\n              {/* Content */}\n              <div>\n                <h2 className=\"text-2xl font-mono font-bold text-white mb-2\">\n                  SELECT FAVORITE BADGES\n                </h2>\n                \n                <p className=\"font-mono text-sm mb-4\" style={{ color: themeColors.controlColor }}>\n                  Choose up to 3 unlocked achievement badges to showcase ({favoriteBadges.length}/3 selected)\n                </p>\n\n                {unlockedAchievements.length === 0 ? (\n                  <div className=\"text-center py-6\">\n                    {currentTheme === 'pink' ? (\n                      <Heart size={40} className=\"text-gray-500 mx-auto mb-2\" />\n                    ) : (\n                      <Star size={40} className=\"text-gray-500 mx-auto mb-2\" />\n                    )}\n                    <div className=\"text-gray-500 font-mono text-sm\">\n                      Complete achievements to unlock badges!\n                    </div>\n                  </div>\n                ) : (\n                  <div className=\"space-y-4\">\n                    {Object.entries(tierInfo).map(([tierKey, tier]) => {\n                      const tierAchievements = unlockedAchievements.filter(a => a.tier === tierKey);\n                      if (tierAchievements.length === 0) return null;\n                      \n                      return (\n                        <div key={tierKey}>\n                          <h3 className=\"font-mono font-bold text-base mb-2 flex items-center gap-2\">\n                            <span style={{ color: tier.color }}>{tier.emoji}</span>\n                            <span style={{ color: tier.color }}>{tier.name}</span>\n                            <span className=\"text-gray-400 text-xs\">({tierAchievements.length})</span>\n                          </h3>\n                          \n                          <div className=\"grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-3\">\n                            {tierAchievements.map(achievement => (\n                              <div key={achievement.id} className=\"relative\">\n                                <div\n                                  className={`cursor-pointer transition-all duration-200 ${\n                                    favoriteBadges.includes(achievement.id)\n                                      ? 'ring-2 ring-opacity-80'\n                                      : 'hover:scale-105'\n                                  }`}\n                                  style={{\n                                    ringColor: favoriteBadges.includes(achievement.id) ? tier.color : 'transparent'\n                                  }}\n                                  onClick={() => toggleBadgeSelection(achievement.id)}\n                                >\n                                  <AchievementBadge \n                                    achievement={achievement}\n                                    isUnlocked={true}\n                                    size=\"small\"\n                                    compact={true}\n                                  />\n                                </div>\n                                \n                                {/* Selection indicator */}\n                                {favoriteBadges.includes(achievement.id) && (\n                                  <div className=\"absolute -top-1 -right-1 w-5 h-5 bg-green-500 border border-white rounded-full flex items-center justify-center\">\n                                    {currentTheme === 'pink' ? (\n                                      <Heart size={10} className=\"text-white fill-current\" />\n                                    ) : (\n                                      <Star size={10} className=\"text-white fill-current\" />\n                                    )}\n                                  </div>\n                                )}\n                              </div>\n                            ))}\n                          </div>\n                        </div>\n                      );\n                    })}\n                  </div>\n                )}\n              </div>\n            </motion.div>\n          </motion.div>\n        )}\n      </AnimatePresence>\n    </motion.div>\n  );\n};\n\nexport default FavoriteBadges;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,OAASC,MAAM,CAAEC,eAAe,KAAQ,eAAe,CACvD,OAASC,IAAI,CAAEC,CAAC,CAAEC,IAAI,CAAEC,KAAK,KAAQ,cAAc,CACnD,OAASC,QAAQ,KAAQ,6BAA6B,CACtD,MAAO,CAAAC,yBAAyB,KAAM,0CAA0C,CAChF,OAASC,eAAe,CAAEC,QAAQ,KAAQ,yBAAyB,CACnE,MAAO,CAAAC,gBAAgB,KAAM,wBAAwB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEtD,KAAM,CAAAC,cAAc,CAAGA,CAAA,GAAM,CAC3B,KAAM,CAACC,YAAY,CAAEC,eAAe,CAAC,CAAGlB,QAAQ,CAAC,KAAK,CAAC,CACvD,KAAM,CAACmB,cAAc,CAAEC,iBAAiB,CAAC,CAAGpB,QAAQ,CAAC,IAAM,CACzD,KAAM,CAAAqB,KAAK,CAAGC,YAAY,CAACC,OAAO,CAAC,gBAAgB,CAAC,CACpD,MAAO,CAAAF,KAAK,CAAGG,IAAI,CAACC,KAAK,CAACJ,KAAK,CAAC,CAAG,EAAE,CACvC,CAAC,CAAC,CAEF,KAAM,CAAEK,YAAY,CAAEC,cAAe,CAAC,CAAGpB,QAAQ,CAAC,CAAC,CACnD,KAAM,CAAAqB,WAAW,CAAGD,cAAc,CAAC,CAAC,CAEpC;AACA,KAAM,CAAAE,uBAAuB,CAAGA,CAAA,GAAM,CACpC,KAAM,CAAAC,oBAAoB,CAAGtB,yBAAyB,CAACqB,uBAAuB,CAAC,CAAC,CAChF,MAAO,CAAAC,oBAAoB,EAAI,EAAE,CACnC,CAAC,CAED;AACA,KAAM,CAAAC,kBAAkB,CAAIC,MAAM,EAAK,CACrCV,YAAY,CAACW,OAAO,CAAC,gBAAgB,CAAET,IAAI,CAACU,SAAS,CAACF,MAAM,CAAC,CAAC,CAC9DZ,iBAAiB,CAACY,MAAM,CAAC,CAC3B,CAAC,CAED;AACA,KAAM,CAAAG,oBAAoB,CAAIC,aAAa,EAAK,CAC9C,GAAI,CAAAC,YAAY,CAChB,GAAIlB,cAAc,CAACmB,QAAQ,CAACF,aAAa,CAAC,CAAE,CAC1C;AACAC,YAAY,CAAGlB,cAAc,CAACoB,MAAM,CAACC,EAAE,EAAIA,EAAE,GAAKJ,aAAa,CAAC,CAClE,CAAC,IAAM,IAAIjB,cAAc,CAACsB,MAAM,CAAG,CAAC,CAAE,CACpC;AACAJ,YAAY,CAAG,CAAC,GAAGlB,cAAc,CAAEiB,aAAa,CAAC,CACnD,CAAC,IAAM,CACL;AACAC,YAAY,CAAG,CAAC,GAAGlB,cAAc,CAACuB,KAAK,CAAC,CAAC,CAAC,CAAEN,aAAa,CAAC,CAC5D,CACAL,kBAAkB,CAACM,YAAY,CAAC,CAClC,CAAC,CAED;AACA,KAAM,CAAAM,kBAAkB,CAAIH,EAAE,EAAK,CACjC,MAAO,CAAA/B,eAAe,CAACmC,IAAI,CAACC,WAAW,EAAIA,WAAW,CAACL,EAAE,GAAKA,EAAE,CAAC,CACnE,CAAC,CAED,KAAM,CAAAV,oBAAoB,CAAGD,uBAAuB,CAAC,CAAC,CAEtD,mBACEd,KAAA,CAACd,MAAM,CAAC6C,GAAG,EACTC,OAAO,CAAE,CAAEC,OAAO,CAAE,CAAC,CAAEC,CAAC,CAAE,EAAG,CAAE,CAC/BC,OAAO,CAAE,CAAEF,OAAO,CAAE,CAAC,CAAEC,CAAC,CAAE,CAAE,CAAE,CAC9BE,SAAS,CAAC,8BAA8B,CACxCC,KAAK,CAAE,CACLC,eAAe,CAAEzB,WAAW,CAACyB,eAAe,CAC5CC,MAAM,cAAAC,MAAA,CAAe3B,WAAW,CAAC4B,WAAW,CAAE,CAC9CC,YAAY,CAAE,MAAM,CAAE;AACtBC,SAAS,CAAEhC,YAAY,GAAK,SAAS,+EAAA6B,MAAA,CAEtB3B,WAAW,CAAC+B,OAAO,qCACpC,CAAE,CAAAC,QAAA,eAGF/C,IAAA,QAAKsC,SAAS,CAAC,sCAAsC,CAChDC,KAAK,CAAE,CACLS,UAAU,CAAEnC,YAAY,GAAK,SAAS,CAClC,sEAAsE,qCAAA6B,MAAA,CAClC3B,WAAW,CAACkC,SAAS,SAAAP,MAAA,CAAO3B,WAAW,CAACkC,SAAS,OAAK,CAC9FL,YAAY,CAAE,MAAO;AACvB,CAAE,CAAE,CAAC,cAEV1C,KAAA,QAAKoC,SAAS,CAAC,eAAe,CAAAS,QAAA,eAE5B7C,KAAA,QAAKoC,SAAS,CAAC,wCAAwC,CAAAS,QAAA,eACrD7C,KAAA,QAAA6C,QAAA,eACE7C,KAAA,OAAIoC,SAAS,CAAC,2DAA2D,CAAAS,QAAA,EACtElC,YAAY,GAAK,MAAM,cACtBb,IAAA,CAACP,KAAK,EACJyD,IAAI,CAAE,EAAG,CACTZ,SAAS,CAAC,MAAM,CAChBC,KAAK,CAAE,CAAEY,KAAK,CAAEpC,WAAW,CAACkC,SAAU,CAAE,CACzC,CAAC,cAEFjD,IAAA,CAACR,IAAI,EACH0D,IAAI,CAAE,EAAG,CACTZ,SAAS,CAAC,MAAM,CAChBC,KAAK,CAAE,CAAEY,KAAK,CAAEpC,WAAW,CAACkC,SAAU,CAAE,CACzC,CACF,CAAC,iBAEJ,EAAI,CAAC,cAEL/C,KAAA,QAAKoC,SAAS,CAAC,iCAAiC,CAAAS,QAAA,EAAC,YACrC,CAAC9B,oBAAoB,CAACW,MAAM,CAAC,eACzC,EAAK,CAAC,EACH,CAAC,cAGN5B,IAAA,WACEoD,OAAO,CAAEA,CAAA,GAAM/C,eAAe,CAAC,IAAI,CAAE,CACrCiC,SAAS,CAAC,mIAAmI,CAC7IC,KAAK,CAAE,CACLC,eAAe,CAAEzB,WAAW,CAACyB,eAAe,CAC5CC,MAAM,cAAAC,MAAA,CAAe3B,WAAW,CAACsC,YAAY,CAAE,CAC/CT,YAAY,CAAE,MAAM,CACpBO,KAAK,CAAEpC,WAAW,CAACsC,YAAY,CAC/BR,SAAS,CAAEhC,YAAY,GAAK,SAAS,CACjC,kEAAkE,YAAA6B,MAAA,CACvD3B,WAAW,CAACsC,YAAY,qCACzC,CAAE,CAAAN,QAAA,cAEF7C,KAAA,QAAKoC,SAAS,CAAC,uCAAuC,CAAAS,QAAA,eACpD/C,IAAA,CAACV,IAAI,EAAC4D,IAAI,CAAE,EAAG,CAACX,KAAK,CAAE,CAAEY,KAAK,CAAEpC,WAAW,CAACsC,YAAa,CAAE,CAAE,CAAC,cAC9DrD,IAAA,SAAMsC,SAAS,CAAC,SAAS,CAAAS,QAAA,CACtB9B,oBAAoB,CAACW,MAAM,CAAG,CAAC,CAAG,YAAY,CAAG,eAAe,CAC7D,CAAC,EACJ,CAAC,CACA,CAAC,EACN,CAAC,cAGN1B,KAAA,QAAKoC,SAAS,CAAC,uCAAuC,CAAAS,QAAA,EACnDzC,cAAc,CAACgD,GAAG,CAACC,OAAO,EAAI,CAC7B,KAAM,CAAAvB,WAAW,CAAGF,kBAAkB,CAACyB,OAAO,CAAC,CAC/C,GAAI,CAACvB,WAAW,CAAE,MAAO,KAAI,CAE7B,mBACEhC,IAAA,QAAmBsC,SAAS,CAAC,UAAU,CAAAS,QAAA,cACrC/C,IAAA,CAACF,gBAAgB,EACfkC,WAAW,CAAEA,WAAY,CACzBwB,UAAU,CAAE,IAAK,CACjBN,IAAI,CAAC,QAAQ,CACbO,OAAO,CAAE,KAAM,CAChB,CAAC,EANMF,OAOL,CAAC,CAEV,CAAC,CAAC,CAGDG,KAAK,CAACC,IAAI,CAAC,CAAE/B,MAAM,CAAE,CAAC,CAAGtB,cAAc,CAACsB,MAAO,CAAC,CAAE,CAACgC,CAAC,CAAEC,KAAK,gBAC1D3D,KAAA,QAEEoC,SAAS,CAAC,mHAAmH,CAC7HC,KAAK,CAAE,CACLK,YAAY,CAAE,MAAO;AACvB,CAAE,CAAAG,QAAA,eAEF/C,IAAA,CAACV,IAAI,EAAC4D,IAAI,CAAE,EAAG,CAACZ,SAAS,CAAC,oBAAoB,CAAE,CAAC,cACjDtC,IAAA,SAAMsC,SAAS,CAAC,iCAAiC,CAAAS,QAAA,CAAC,YAAU,CAAM,CAAC,YAAAL,MAAA,CAPrDmB,KAAK,CAQhB,CACN,CAAC,EACC,CAAC,EACH,CAAC,cAGN7D,IAAA,CAACX,eAAe,EAAA0D,QAAA,CACb3C,YAAY,eACXJ,IAAA,CAACZ,MAAM,CAAC6C,GAAG,EACTC,OAAO,CAAE,CAAEC,OAAO,CAAE,CAAE,CAAE,CACxBE,OAAO,CAAE,CAAEF,OAAO,CAAE,CAAE,CAAE,CACxB2B,IAAI,CAAE,CAAE3B,OAAO,CAAE,CAAE,CAAE,CACrBG,SAAS,CAAC,4EAA4E,CACtFc,OAAO,CAAEA,CAAA,GAAM/C,eAAe,CAAC,KAAK,CAAE,CAAA0C,QAAA,cAEtC7C,KAAA,CAACd,MAAM,CAAC6C,GAAG,EACTC,OAAO,CAAE,CAAE6B,KAAK,CAAE,GAAG,CAAE5B,OAAO,CAAE,CAAE,CAAE,CACpCE,OAAO,CAAE,CAAE0B,KAAK,CAAE,CAAC,CAAE5B,OAAO,CAAE,CAAE,CAAE,CAClC2B,IAAI,CAAE,CAAEC,KAAK,CAAE,GAAG,CAAE5B,OAAO,CAAE,CAAE,CAAE,CACjCG,SAAS,CAAC,0DAA0D,CACpEC,KAAK,CAAE,CACLC,eAAe,CAAEzB,WAAW,CAACyB,eAAe,CAC5CC,MAAM,cAAAC,MAAA,CAAe3B,WAAW,CAACsC,YAAY,CAAE,CAC/CT,YAAY,CAAE,MAAM,CAAE;AACtBC,SAAS,CAAEhC,YAAY,GAAK,SAAS,CACjC,kEAAkE,aAAA6B,MAAA,CACtD3B,WAAW,CAACsC,YAAY,qCAC1C,CAAE,CACFD,OAAO,CAAGY,CAAC,EAAKA,CAAC,CAACC,eAAe,CAAC,CAAE,CAAAlB,QAAA,eAGpC/C,IAAA,QAAKsC,SAAS,CAAC,+DAA+D,CACzEC,KAAK,CAAE,CACLE,MAAM,cAAAC,MAAA,CAAe3B,WAAW,CAACsC,YAAY,CAAE,CAC/CT,YAAY,CAAE,MAAO;AACvB,CAAE,CAAE,CAAC,cAGV5C,IAAA,WACEoD,OAAO,CAAEA,CAAA,GAAM/C,eAAe,CAAC,KAAK,CAAE,CACtCiC,SAAS,CAAC,8EAA8E,CAAAS,QAAA,cAExF/C,IAAA,CAACT,CAAC,EAAC2D,IAAI,CAAE,EAAG,CAAE,CAAC,CACT,CAAC,cAGThD,KAAA,QAAA6C,QAAA,eACE/C,IAAA,OAAIsC,SAAS,CAAC,8CAA8C,CAAAS,QAAA,CAAC,wBAE7D,CAAI,CAAC,cAEL7C,KAAA,MAAGoC,SAAS,CAAC,wBAAwB,CAACC,KAAK,CAAE,CAAEY,KAAK,CAAEpC,WAAW,CAACsC,YAAa,CAAE,CAAAN,QAAA,EAAC,0DACxB,CAACzC,cAAc,CAACsB,MAAM,CAAC,cACjF,EAAG,CAAC,CAEHX,oBAAoB,CAACW,MAAM,GAAK,CAAC,cAChC1B,KAAA,QAAKoC,SAAS,CAAC,kBAAkB,CAAAS,QAAA,EAC9BlC,YAAY,GAAK,MAAM,cACtBb,IAAA,CAACP,KAAK,EAACyD,IAAI,CAAE,EAAG,CAACZ,SAAS,CAAC,4BAA4B,CAAE,CAAC,cAE1DtC,IAAA,CAACR,IAAI,EAAC0D,IAAI,CAAE,EAAG,CAACZ,SAAS,CAAC,4BAA4B,CAAE,CACzD,cACDtC,IAAA,QAAKsC,SAAS,CAAC,iCAAiC,CAAAS,QAAA,CAAC,yCAEjD,CAAK,CAAC,EACH,CAAC,cAEN/C,IAAA,QAAKsC,SAAS,CAAC,WAAW,CAAAS,QAAA,CACvBmB,MAAM,CAACC,OAAO,CAACtE,QAAQ,CAAC,CAACyD,GAAG,CAACc,IAAA,EAAqB,IAApB,CAACC,OAAO,CAAEC,IAAI,CAAC,CAAAF,IAAA,CAC5C,KAAM,CAAAG,gBAAgB,CAAGtD,oBAAoB,CAACS,MAAM,CAAC8C,CAAC,EAAIA,CAAC,CAACF,IAAI,GAAKD,OAAO,CAAC,CAC7E,GAAIE,gBAAgB,CAAC3C,MAAM,GAAK,CAAC,CAAE,MAAO,KAAI,CAE9C,mBACE1B,KAAA,QAAA6C,QAAA,eACE7C,KAAA,OAAIoC,SAAS,CAAC,4DAA4D,CAAAS,QAAA,eACxE/C,IAAA,SAAMuC,KAAK,CAAE,CAAEY,KAAK,CAAEmB,IAAI,CAACnB,KAAM,CAAE,CAAAJ,QAAA,CAAEuB,IAAI,CAACG,KAAK,CAAO,CAAC,cACvDzE,IAAA,SAAMuC,KAAK,CAAE,CAAEY,KAAK,CAAEmB,IAAI,CAACnB,KAAM,CAAE,CAAAJ,QAAA,CAAEuB,IAAI,CAACI,IAAI,CAAO,CAAC,cACtDxE,KAAA,SAAMoC,SAAS,CAAC,uBAAuB,CAAAS,QAAA,EAAC,GAAC,CAACwB,gBAAgB,CAAC3C,MAAM,CAAC,GAAC,EAAM,CAAC,EACxE,CAAC,cAEL5B,IAAA,QAAKsC,SAAS,CAAC,sDAAsD,CAAAS,QAAA,CAClEwB,gBAAgB,CAACjB,GAAG,CAACtB,WAAW,eAC/B9B,KAAA,QAA0BoC,SAAS,CAAC,UAAU,CAAAS,QAAA,eAC5C/C,IAAA,QACEsC,SAAS,+CAAAI,MAAA,CACPpC,cAAc,CAACmB,QAAQ,CAACO,WAAW,CAACL,EAAE,CAAC,CACnC,wBAAwB,CACxB,iBAAiB,CACpB,CACHY,KAAK,CAAE,CACLoC,SAAS,CAAErE,cAAc,CAACmB,QAAQ,CAACO,WAAW,CAACL,EAAE,CAAC,CAAG2C,IAAI,CAACnB,KAAK,CAAG,aACpE,CAAE,CACFC,OAAO,CAAEA,CAAA,GAAM9B,oBAAoB,CAACU,WAAW,CAACL,EAAE,CAAE,CAAAoB,QAAA,cAEpD/C,IAAA,CAACF,gBAAgB,EACfkC,WAAW,CAAEA,WAAY,CACzBwB,UAAU,CAAE,IAAK,CACjBN,IAAI,CAAC,OAAO,CACZO,OAAO,CAAE,IAAK,CACf,CAAC,CACC,CAAC,CAGLnD,cAAc,CAACmB,QAAQ,CAACO,WAAW,CAACL,EAAE,CAAC,eACtC3B,IAAA,QAAKsC,SAAS,CAAC,iHAAiH,CAAAS,QAAA,CAC7HlC,YAAY,GAAK,MAAM,cACtBb,IAAA,CAACP,KAAK,EAACyD,IAAI,CAAE,EAAG,CAACZ,SAAS,CAAC,yBAAyB,CAAE,CAAC,cAEvDtC,IAAA,CAACR,IAAI,EAAC0D,IAAI,CAAE,EAAG,CAACZ,SAAS,CAAC,yBAAyB,CAAE,CACtD,CACE,CACN,GA7BON,WAAW,CAACL,EA8BjB,CACN,CAAC,CACC,CAAC,GAzCE0C,OA0CL,CAAC,CAEV,CAAC,CAAC,CACC,CACN,EACE,CAAC,EACI,CAAC,CACH,CACb,CACc,CAAC,EACR,CAAC,CAEjB,CAAC,CAED,cAAe,CAAAlE,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}