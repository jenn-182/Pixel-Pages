{"ast":null,"code":"var _jsxFileName = \"/Users/jenn/Projects/Pixel-Pages/frontend/src/components/modals/SaveSessionModal.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { motion } from 'framer-motion';\nimport { Save, Trash2, Plus, Trophy, Code, BookOpen, Briefcase, Palette, User } from 'lucide-react';\nimport apiService from '../../services/api';\nimport achievementService from '../../services/achievementService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SaveSessionModal = ({\n  isOpen,\n  onSave,\n  onDiscard,\n  timeSpent,\n  sessionType = 'session',\n  username = 'user' // Add username prop\n}) => {\n  _s();\n  const [selectedCategory, setSelectedCategory] = useState('');\n  const [customCategoryName, setCustomCategoryName] = useState('');\n  const [showCustomInput, setShowCustomInput] = useState(false);\n  const [savedCategories, setSavedCategories] = useState([]);\n\n  // Icon mapping function\n  const getIconComponent = iconName => {\n    const iconMap = {\n      'BookOpen': BookOpen,\n      'Briefcase': Briefcase,\n      'Palette': Palette,\n      'Code': Code,\n      'User': User\n    };\n    return iconMap[iconName] || User;\n  };\n\n  // Load categories from localStorage only\n  useEffect(() => {\n    const loadCategories = async () => {\n      // Default categories\n      const defaultCategories = [{\n        id: 'study',\n        name: 'Study',\n        iconName: 'BookOpen',\n        color: '#3B82F6',\n        xp: 0\n      }, {\n        id: 'work',\n        name: 'Work',\n        iconName: 'Briefcase',\n        color: '#10B981',\n        xp: 0\n      }, {\n        id: 'read',\n        name: 'Read',\n        iconName: 'BookOpen',\n        color: '#8B5CF6',\n        xp: 0\n      }, {\n        id: 'create',\n        name: 'Create',\n        iconName: 'Palette',\n        color: '#F59E0B',\n        xp: 0\n      }, {\n        id: 'code',\n        name: 'Code',\n        iconName: 'Code',\n        color: '#EF4444',\n        xp: 0\n      }];\n\n      // Get categories from localStorage\n      const saved = localStorage.getItem('focusCategories');\n      if (saved) {\n        setSavedCategories(JSON.parse(saved));\n      } else {\n        // Initialize with defaults\n        localStorage.setItem('focusCategories', JSON.stringify(defaultCategories));\n        setSavedCategories(defaultCategories);\n      }\n    };\n    if (isOpen) {\n      loadCategories();\n    }\n  }, [isOpen, username]);\n\n  // Handle category selection\n  const handleCategorySelect = categoryId => {\n    setSelectedCategory(categoryId);\n    setShowCustomInput(false);\n    setCustomCategoryName('');\n  };\n\n  // Handle custom category\n  const handleCustomCategory = () => {\n    setShowCustomInput(true);\n    setSelectedCategory('custom');\n  };\n\n  // Save session with category to localStorage\n  const handleSave = async () => {\n    let finalCategory = selectedCategory;\n    if (selectedCategory === 'custom' && customCategoryName.trim()) {\n      // Create new custom category\n      const newCategory = {\n        id: customCategoryName.toLowerCase().replace(/\\s+/g, '_'),\n        name: customCategoryName.trim(),\n        iconName: 'User',\n        color: '#6B7280',\n        xp: 0,\n        isCustom: true\n      };\n      const updatedCategories = [...savedCategories, newCategory];\n      setSavedCategories(updatedCategories);\n      localStorage.setItem('focusCategories', JSON.stringify(updatedCategories));\n      finalCategory = newCategory.id;\n    }\n    if (finalCategory && finalCategory !== 'custom') {\n      // Update local XP tracking\n      const updatedCategories = savedCategories.map(cat => cat.id === finalCategory ? {\n        ...cat,\n        xp: (cat.xp || 0) + timeSpent\n      } : cat);\n      setSavedCategories(updatedCategories);\n      localStorage.setItem('focusCategories', JSON.stringify(updatedCategories));\n\n      // Save individual session for history tracking\n      const sessions = JSON.parse(localStorage.getItem('focusSessions') || '[]');\n      const newSession = {\n        id: Date.now(),\n        username,\n        category: finalCategory,\n        timeSpent,\n        sessionType,\n        createdAt: new Date().toISOString(),\n        date: new Date().toDateString()\n      };\n      sessions.push(newSession);\n      localStorage.setItem('focusSessions', JSON.stringify(sessions));\n\n      // 🎮 CHECK ACHIEVEMENTS AFTER SAVING SESSION\n      const userStats = calculateFocusStats(sessions, updatedCategories);\n      const newAchievements = achievementService.checkAchievements(userStats);\n      if (newAchievements.length > 0) {\n        console.log(`🎉 Unlocked ${newAchievements.length} achievement(s)!`);\n        // Show achievement notifications in UI\n        newAchievements.forEach(achievement => {\n          showAchievementToast(achievement);\n        });\n      }\n      console.log(`💾 Saved ${timeSpent} minutes to ${finalCategory} category`);\n      onSave(finalCategory);\n    }\n  };\n\n  // Reset modal state\n  const resetModal = () => {\n    setSelectedCategory('');\n    setCustomCategoryName('');\n    setShowCustomInput(false);\n  };\n  useEffect(() => {\n    if (!isOpen) {\n      resetModal();\n    }\n  }, [isOpen]);\n  if (!isOpen) return null;\n  const selectedCategoryData = savedCategories.find(cat => cat.id === selectedCategory);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fixed inset-0 bg-black bg-opacity-75 flex items-center justify-center z-50 p-4\",\n    children: /*#__PURE__*/_jsxDEV(motion.div, {\n      initial: {\n        scale: 0.8,\n        opacity: 0\n      },\n      animate: {\n        scale: 1,\n        opacity: 1\n      },\n      className: \"bg-gray-800 border-2 border-purple-500 shadow-[8px_8px_0px_0px_rgba(0,0,0,1)] p-6 w-full max-w-md relative\",\n      style: {\n        boxShadow: '0 0 20px rgba(139, 92, 246, 0.3), 8px 8px 0px 0px rgba(0,0,0,1)'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"absolute inset-0 bg-gradient-to-br from-purple-500/10 to-purple-700/20 pointer-events-none\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"absolute inset-0 border-2 border-purple-500 opacity-30 animate-pulse pointer-events-none\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"relative z-10\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center mb-6\",\n          children: [/*#__PURE__*/_jsxDEV(Trophy, {\n            size: 32,\n            className: \"text-yellow-400 mx-auto mb-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"font-mono text-xl font-bold text-white mb-2\",\n            children: sessionType === 'partial' ? 'PARTIAL SESSION COMPLETE!' : 'SESSION COMPLETE!'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"font-mono text-purple-400 text-lg\",\n            children: [\"+\", timeSpent, \" minutes earned\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"font-mono text-gray-400 text-sm mt-1\",\n            children: \"Choose a category to gain XP or discard\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-sm font-mono text-gray-300 mb-3\",\n            children: \"SELECT CATEGORY:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid grid-cols-2 gap-2 mb-3\",\n            children: savedCategories.map(category => {\n              // Fix: Get the icon component dynamically\n              const IconComponent = getIconComponent(category.iconName || category.icon);\n              return /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleCategorySelect(category.id),\n                className: `p-3 border-2 transition-all duration-200 font-mono text-sm ${selectedCategory === category.id ? 'border-purple-400 bg-purple-500 bg-opacity-20' : 'border-gray-600 hover:border-gray-500'}`,\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex items-center gap-2\",\n                  children: [/*#__PURE__*/_jsxDEV(IconComponent, {\n                    size: 16,\n                    style: {\n                      color: category.color\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 199,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"text-white font-bold\",\n                    children: category.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 200,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 198,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-xs text-gray-400 mt-1\",\n                  children: [category.xp || 0, \"m XP\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 202,\n                  columnNumber: 21\n                }, this)]\n              }, category.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 19\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleCustomCategory,\n            className: `w-full p-3 border-2 transition-all duration-200 font-mono text-sm ${selectedCategory === 'custom' ? 'border-purple-400 bg-purple-500 bg-opacity-20' : 'border-gray-600 hover:border-gray-500'}`,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center justify-center gap-2\",\n              children: [/*#__PURE__*/_jsxDEV(Plus, {\n                size: 16,\n                className: \"text-gray-400\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-gray-300\",\n                children: \"Create New Category\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 221,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 13\n          }, this), showCustomInput && /*#__PURE__*/_jsxDEV(motion.div, {\n            initial: {\n              height: 0,\n              opacity: 0\n            },\n            animate: {\n              height: 'auto',\n              opacity: 1\n            },\n            className: \"mt-3\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Enter category name...\",\n              value: customCategoryName,\n              onChange: e => setCustomCategoryName(e.target.value),\n              className: \"w-full p-3 bg-gray-900 border border-gray-600 text-white font-mono text-sm focus:border-purple-400 focus:outline-none\",\n              autoFocus: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }, this), selectedCategoryData && /*#__PURE__*/_jsxDEV(motion.div, {\n          initial: {\n            opacity: 0,\n            y: 10\n          },\n          animate: {\n            opacity: 1,\n            y: 0\n          },\n          className: \"bg-gray-900 border border-purple-500 p-3 mb-6\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center font-mono\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-sm text-gray-400\",\n              children: \"XP GAIN PREVIEW:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-lg text-purple-400 font-bold\",\n              children: [selectedCategoryData.name, \": \", selectedCategoryData.xp || 0, \"m \\u2192 \", (selectedCategoryData.xp || 0) + timeSpent, \"m\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-xs text-green-400\",\n              children: [\"+\", timeSpent, \" XP gained!\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex gap-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSave,\n            disabled: !selectedCategory || selectedCategory === 'custom' && !customCategoryName.trim(),\n            className: \"flex-1 bg-gray-900 border-2 border-green-500 px-4 py-3 font-mono font-bold text-green-500 hover:bg-green-500 hover:bg-opacity-10 transition-colors disabled:opacity-50 disabled:cursor-not-allowed\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center justify-center gap-2\",\n              children: [/*#__PURE__*/_jsxDEV(Save, {\n                size: 16\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 269,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\"SAVE +\", timeSpent, \" XP\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 270,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: onDiscard,\n            className: \"flex-1 bg-gray-900 border-2 border-red-500 px-4 py-3 font-mono font-bold text-red-500 hover:bg-red-500 hover:bg-opacity-10 transition-colors\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center justify-center gap-2\",\n              children: [/*#__PURE__*/_jsxDEV(Trash2, {\n                size: 16\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 279,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"DISCARD\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 280,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 154,\n    columnNumber: 5\n  }, this);\n};\n_s(SaveSessionModal, \"zJ+g99PMJpGN/93SRTfvkmhqAWE=\");\n_c = SaveSessionModal;\nexport default SaveSessionModal;\n\n// Add helper function to calculate focus stats\nconst calculateFocusStats = (sessions, categories) => {\n  const now = new Date();\n  const today = now.toDateString();\n  const thisWeek = getWeekStart(now);\n  const thisMonth = new Date(now.getFullYear(), now.getMonth(), 1);\n\n  // Calculate focus statistics\n  const totalSessions = sessions.length;\n  const totalFocusTime = sessions.reduce((sum, session) => sum + session.timeSpent, 0);\n  const maxSessionDuration = Math.max(...sessions.map(s => s.timeSpent), 0);\n\n  // Sessions by duration\n  const sessionsByDuration = {};\n  sessions.forEach(session => {\n    sessionsByDuration[session.timeSpent] = (sessionsByDuration[session.timeSpent] || 0) + 1;\n  });\n\n  // Category statistics\n  const categorySessions = {};\n  const categoryTime = {};\n  sessions.forEach(session => {\n    categorySessions[session.category] = (categorySessions[session.category] || 0) + 1;\n    categoryTime[session.category] = (categoryTime[session.category] || 0) + session.timeSpent;\n  });\n\n  // Time-based sessions\n  const sessionsByTime = {};\n  sessions.forEach(session => {\n    const hour = new Date(session.createdAt).getHours();\n    sessionsByTime[hour] = (sessionsByTime[hour] || 0) + 1;\n  });\n\n  // Streaks (simplified - you may want more sophisticated streak calculation)\n  const focusStreak = calculateFocusStreak(sessions);\n\n  // Today's sessions\n  const todaySessions = sessions.filter(s => new Date(s.createdAt).toDateString() === today).length;\n\n  // Week sessions\n  const weekSessions = sessions.filter(s => new Date(s.createdAt) >= thisWeek).length;\n\n  // Month sessions\n  const monthSessions = sessions.filter(s => new Date(s.createdAt) >= thisMonth).length;\n\n  // Long sessions (90+ minutes)\n  const sessionsOver90Min = sessions.filter(s => s.timeSpent >= 90).length;\n\n  // Break sessions (5-15 minutes)\n  const breakSessions = sessions.filter(s => s.timeSpent >= 5 && s.timeSpent <= 15).length;\n  return {\n    totalSessions,\n    totalFocusTime,\n    maxSessionDuration,\n    sessionsByDuration,\n    categorySessions,\n    categoryTime,\n    sessionsByTime,\n    focusStreak,\n    todaySessions,\n    weekSessions,\n    monthSessions,\n    sessionsOver90Min,\n    breakSessions,\n    uniqueCategories: Object.keys(categorySessions).length\n  };\n};\n\n// Helper function for focus streak calculation\nconst calculateFocusStreak = sessions => {\n  if (sessions.length === 0) return 0;\n  const dates = [...new Set(sessions.map(s => new Date(s.createdAt).toDateString()))].sort();\n  let streak = 1;\n  let currentStreak = 1;\n  for (let i = 1; i < dates.length; i++) {\n    const prevDate = new Date(dates[i - 1]);\n    const currentDate = new Date(dates[i]);\n    const dayDiff = (currentDate - prevDate) / (1000 * 60 * 60 * 24);\n    if (dayDiff === 1) {\n      currentStreak++;\n      streak = Math.max(streak, currentStreak);\n    } else {\n      currentStreak = 1;\n    }\n  }\n  return streak;\n};\n\n// Helper function for week start\nconst getWeekStart = date => {\n  const d = new Date(date);\n  const day = d.getDay();\n  const diff = d.getDate() - day;\n  return new Date(d.setDate(diff));\n};\n\n// Add achievement toast notification function\nconst showAchievementToast = achievement => {\n  // You can integrate with react-toastify or create custom notification\n  console.log(`🏆 Achievement Unlocked: ${achievement.name}!`);\n  // Example with custom notification (you'll need to implement this component)\n  // toast.success(`🏆 ${achievement.name} unlocked! +${achievement.xpReward} XP`);\n};\nvar _c;\n$RefreshReg$(_c, \"SaveSessionModal\");","map":{"version":3,"names":["React","useState","useEffect","motion","Save","Trash2","Plus","Trophy","Code","BookOpen","Briefcase","Palette","User","apiService","achievementService","jsxDEV","_jsxDEV","SaveSessionModal","isOpen","onSave","onDiscard","timeSpent","sessionType","username","_s","selectedCategory","setSelectedCategory","customCategoryName","setCustomCategoryName","showCustomInput","setShowCustomInput","savedCategories","setSavedCategories","getIconComponent","iconName","iconMap","loadCategories","defaultCategories","id","name","color","xp","saved","localStorage","getItem","JSON","parse","setItem","stringify","handleCategorySelect","categoryId","handleCustomCategory","handleSave","finalCategory","trim","newCategory","toLowerCase","replace","isCustom","updatedCategories","map","cat","sessions","newSession","Date","now","category","createdAt","toISOString","date","toDateString","push","userStats","calculateFocusStats","newAchievements","checkAchievements","length","console","log","forEach","achievement","showAchievementToast","resetModal","selectedCategoryData","find","className","children","div","initial","scale","opacity","animate","style","boxShadow","fileName","_jsxFileName","lineNumber","columnNumber","size","IconComponent","icon","onClick","height","type","placeholder","value","onChange","e","target","autoFocus","y","disabled","_c","categories","today","thisWeek","getWeekStart","thisMonth","getFullYear","getMonth","totalSessions","totalFocusTime","reduce","sum","session","maxSessionDuration","Math","max","s","sessionsByDuration","categorySessions","categoryTime","sessionsByTime","hour","getHours","focusStreak","calculateFocusStreak","todaySessions","filter","weekSessions","monthSessions","sessionsOver90Min","breakSessions","uniqueCategories","Object","keys","dates","Set","sort","streak","currentStreak","i","prevDate","currentDate","dayDiff","d","day","getDay","diff","getDate","setDate","$RefreshReg$"],"sources":["/Users/jenn/Projects/Pixel-Pages/frontend/src/components/modals/SaveSessionModal.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { motion } from 'framer-motion';\nimport { Save, Trash2, Plus, Trophy, Code, BookOpen, Briefcase, Palette, User } from 'lucide-react';\nimport apiService from '../../services/api';\nimport achievementService from '../../services/achievementService';\n\nconst SaveSessionModal = ({ \n  isOpen, \n  onSave, \n  onDiscard, \n  timeSpent, \n  sessionType = 'session',\n  username = 'user' // Add username prop\n}) => {\n  const [selectedCategory, setSelectedCategory] = useState('');\n  const [customCategoryName, setCustomCategoryName] = useState('');\n  const [showCustomInput, setShowCustomInput] = useState(false);\n  const [savedCategories, setSavedCategories] = useState([]);\n\n  // Icon mapping function\n  const getIconComponent = (iconName) => {\n    const iconMap = {\n      'BookOpen': BookOpen,\n      'Briefcase': Briefcase,\n      'Palette': Palette,\n      'Code': Code,\n      'User': User\n    };\n    return iconMap[iconName] || User;\n  };\n\n  // Load categories from localStorage only\n  useEffect(() => {\n    const loadCategories = async () => {\n      // Default categories\n      const defaultCategories = [\n        { id: 'study', name: 'Study', iconName: 'BookOpen', color: '#3B82F6', xp: 0 },\n        { id: 'work', name: 'Work', iconName: 'Briefcase', color: '#10B981', xp: 0 },\n        { id: 'read', name: 'Read', iconName: 'BookOpen', color: '#8B5CF6', xp: 0 },\n        { id: 'create', name: 'Create', iconName: 'Palette', color: '#F59E0B', xp: 0 },\n        { id: 'code', name: 'Code', iconName: 'Code', color: '#EF4444', xp: 0 }\n      ];\n\n      // Get categories from localStorage\n      const saved = localStorage.getItem('focusCategories');\n      if (saved) {\n        setSavedCategories(JSON.parse(saved));\n      } else {\n        // Initialize with defaults\n        localStorage.setItem('focusCategories', JSON.stringify(defaultCategories));\n        setSavedCategories(defaultCategories);\n      }\n    };\n\n    if (isOpen) {\n      loadCategories();\n    }\n  }, [isOpen, username]);\n\n  // Handle category selection\n  const handleCategorySelect = (categoryId) => {\n    setSelectedCategory(categoryId);\n    setShowCustomInput(false);\n    setCustomCategoryName('');\n  };\n\n  // Handle custom category\n  const handleCustomCategory = () => {\n    setShowCustomInput(true);\n    setSelectedCategory('custom');\n  };\n\n  // Save session with category to localStorage\n  const handleSave = async () => {\n    let finalCategory = selectedCategory;\n    \n    if (selectedCategory === 'custom' && customCategoryName.trim()) {\n      // Create new custom category\n      const newCategory = {\n        id: customCategoryName.toLowerCase().replace(/\\s+/g, '_'),\n        name: customCategoryName.trim(),\n        iconName: 'User',\n        color: '#6B7280',\n        xp: 0,\n        isCustom: true\n      };\n      \n      const updatedCategories = [...savedCategories, newCategory];\n      setSavedCategories(updatedCategories);\n      localStorage.setItem('focusCategories', JSON.stringify(updatedCategories));\n      \n      finalCategory = newCategory.id;\n    }\n    \n    if (finalCategory && finalCategory !== 'custom') {\n      // Update local XP tracking\n      const updatedCategories = savedCategories.map(cat => \n        cat.id === finalCategory \n          ? { ...cat, xp: (cat.xp || 0) + timeSpent }\n          : cat\n      );\n      setSavedCategories(updatedCategories);\n      localStorage.setItem('focusCategories', JSON.stringify(updatedCategories));\n      \n      // Save individual session for history tracking\n      const sessions = JSON.parse(localStorage.getItem('focusSessions') || '[]');\n      const newSession = {\n        id: Date.now(),\n        username,\n        category: finalCategory,\n        timeSpent,\n        sessionType,\n        createdAt: new Date().toISOString(),\n        date: new Date().toDateString()\n      };\n      sessions.push(newSession);\n      localStorage.setItem('focusSessions', JSON.stringify(sessions));\n      \n      // 🎮 CHECK ACHIEVEMENTS AFTER SAVING SESSION\n      const userStats = calculateFocusStats(sessions, updatedCategories);\n      const newAchievements = achievementService.checkAchievements(userStats);\n      \n      if (newAchievements.length > 0) {\n        console.log(`🎉 Unlocked ${newAchievements.length} achievement(s)!`);\n        // Show achievement notifications in UI\n        newAchievements.forEach(achievement => {\n          showAchievementToast(achievement);\n        });\n      }\n      \n      console.log(`💾 Saved ${timeSpent} minutes to ${finalCategory} category`);\n      onSave(finalCategory);\n    }\n  };\n\n  // Reset modal state\n  const resetModal = () => {\n    setSelectedCategory('');\n    setCustomCategoryName('');\n    setShowCustomInput(false);\n  };\n\n  useEffect(() => {\n    if (!isOpen) {\n      resetModal();\n    }\n  }, [isOpen]);\n\n  if (!isOpen) return null;\n\n  const selectedCategoryData = savedCategories.find(cat => cat.id === selectedCategory);\n\n  return (\n    <div className=\"fixed inset-0 bg-black bg-opacity-75 flex items-center justify-center z-50 p-4\">\n      <motion.div\n        initial={{ scale: 0.8, opacity: 0 }}\n        animate={{ scale: 1, opacity: 1 }}\n        className=\"bg-gray-800 border-2 border-purple-500 shadow-[8px_8px_0px_0px_rgba(0,0,0,1)] p-6 w-full max-w-md relative\"\n        style={{\n          boxShadow: '0 0 20px rgba(139, 92, 246, 0.3), 8px 8px 0px 0px rgba(0,0,0,1)'\n        }}\n      >\n        <div className=\"absolute inset-0 bg-gradient-to-br from-purple-500/10 to-purple-700/20 pointer-events-none\" />\n        <div className=\"absolute inset-0 border-2 border-purple-500 opacity-30 animate-pulse pointer-events-none\" />\n        \n        <div className=\"relative z-10\">\n          {/* Header */}\n          <div className=\"text-center mb-6\">\n            <Trophy size={32} className=\"text-yellow-400 mx-auto mb-2\" />\n            <h3 className=\"font-mono text-xl font-bold text-white mb-2\">\n              {sessionType === 'partial' ? 'PARTIAL SESSION COMPLETE!' : 'SESSION COMPLETE!'}\n            </h3>\n            <p className=\"font-mono text-purple-400 text-lg\">\n              +{timeSpent} minutes earned\n            </p>\n            <p className=\"font-mono text-gray-400 text-sm mt-1\">\n              Choose a category to gain XP or discard\n            </p>\n          </div>\n\n          {/* Category Selection */}\n          <div className=\"mb-6\">\n            <div className=\"text-sm font-mono text-gray-300 mb-3\">SELECT CATEGORY:</div>\n            <div className=\"grid grid-cols-2 gap-2 mb-3\">\n              {savedCategories.map(category => {\n                // Fix: Get the icon component dynamically\n                const IconComponent = getIconComponent(category.iconName || category.icon);\n                return (\n                  <button\n                    key={category.id}\n                    onClick={() => handleCategorySelect(category.id)}\n                    className={`p-3 border-2 transition-all duration-200 font-mono text-sm ${\n                      selectedCategory === category.id\n                        ? 'border-purple-400 bg-purple-500 bg-opacity-20'\n                        : 'border-gray-600 hover:border-gray-500'\n                    }`}\n                  >\n                    <div className=\"flex items-center gap-2\">\n                      <IconComponent size={16} style={{ color: category.color }} />\n                      <span className=\"text-white font-bold\">{category.name}</span>\n                    </div>\n                    <div className=\"text-xs text-gray-400 mt-1\">\n                      {category.xp || 0}m XP\n                    </div>\n                  </button>\n                );\n              })}\n            </div>\n\n            {/* Custom Category Button */}\n            <button\n              onClick={handleCustomCategory}\n              className={`w-full p-3 border-2 transition-all duration-200 font-mono text-sm ${\n                selectedCategory === 'custom'\n                  ? 'border-purple-400 bg-purple-500 bg-opacity-20'\n                  : 'border-gray-600 hover:border-gray-500'\n              }`}\n            >\n              <div className=\"flex items-center justify-center gap-2\">\n                <Plus size={16} className=\"text-gray-400\" />\n                <span className=\"text-gray-300\">Create New Category</span>\n              </div>\n            </button>\n\n            {/* Custom Category Input */}\n            {showCustomInput && (\n              <motion.div\n                initial={{ height: 0, opacity: 0 }}\n                animate={{ height: 'auto', opacity: 1 }}\n                className=\"mt-3\"\n              >\n                <input\n                  type=\"text\"\n                  placeholder=\"Enter category name...\"\n                  value={customCategoryName}\n                  onChange={(e) => setCustomCategoryName(e.target.value)}\n                  className=\"w-full p-3 bg-gray-900 border border-gray-600 text-white font-mono text-sm focus:border-purple-400 focus:outline-none\"\n                  autoFocus\n                />\n              </motion.div>\n            )}\n          </div>\n\n          {/* XP Preview */}\n          {selectedCategoryData && (\n            <motion.div\n              initial={{ opacity: 0, y: 10 }}\n              animate={{ opacity: 1, y: 0 }}\n              className=\"bg-gray-900 border border-purple-500 p-3 mb-6\"\n            >\n              <div className=\"text-center font-mono\">\n                <div className=\"text-sm text-gray-400\">XP GAIN PREVIEW:</div>\n                <div className=\"text-lg text-purple-400 font-bold\">\n                  {selectedCategoryData.name}: {(selectedCategoryData.xp || 0)}m → {(selectedCategoryData.xp || 0) + timeSpent}m\n                </div>\n                <div className=\"text-xs text-green-400\">+{timeSpent} XP gained!</div>\n              </div>\n            </motion.div>\n          )}\n\n          {/* Action Buttons */}\n          <div className=\"flex gap-3\">\n            <button\n              onClick={handleSave}\n              disabled={!selectedCategory || (selectedCategory === 'custom' && !customCategoryName.trim())}\n              className=\"flex-1 bg-gray-900 border-2 border-green-500 px-4 py-3 font-mono font-bold text-green-500 hover:bg-green-500 hover:bg-opacity-10 transition-colors disabled:opacity-50 disabled:cursor-not-allowed\"\n            >\n              <div className=\"flex items-center justify-center gap-2\">\n                <Save size={16} />\n                <span>SAVE +{timeSpent} XP</span>\n              </div>\n            </button>\n\n            <button\n              onClick={onDiscard}\n              className=\"flex-1 bg-gray-900 border-2 border-red-500 px-4 py-3 font-mono font-bold text-red-500 hover:bg-red-500 hover:bg-opacity-10 transition-colors\"\n            >\n              <div className=\"flex items-center justify-center gap-2\">\n                <Trash2 size={16} />\n                <span>DISCARD</span>\n              </div>\n            </button>\n          </div>\n        </div>\n      </motion.div>\n    </div>\n  );\n};\n\nexport default SaveSessionModal;\n\n// Add helper function to calculate focus stats\nconst calculateFocusStats = (sessions, categories) => {\n  const now = new Date();\n  const today = now.toDateString();\n  const thisWeek = getWeekStart(now);\n  const thisMonth = new Date(now.getFullYear(), now.getMonth(), 1);\n  \n  // Calculate focus statistics\n  const totalSessions = sessions.length;\n  const totalFocusTime = sessions.reduce((sum, session) => sum + session.timeSpent, 0);\n  const maxSessionDuration = Math.max(...sessions.map(s => s.timeSpent), 0);\n  \n  // Sessions by duration\n  const sessionsByDuration = {};\n  sessions.forEach(session => {\n    sessionsByDuration[session.timeSpent] = (sessionsByDuration[session.timeSpent] || 0) + 1;\n  });\n  \n  // Category statistics\n  const categorySessions = {};\n  const categoryTime = {};\n  sessions.forEach(session => {\n    categorySessions[session.category] = (categorySessions[session.category] || 0) + 1;\n    categoryTime[session.category] = (categoryTime[session.category] || 0) + session.timeSpent;\n  });\n  \n  // Time-based sessions\n  const sessionsByTime = {};\n  sessions.forEach(session => {\n    const hour = new Date(session.createdAt).getHours();\n    sessionsByTime[hour] = (sessionsByTime[hour] || 0) + 1;\n  });\n  \n  // Streaks (simplified - you may want more sophisticated streak calculation)\n  const focusStreak = calculateFocusStreak(sessions);\n  \n  // Today's sessions\n  const todaySessions = sessions.filter(s => \n    new Date(s.createdAt).toDateString() === today\n  ).length;\n  \n  // Week sessions\n  const weekSessions = sessions.filter(s => \n    new Date(s.createdAt) >= thisWeek\n  ).length;\n  \n  // Month sessions\n  const monthSessions = sessions.filter(s => \n    new Date(s.createdAt) >= thisMonth\n  ).length;\n  \n  // Long sessions (90+ minutes)\n  const sessionsOver90Min = sessions.filter(s => s.timeSpent >= 90).length;\n  \n  // Break sessions (5-15 minutes)\n  const breakSessions = sessions.filter(s => s.timeSpent >= 5 && s.timeSpent <= 15).length;\n  \n  return {\n    totalSessions,\n    totalFocusTime,\n    maxSessionDuration,\n    sessionsByDuration,\n    categorySessions,\n    categoryTime,\n    sessionsByTime,\n    focusStreak,\n    todaySessions,\n    weekSessions,\n    monthSessions,\n    sessionsOver90Min,\n    breakSessions,\n    uniqueCategories: Object.keys(categorySessions).length\n  };\n};\n\n// Helper function for focus streak calculation\nconst calculateFocusStreak = (sessions) => {\n  if (sessions.length === 0) return 0;\n  \n  const dates = [...new Set(sessions.map(s => new Date(s.createdAt).toDateString()))].sort();\n  let streak = 1;\n  let currentStreak = 1;\n  \n  for (let i = 1; i < dates.length; i++) {\n    const prevDate = new Date(dates[i - 1]);\n    const currentDate = new Date(dates[i]);\n    const dayDiff = (currentDate - prevDate) / (1000 * 60 * 60 * 24);\n    \n    if (dayDiff === 1) {\n      currentStreak++;\n      streak = Math.max(streak, currentStreak);\n    } else {\n      currentStreak = 1;\n    }\n  }\n  \n  return streak;\n};\n\n// Helper function for week start\nconst getWeekStart = (date) => {\n  const d = new Date(date);\n  const day = d.getDay();\n  const diff = d.getDate() - day;\n  return new Date(d.setDate(diff));\n};\n\n// Add achievement toast notification function\nconst showAchievementToast = (achievement) => {\n  // You can integrate with react-toastify or create custom notification\n  console.log(`🏆 Achievement Unlocked: ${achievement.name}!`);\n  // Example with custom notification (you'll need to implement this component)\n  // toast.success(`🏆 ${achievement.name} unlocked! +${achievement.xpReward} XP`);\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}