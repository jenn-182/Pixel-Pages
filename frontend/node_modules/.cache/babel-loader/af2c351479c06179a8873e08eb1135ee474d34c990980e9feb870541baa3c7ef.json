{"ast":null,"code":"import{useState,useEffect}from'react';const useNotebooks=()=>{const[notebooks,setNotebooks]=useState([]);const[loading,setLoading]=useState(true);useEffect(()=>{fetchNotebooks();},[]);const fetchNotebooks=async()=>{try{setLoading(true);const response=await fetch('/api/notebooks');if(response.ok){const data=await response.json();setNotebooks(data);}else{console.error('Failed to fetch notebooks:',response.statusText);}}catch(error){console.error('Error fetching notebooks:',error);}finally{setLoading(false);}};// CREATE NOTEBOOK - Add this method\nconst createNotebook=async notebookData=>{try{const response=await fetch('/api/notebooks/create',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({name:notebookData.name,description:notebookData.description,colorCode:notebookData.colorCode,folderId:notebookData.folderId||null})});if(response.ok){const newNotebook=await response.json();setNotebooks(prevNotebooks=>[...prevNotebooks,newNotebook]);return newNotebook;}else{const errorText=await response.text();console.error('Failed to create notebook:',response.status,errorText);throw new Error(\"Failed to create notebook: \".concat(response.status));}}catch(error){console.error('Error creating notebook:',error);throw error;}};// UPDATE NOTEBOOK - Fixed to include folderId explicitly\nconst updateNotebook=async(id,notebookData)=>{try{console.log('updateNotebook called with:',{id,notebookData});const payload={name:notebookData.name,description:notebookData.description,colorCode:notebookData.colorCode,tags:notebookData.tags,folderId:notebookData.folderId||null};console.log('Sending payload to API:',payload);const response=await fetch(\"/api/notebooks/\".concat(id),{method:'PUT',headers:{'Content-Type':'application/json'},body:JSON.stringify(payload)});if(response.ok){const updatedNotebook=await response.json();console.log('Received updated notebook from API:',updatedNotebook);setNotebooks(prevNotebooks=>prevNotebooks.map(notebook=>notebook.id===id?updatedNotebook:notebook));return updatedNotebook;}else{const errorText=await response.text();console.error('Failed to update notebook:',response.status,errorText);throw new Error(\"Failed to update notebook: \".concat(response.status));}}catch(error){console.error('Error updating notebook:',error);throw error;}};const deleteNotebook=async id=>{try{const response=await fetch(\"/api/notebooks/\".concat(id),{method:'DELETE'});if(response.ok){setNotebooks(prevNotebooks=>prevNotebooks.filter(notebook=>notebook.id!==id));}else{throw new Error(\"Failed to delete notebook: \".concat(response.status));}}catch(error){console.error('Error deleting notebook:',error);throw error;}};return{notebooks,loading,createNotebook,updateNotebook,deleteNotebook,refreshNotebooks:fetchNotebooks};};export default useNotebooks;","map":{"version":3,"names":["useState","useEffect","useNotebooks","notebooks","setNotebooks","loading","setLoading","fetchNotebooks","response","fetch","ok","data","json","console","error","statusText","createNotebook","notebookData","method","headers","body","JSON","stringify","name","description","colorCode","folderId","newNotebook","prevNotebooks","errorText","text","status","Error","concat","updateNotebook","id","log","payload","tags","updatedNotebook","map","notebook","deleteNotebook","filter","refreshNotebooks"],"sources":["/Users/jenn/Projects/Pixel-Pages/frontend/src/hooks/useNotebooks.js"],"sourcesContent":["import { useState, useEffect } from 'react';\n\nconst useNotebooks = () => {\n  const [notebooks, setNotebooks] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    fetchNotebooks();\n  }, []);\n\n  const fetchNotebooks = async () => {\n    try {\n      setLoading(true);\n      const response = await fetch('/api/notebooks');\n      if (response.ok) {\n        const data = await response.json();\n        setNotebooks(data);\n      } else {\n        console.error('Failed to fetch notebooks:', response.statusText);\n      }\n    } catch (error) {\n      console.error('Error fetching notebooks:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // CREATE NOTEBOOK - Add this method\n  const createNotebook = async (notebookData) => {\n    try {\n      const response = await fetch('/api/notebooks/create', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name: notebookData.name,\n          description: notebookData.description,\n          colorCode: notebookData.colorCode,\n          folderId: notebookData.folderId || null\n        })\n      });\n\n      if (response.ok) {\n        const newNotebook = await response.json();\n        setNotebooks(prevNotebooks => [...prevNotebooks, newNotebook]);\n        return newNotebook;\n      } else {\n        const errorText = await response.text();\n        console.error('Failed to create notebook:', response.status, errorText);\n        throw new Error(`Failed to create notebook: ${response.status}`);\n      }\n    } catch (error) {\n      console.error('Error creating notebook:', error);\n      throw error;\n    }\n  };\n\n  // UPDATE NOTEBOOK - Fixed to include folderId explicitly\n  const updateNotebook = async (id, notebookData) => {\n    try {\n      console.log('updateNotebook called with:', { id, notebookData });\n      \n      const payload = {\n        name: notebookData.name,\n        description: notebookData.description,\n        colorCode: notebookData.colorCode,\n        tags: notebookData.tags,\n        folderId: notebookData.folderId || null\n      };\n      \n      console.log('Sending payload to API:', payload);\n      \n      const response = await fetch(`/api/notebooks/${id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(payload)\n      });\n\n      if (response.ok) {\n        const updatedNotebook = await response.json();\n        console.log('Received updated notebook from API:', updatedNotebook);\n        \n        setNotebooks(prevNotebooks => \n          prevNotebooks.map(notebook => notebook.id === id ? updatedNotebook : notebook)\n        );\n        return updatedNotebook;\n      } else {\n        const errorText = await response.text();\n        console.error('Failed to update notebook:', response.status, errorText);\n        throw new Error(`Failed to update notebook: ${response.status}`);\n      }\n    } catch (error) {\n      console.error('Error updating notebook:', error);\n      throw error;\n    }\n  };\n\n  const deleteNotebook = async (id) => {\n    try {\n      const response = await fetch(`/api/notebooks/${id}`, {\n        method: 'DELETE'\n      });\n\n      if (response.ok) {\n        setNotebooks(prevNotebooks => prevNotebooks.filter(notebook => notebook.id !== id));\n      } else {\n        throw new Error(`Failed to delete notebook: ${response.status}`);\n      }\n    } catch (error) {\n      console.error('Error deleting notebook:', error);\n      throw error;\n    }\n  };\n\n  return {\n    notebooks,\n    loading,\n    createNotebook,\n    updateNotebook,\n    deleteNotebook, \n    refreshNotebooks: fetchNotebooks\n  };\n};\n\nexport default useNotebooks;"],"mappings":"AAAA,OAASA,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAE3C,KAAM,CAAAC,YAAY,CAAGA,CAAA,GAAM,CACzB,KAAM,CAACC,SAAS,CAAEC,YAAY,CAAC,CAAGJ,QAAQ,CAAC,EAAE,CAAC,CAC9C,KAAM,CAACK,OAAO,CAAEC,UAAU,CAAC,CAAGN,QAAQ,CAAC,IAAI,CAAC,CAE5CC,SAAS,CAAC,IAAM,CACdM,cAAc,CAAC,CAAC,CAClB,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAA,cAAc,CAAG,KAAAA,CAAA,GAAY,CACjC,GAAI,CACFD,UAAU,CAAC,IAAI,CAAC,CAChB,KAAM,CAAAE,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,gBAAgB,CAAC,CAC9C,GAAID,QAAQ,CAACE,EAAE,CAAE,CACf,KAAM,CAAAC,IAAI,CAAG,KAAM,CAAAH,QAAQ,CAACI,IAAI,CAAC,CAAC,CAClCR,YAAY,CAACO,IAAI,CAAC,CACpB,CAAC,IAAM,CACLE,OAAO,CAACC,KAAK,CAAC,4BAA4B,CAAEN,QAAQ,CAACO,UAAU,CAAC,CAClE,CACF,CAAE,MAAOD,KAAK,CAAE,CACdD,OAAO,CAACC,KAAK,CAAC,2BAA2B,CAAEA,KAAK,CAAC,CACnD,CAAC,OAAS,CACRR,UAAU,CAAC,KAAK,CAAC,CACnB,CACF,CAAC,CAED;AACA,KAAM,CAAAU,cAAc,CAAG,KAAO,CAAAC,YAAY,EAAK,CAC7C,GAAI,CACF,KAAM,CAAAT,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,uBAAuB,CAAE,CACpDS,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CACP,cAAc,CAAE,kBAClB,CAAC,CACDC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CACnBC,IAAI,CAAEN,YAAY,CAACM,IAAI,CACvBC,WAAW,CAAEP,YAAY,CAACO,WAAW,CACrCC,SAAS,CAAER,YAAY,CAACQ,SAAS,CACjCC,QAAQ,CAAET,YAAY,CAACS,QAAQ,EAAI,IACrC,CAAC,CACH,CAAC,CAAC,CAEF,GAAIlB,QAAQ,CAACE,EAAE,CAAE,CACf,KAAM,CAAAiB,WAAW,CAAG,KAAM,CAAAnB,QAAQ,CAACI,IAAI,CAAC,CAAC,CACzCR,YAAY,CAACwB,aAAa,EAAI,CAAC,GAAGA,aAAa,CAAED,WAAW,CAAC,CAAC,CAC9D,MAAO,CAAAA,WAAW,CACpB,CAAC,IAAM,CACL,KAAM,CAAAE,SAAS,CAAG,KAAM,CAAArB,QAAQ,CAACsB,IAAI,CAAC,CAAC,CACvCjB,OAAO,CAACC,KAAK,CAAC,4BAA4B,CAAEN,QAAQ,CAACuB,MAAM,CAAEF,SAAS,CAAC,CACvE,KAAM,IAAI,CAAAG,KAAK,+BAAAC,MAAA,CAA+BzB,QAAQ,CAACuB,MAAM,CAAE,CAAC,CAClE,CACF,CAAE,MAAOjB,KAAK,CAAE,CACdD,OAAO,CAACC,KAAK,CAAC,0BAA0B,CAAEA,KAAK,CAAC,CAChD,KAAM,CAAAA,KAAK,CACb,CACF,CAAC,CAED;AACA,KAAM,CAAAoB,cAAc,CAAG,KAAAA,CAAOC,EAAE,CAAElB,YAAY,GAAK,CACjD,GAAI,CACFJ,OAAO,CAACuB,GAAG,CAAC,6BAA6B,CAAE,CAAED,EAAE,CAAElB,YAAa,CAAC,CAAC,CAEhE,KAAM,CAAAoB,OAAO,CAAG,CACdd,IAAI,CAAEN,YAAY,CAACM,IAAI,CACvBC,WAAW,CAAEP,YAAY,CAACO,WAAW,CACrCC,SAAS,CAAER,YAAY,CAACQ,SAAS,CACjCa,IAAI,CAAErB,YAAY,CAACqB,IAAI,CACvBZ,QAAQ,CAAET,YAAY,CAACS,QAAQ,EAAI,IACrC,CAAC,CAEDb,OAAO,CAACuB,GAAG,CAAC,yBAAyB,CAAEC,OAAO,CAAC,CAE/C,KAAM,CAAA7B,QAAQ,CAAG,KAAM,CAAAC,KAAK,mBAAAwB,MAAA,CAAmBE,EAAE,EAAI,CACnDjB,MAAM,CAAE,KAAK,CACbC,OAAO,CAAE,CACP,cAAc,CAAE,kBAClB,CAAC,CACDC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAACe,OAAO,CAC9B,CAAC,CAAC,CAEF,GAAI7B,QAAQ,CAACE,EAAE,CAAE,CACf,KAAM,CAAA6B,eAAe,CAAG,KAAM,CAAA/B,QAAQ,CAACI,IAAI,CAAC,CAAC,CAC7CC,OAAO,CAACuB,GAAG,CAAC,qCAAqC,CAAEG,eAAe,CAAC,CAEnEnC,YAAY,CAACwB,aAAa,EACxBA,aAAa,CAACY,GAAG,CAACC,QAAQ,EAAIA,QAAQ,CAACN,EAAE,GAAKA,EAAE,CAAGI,eAAe,CAAGE,QAAQ,CAC/E,CAAC,CACD,MAAO,CAAAF,eAAe,CACxB,CAAC,IAAM,CACL,KAAM,CAAAV,SAAS,CAAG,KAAM,CAAArB,QAAQ,CAACsB,IAAI,CAAC,CAAC,CACvCjB,OAAO,CAACC,KAAK,CAAC,4BAA4B,CAAEN,QAAQ,CAACuB,MAAM,CAAEF,SAAS,CAAC,CACvE,KAAM,IAAI,CAAAG,KAAK,+BAAAC,MAAA,CAA+BzB,QAAQ,CAACuB,MAAM,CAAE,CAAC,CAClE,CACF,CAAE,MAAOjB,KAAK,CAAE,CACdD,OAAO,CAACC,KAAK,CAAC,0BAA0B,CAAEA,KAAK,CAAC,CAChD,KAAM,CAAAA,KAAK,CACb,CACF,CAAC,CAED,KAAM,CAAA4B,cAAc,CAAG,KAAO,CAAAP,EAAE,EAAK,CACnC,GAAI,CACF,KAAM,CAAA3B,QAAQ,CAAG,KAAM,CAAAC,KAAK,mBAAAwB,MAAA,CAAmBE,EAAE,EAAI,CACnDjB,MAAM,CAAE,QACV,CAAC,CAAC,CAEF,GAAIV,QAAQ,CAACE,EAAE,CAAE,CACfN,YAAY,CAACwB,aAAa,EAAIA,aAAa,CAACe,MAAM,CAACF,QAAQ,EAAIA,QAAQ,CAACN,EAAE,GAAKA,EAAE,CAAC,CAAC,CACrF,CAAC,IAAM,CACL,KAAM,IAAI,CAAAH,KAAK,+BAAAC,MAAA,CAA+BzB,QAAQ,CAACuB,MAAM,CAAE,CAAC,CAClE,CACF,CAAE,MAAOjB,KAAK,CAAE,CACdD,OAAO,CAACC,KAAK,CAAC,0BAA0B,CAAEA,KAAK,CAAC,CAChD,KAAM,CAAAA,KAAK,CACb,CACF,CAAC,CAED,MAAO,CACLX,SAAS,CACTE,OAAO,CACPW,cAAc,CACdkB,cAAc,CACdQ,cAAc,CACdE,gBAAgB,CAAErC,cACpB,CAAC,CACH,CAAC,CAED,cAAe,CAAAL,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}