{"ast":null,"code":"import apiService from './api';\nimport { allAchievements } from '../data/achievements'; // Add this import\n\nclass BackendAchievementService {\n  constructor() {\n    this.allAchievements = [];\n    this.playerAchievements = [];\n    this.playerStats = {};\n    this.loaded = false;\n  }\n  getUnlockedAchievements() {\n    if (!this.loaded) {\n      console.warn('⚠️ Backend achievement service not loaded yet');\n      return [];\n    }\n    const unlockedIds = this.playerAchievements.filter(pa => pa.unlocked).map(pa => pa.achievementId);\n    const unlockedAchievements = this.allAchievements.filter(achievement => unlockedIds.includes(achievement.id)).map(achievement => {\n      const playerAch = this.playerAchievements.find(pa => pa.achievementId === achievement.id);\n      return {\n        ...achievement,\n        unlockedAt: (playerAch === null || playerAch === void 0 ? void 0 : playerAch.unlockedAt) || new Date().toISOString(),\n        progress: (playerAch === null || playerAch === void 0 ? void 0 : playerAch.progress) || 100\n      };\n    });\n    console.log('🔍 BACKEND SERVICE getUnlockedAchievements():');\n    console.log('   - unlockedIds:', unlockedIds);\n    console.log('   - unlockedAchievements:', unlockedAchievements);\n    return unlockedAchievements;\n  }\n  getLockedAchievements() {\n    if (!this.loaded) {\n      console.warn('⚠️ Backend achievement service not loaded yet');\n      return [];\n    }\n    const unlockedIds = this.playerAchievements.filter(pa => pa.unlocked).map(pa => pa.achievementId);\n    return this.allAchievements.filter(achievement => !unlockedIds.includes(achievement.id));\n  }\n  getInProgressAchievements() {\n    if (!this.loaded) {\n      console.warn('⚠️ Backend achievement service not loaded yet');\n      return [];\n    }\n    const inProgressIds = this.playerAchievements.filter(pa => !pa.unlocked && pa.progress > 0).map(pa => pa.achievementId);\n    return this.allAchievements.filter(achievement => inProgressIds.includes(achievement.id)).map(achievement => {\n      const playerAch = this.playerAchievements.find(pa => pa.achievementId === achievement.id);\n      return {\n        ...achievement,\n        progress: (playerAch === null || playerAch === void 0 ? void 0 : playerAch.progress) || 0\n      };\n    });\n  }\n  async loadData(username = 'Jroc_182') {\n    try {\n      console.log('🔄 BACKEND SERVICE: Loading data for', username);\n      const [achievements, playerAchievements, stats] = await Promise.all([apiService.getAllAchievements(), apiService.getPlayerAchievements(username), apiService.getAchievementPlayerStats(username)]);\n      console.log('🔍 BACKEND SERVICE: Raw data loaded:');\n      console.log('   - achievements:', (achievements === null || achievements === void 0 ? void 0 : achievements.length) || 0);\n      console.log('   - playerAchievements:', (playerAchievements === null || playerAchievements === void 0 ? void 0 : playerAchievements.length) || 0);\n      console.log('   - stats:', stats);\n      this.allAchievements = achievements;\n      this.playerAchievements = playerAchievements;\n      this.playerStats = stats;\n      this.loaded = true;\n      console.log('✅ Backend achievement data loaded for', username);\n      return {\n        achievements,\n        playerAchievements,\n        stats\n      };\n    } catch (error) {\n      console.error('❌ Failed to load backend achievements:', error);\n\n      // 🔄 FALLBACK: If backend fails, try to use local data\n      console.log('🔄 BACKEND FAILED: Attempting fallback to local achievements');\n      this.allAchievements = allAchievements; // Now this should work\n      this.playerAchievements = [];\n      this.playerStats = {};\n      this.loaded = true;\n      throw error;\n    }\n  }\n  isUnlocked(achievementId) {\n    if (!this.loaded) return false;\n    const playerAch = this.playerAchievements.find(pa => pa.achievementId === achievementId);\n    return (playerAch === null || playerAch === void 0 ? void 0 : playerAch.unlocked) || false;\n  }\n  unlockAchievement(achievementId) {\n    // Find or create player achievement\n    let playerAch = this.playerAchievements.find(pa => pa.achievementId === achievementId);\n    if (!playerAch) {\n      playerAch = {\n        achievementId,\n        progress: 100,\n        unlocked: true,\n        unlockedAt: new Date().toISOString()\n      };\n      this.playerAchievements.push(playerAch);\n    } else {\n      playerAch.unlocked = true;\n      playerAch.progress = 100;\n      playerAch.unlockedAt = new Date().toISOString();\n    }\n    console.log(`🏆 Unlocked achievement: ${achievementId}`);\n  }\n  getStats() {\n    if (!this.loaded) {\n      return {\n        total: 0,\n        unlocked: 0,\n        locked: 0,\n        inProgress: 0,\n        completionRate: 0\n      };\n    }\n    const unlockedCount = this.getUnlockedAchievements().length;\n    const totalCount = this.allAchievements.length;\n    const inProgressCount = this.getInProgressAchievements().length;\n    const lockedCount = totalCount - unlockedCount;\n    return {\n      total: totalCount,\n      unlocked: unlockedCount,\n      locked: lockedCount,\n      inProgress: inProgressCount,\n      completionRate: totalCount > 0 ? Math.round(unlockedCount / totalCount * 100) : 0\n    };\n  }\n}\n\n// Export singleton instance\nconst backendAchievementService = new BackendAchievementService();\nexport default backendAchievementService;","map":{"version":3,"names":["apiService","allAchievements","BackendAchievementService","constructor","playerAchievements","playerStats","loaded","getUnlockedAchievements","console","warn","unlockedIds","filter","pa","unlocked","map","achievementId","unlockedAchievements","achievement","includes","id","playerAch","find","unlockedAt","Date","toISOString","progress","log","getLockedAchievements","getInProgressAchievements","inProgressIds","loadData","username","achievements","stats","Promise","all","getAllAchievements","getPlayerAchievements","getAchievementPlayerStats","length","error","isUnlocked","unlockAchievement","push","getStats","total","locked","inProgress","completionRate","unlockedCount","totalCount","inProgressCount","lockedCount","Math","round","backendAchievementService"],"sources":["/Users/jenn/Projects/Pixel-Pages/frontend/src/services/backendAchievementService.js"],"sourcesContent":["import apiService from './api';\nimport { allAchievements } from '../data/achievements'; // Add this import\n\nclass BackendAchievementService {\n  constructor() {\n    this.allAchievements = [];\n    this.playerAchievements = [];\n    this.playerStats = {};\n    this.loaded = false;\n  }\n\n  getUnlockedAchievements() {\n    if (!this.loaded) {\n      console.warn('⚠️ Backend achievement service not loaded yet');\n      return [];\n    }\n    \n    const unlockedIds = this.playerAchievements\n      .filter(pa => pa.unlocked)\n      .map(pa => pa.achievementId);\n    \n    const unlockedAchievements = this.allAchievements\n      .filter(achievement => unlockedIds.includes(achievement.id))\n      .map(achievement => {\n        const playerAch = this.playerAchievements.find(pa => pa.achievementId === achievement.id);\n        return {\n          ...achievement,\n          unlockedAt: playerAch?.unlockedAt || new Date().toISOString(),\n          progress: playerAch?.progress || 100\n        };\n      });\n    \n    console.log('🔍 BACKEND SERVICE getUnlockedAchievements():');\n    console.log('   - unlockedIds:', unlockedIds);\n    console.log('   - unlockedAchievements:', unlockedAchievements);\n    \n    return unlockedAchievements;\n  }\n\n  getLockedAchievements() {\n    if (!this.loaded) {\n      console.warn('⚠️ Backend achievement service not loaded yet');\n      return [];\n    }\n    \n    const unlockedIds = this.playerAchievements\n      .filter(pa => pa.unlocked)\n      .map(pa => pa.achievementId);\n    \n    return this.allAchievements.filter(achievement => !unlockedIds.includes(achievement.id));\n  }\n\n  getInProgressAchievements() {\n    if (!this.loaded) {\n      console.warn('⚠️ Backend achievement service not loaded yet');\n      return [];\n    }\n    \n    const inProgressIds = this.playerAchievements\n      .filter(pa => !pa.unlocked && pa.progress > 0)\n      .map(pa => pa.achievementId);\n    \n    return this.allAchievements\n      .filter(achievement => inProgressIds.includes(achievement.id))\n      .map(achievement => {\n        const playerAch = this.playerAchievements.find(pa => pa.achievementId === achievement.id);\n        return {\n          ...achievement,\n          progress: playerAch?.progress || 0\n        };\n      });\n  }\n\n  async loadData(username = 'Jroc_182') {\n    try {\n      console.log('🔄 BACKEND SERVICE: Loading data for', username);\n      \n      const [achievements, playerAchievements, stats] = await Promise.all([\n        apiService.getAllAchievements(),\n        apiService.getPlayerAchievements(username),\n        apiService.getAchievementPlayerStats(username)\n      ]);\n\n      console.log('🔍 BACKEND SERVICE: Raw data loaded:');\n      console.log('   - achievements:', achievements?.length || 0);\n      console.log('   - playerAchievements:', playerAchievements?.length || 0);\n      console.log('   - stats:', stats);\n\n      this.allAchievements = achievements;\n      this.playerAchievements = playerAchievements;\n      this.playerStats = stats;\n      this.loaded = true;\n\n      console.log('✅ Backend achievement data loaded for', username);\n\n      return { achievements, playerAchievements, stats };\n    } catch (error) {\n      console.error('❌ Failed to load backend achievements:', error);\n      \n      // 🔄 FALLBACK: If backend fails, try to use local data\n      console.log('🔄 BACKEND FAILED: Attempting fallback to local achievements');\n      this.allAchievements = allAchievements; // Now this should work\n      this.playerAchievements = [];\n      this.playerStats = {};\n      this.loaded = true;\n      \n      throw error;\n    }\n  }\n\n  isUnlocked(achievementId) {\n    if (!this.loaded) return false;\n    \n    const playerAch = this.playerAchievements.find(pa => pa.achievementId === achievementId);\n    return playerAch?.unlocked || false;\n  }\n\n  unlockAchievement(achievementId) {\n    // Find or create player achievement\n    let playerAch = this.playerAchievements.find(pa => pa.achievementId === achievementId);\n    \n    if (!playerAch) {\n      playerAch = {\n        achievementId,\n        progress: 100,\n        unlocked: true,\n        unlockedAt: new Date().toISOString()\n      };\n      this.playerAchievements.push(playerAch);\n    } else {\n      playerAch.unlocked = true;\n      playerAch.progress = 100;\n      playerAch.unlockedAt = new Date().toISOString();\n    }\n    \n    console.log(`🏆 Unlocked achievement: ${achievementId}`);\n  }\n\n  getStats() {\n    if (!this.loaded) {\n      return {\n        total: 0,\n        unlocked: 0,\n        locked: 0,\n        inProgress: 0,\n        completionRate: 0\n      };\n    }\n\n    const unlockedCount = this.getUnlockedAchievements().length;\n    const totalCount = this.allAchievements.length;\n    const inProgressCount = this.getInProgressAchievements().length;\n    const lockedCount = totalCount - unlockedCount;\n\n    return {\n      total: totalCount,\n      unlocked: unlockedCount,\n      locked: lockedCount,\n      inProgress: inProgressCount,\n      completionRate: totalCount > 0 ? Math.round((unlockedCount / totalCount) * 100) : 0\n    };\n  }\n}\n\n// Export singleton instance\nconst backendAchievementService = new BackendAchievementService();\nexport default backendAchievementService;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}