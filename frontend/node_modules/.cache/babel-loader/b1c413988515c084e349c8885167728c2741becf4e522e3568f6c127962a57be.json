{"ast":null,"code":"var _jsxFileName = \"/Users/jenn/Projects/Pixel-Pages/frontend/src/components/markdown/LiveMarkdownEditor.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from 'react';\nimport { formatMarkdownContent } from '../../utils/markdownUtils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LiveMarkdownEditor = ({\n  content,\n  onChange,\n  onKeyDown,\n  placeholder,\n  className,\n  style,\n  id\n}) => {\n  _s();\n  const textareaRef = useRef(null);\n  const overlayRef = useRef(null);\n  const [isFocused, setIsFocused] = useState(false);\n\n  // Sync scroll between textarea and overlay\n  const handleScroll = () => {\n    if (textareaRef.current && overlayRef.current) {\n      overlayRef.current.scrollTop = textareaRef.current.scrollTop;\n      overlayRef.current.scrollLeft = textareaRef.current.scrollLeft;\n    }\n  };\n\n  // Handle input changes\n  const handleChange = e => {\n    onChange(e);\n    // Sync scroll after content change\n    setTimeout(handleScroll, 0);\n  };\n\n  // Handle focus/blur\n  const handleFocus = () => setIsFocused(true);\n  const handleBlur = () => setIsFocused(false);\n\n  // Sync scroll on content changes\n  useEffect(() => {\n    handleScroll();\n  }, [content]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"relative w-full h-full\",\n    children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n      ref: textareaRef,\n      id: id,\n      value: content,\n      onChange: handleChange,\n      onKeyDown: onKeyDown,\n      onScroll: handleScroll,\n      onFocus: handleFocus,\n      onBlur: handleBlur,\n      placeholder: placeholder,\n      className: `${className} relative z-20 resize-none bg-transparent text-transparent caret-cyan-400 selection:bg-cyan-400 selection:text-black`,\n      style: {\n        ...style,\n        color: 'transparent',\n        WebkitTextFillColor: 'transparent',\n        textFillColor: 'transparent',\n        caretColor: '#22d3ee'\n      },\n      spellCheck: false,\n      autoComplete: \"off\",\n      autoCorrect: \"off\",\n      autoCapitalize: \"off\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: overlayRef,\n      className: \"absolute inset-0 pointer-events-none overflow-auto z-10 p-6 font-mono text-base leading-relaxed\",\n      style: {\n        whiteSpace: 'pre-wrap',\n        wordBreak: 'break-word',\n        overflowWrap: 'break-word'\n      },\n      children: content ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-white\",\n        children: formatMarkdownContent(content)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-gray-400\",\n        children: placeholder\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), isFocused && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"absolute inset-0 border-2 border-cyan-400 opacity-30 pointer-events-none z-30 rounded\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(LiveMarkdownEditor, \"J6XG3USOcKJxDE0j9sNgUsO+QL0=\");\n_c = LiveMarkdownEditor;\nexport default LiveMarkdownEditor;\nvar _c;\n$RefreshReg$(_c, \"LiveMarkdownEditor\");","map":{"version":3,"names":["React","useRef","useEffect","useState","formatMarkdownContent","jsxDEV","_jsxDEV","LiveMarkdownEditor","content","onChange","onKeyDown","placeholder","className","style","id","_s","textareaRef","overlayRef","isFocused","setIsFocused","handleScroll","current","scrollTop","scrollLeft","handleChange","e","setTimeout","handleFocus","handleBlur","children","ref","value","onScroll","onFocus","onBlur","color","WebkitTextFillColor","textFillColor","caretColor","spellCheck","autoComplete","autoCorrect","autoCapitalize","fileName","_jsxFileName","lineNumber","columnNumber","whiteSpace","wordBreak","overflowWrap","_c","$RefreshReg$"],"sources":["/Users/jenn/Projects/Pixel-Pages/frontend/src/components/markdown/LiveMarkdownEditor.jsx"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\nimport { formatMarkdownContent } from '../../utils/markdownUtils';\n\nconst LiveMarkdownEditor = ({ \n  content, \n  onChange, \n  onKeyDown, \n  placeholder, \n  className, \n  style,\n  id \n}) => {\n  const textareaRef = useRef(null);\n  const overlayRef = useRef(null);\n  const [isFocused, setIsFocused] = useState(false);\n\n  // Sync scroll between textarea and overlay\n  const handleScroll = () => {\n    if (textareaRef.current && overlayRef.current) {\n      overlayRef.current.scrollTop = textareaRef.current.scrollTop;\n      overlayRef.current.scrollLeft = textareaRef.current.scrollLeft;\n    }\n  };\n\n  // Handle input changes\n  const handleChange = (e) => {\n    onChange(e);\n    // Sync scroll after content change\n    setTimeout(handleScroll, 0);\n  };\n\n  // Handle focus/blur\n  const handleFocus = () => setIsFocused(true);\n  const handleBlur = () => setIsFocused(false);\n\n  // Sync scroll on content changes\n  useEffect(() => {\n    handleScroll();\n  }, [content]);\n\n  return (\n    <div className=\"relative w-full h-full\">\n      {/* Invisible textarea for input */}\n      <textarea\n        ref={textareaRef}\n        id={id}\n        value={content}\n        onChange={handleChange}\n        onKeyDown={onKeyDown}\n        onScroll={handleScroll}\n        onFocus={handleFocus}\n        onBlur={handleBlur}\n        placeholder={placeholder}\n        className={`${className} relative z-20 resize-none bg-transparent text-transparent caret-cyan-400 selection:bg-cyan-400 selection:text-black`}\n        style={{\n          ...style,\n          color: 'transparent',\n          WebkitTextFillColor: 'transparent',\n          textFillColor: 'transparent',\n          caretColor: '#22d3ee',\n        }}\n        spellCheck={false}\n        autoComplete=\"off\"\n        autoCorrect=\"off\"\n        autoCapitalize=\"off\"\n      />\n\n      {/* Rendered markdown overlay */}\n      <div\n        ref={overlayRef}\n        className=\"absolute inset-0 pointer-events-none overflow-auto z-10 p-6 font-mono text-base leading-relaxed\"\n        style={{\n          whiteSpace: 'pre-wrap',\n          wordBreak: 'break-word',\n          overflowWrap: 'break-word',\n        }}\n      >\n        {content ? (\n          <div className=\"text-white\">\n            {formatMarkdownContent(content)}\n          </div>\n        ) : (\n          <div className=\"text-gray-400\">\n            {placeholder}\n          </div>\n        )}\n      </div>\n\n      {/* Focus indicator */}\n      {isFocused && (\n        <div className=\"absolute inset-0 border-2 border-cyan-400 opacity-30 pointer-events-none z-30 rounded\" />\n      )}\n    </div>\n  );\n};\n\nexport default LiveMarkdownEditor;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}