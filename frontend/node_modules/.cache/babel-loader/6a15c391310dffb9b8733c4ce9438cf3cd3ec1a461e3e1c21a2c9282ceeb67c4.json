{"ast":null,"code":"export const playerRanks = [\n// Beginner Ranks (Levels 1-5) - New exponential XP system\n{\n  level: 1,\n  name: 'PIXEL NOVICE',\n  minXP: 0,\n  color: '#9CA3AF',\n  icon: '🌱',\n  description: 'Just getting started'\n}, {\n  level: 2,\n  name: 'DATA SEEKER',\n  minXP: 500,\n  color: '#9CA3AF',\n  icon: '🔍',\n  description: 'Learning the ropes'\n}, {\n  level: 3,\n  name: 'LOG KEEPER',\n  minXP: 1500,\n  color: '#10B981',\n  icon: '📝',\n  description: 'Building good habits'\n}, {\n  level: 4,\n  name: 'BYTE WARRIOR',\n  minXP: 3000,\n  color: '#10B981',\n  icon: '⚔️',\n  description: 'Finding your rhythm'\n}, {\n  level: 5,\n  name: 'CODE SCOUT',\n  minXP: 5000,\n  color: '#10B981',\n  icon: '🎯',\n  description: 'Consistent progress'\n},\n// Intermediate Ranks (Levels 6-10) \n{\n  level: 6,\n  name: 'DIGITAL RANGER',\n  minXP: 7500,\n  color: '#3B82F6',\n  icon: '🏹',\n  description: 'Steady advancement'\n}, {\n  level: 7,\n  name: 'CYBER GUARDIAN',\n  minXP: 10500,\n  color: '#3B82F6',\n  icon: '🛡️',\n  description: 'Reliable performer'\n}, {\n  level: 8,\n  name: 'MATRIX EXPLORER',\n  minXP: 14000,\n  color: '#3B82F6',\n  icon: '🗺️',\n  description: 'Expanding horizons'\n}, {\n  level: 9,\n  name: 'PIXEL KNIGHT',\n  minXP: 18000,\n  color: '#8B5CF6',\n  icon: '🗡️',\n  description: 'Proven dedication'\n}, {\n  level: 10,\n  name: 'DATA CHAMPION',\n  minXP: 22500,\n  color: '#8B5CF6',\n  icon: '🏆',\n  description: 'Excellence achieved'\n},\n// Advanced Ranks (Levels 11-15)\n{\n  level: 11,\n  name: 'BYTE COMMANDER',\n  minXP: 27500,\n  color: '#8B5CF6',\n  icon: '⭐',\n  description: 'Leading by example'\n}, {\n  level: 12,\n  name: 'LOGIC OVERLORD',\n  minXP: 33000,\n  color: '#8B5CF6',\n  icon: '🔮',\n  description: 'Mastering complexity'\n}, {\n  level: 13,\n  name: 'SYSTEM ARCHITECT',\n  minXP: 39000,\n  color: '#F59E0B',\n  icon: '🏗️',\n  description: 'Building greatness'\n}, {\n  level: 14,\n  name: 'NEURAL HACKER',\n  minXP: 45500,\n  color: '#F59E0B',\n  icon: '🧠',\n  description: 'Exceptional insight'\n}, {\n  level: 15,\n  name: 'QUANTUM ANALYST',\n  minXP: 52500,\n  color: '#F59E0B',\n  icon: '⚛️',\n  description: 'Transcending limits'\n},\n// Elite Ranks (Levels 16-20)\n{\n  level: 16,\n  name: 'CYBER SAGE',\n  minXP: 60000,\n  color: '#06b6d4',\n  icon: '🔯',\n  description: 'Wisdom incarnate'\n}, {\n  level: 17,\n  name: 'MATRIX MASTER',\n  minXP: 68000,\n  color: '#06b6d4',\n  icon: '👑',\n  description: 'Legendary status'\n}, {\n  level: 18,\n  name: 'DIGITAL EMPEROR',\n  minXP: 76500,\n  color: '#06b6d4',\n  icon: '🏛️',\n  description: 'Ruling the realm'\n}, {\n  level: 19,\n  name: 'DATA DEITY',\n  minXP: 85500,\n  color: '#06b6d4',\n  icon: '⚡',\n  description: 'Divine mastery'\n}, {\n  level: 20,\n  name: 'PIXEL OMNARCH',\n  minXP: 95000,\n  color: '#06b6d4',\n  icon: '♦️',\n  description: 'Ultimate achievement'\n}];\nexport const getRankByXP = totalXP => {\n  return [...playerRanks].reverse().find(rank => totalXP >= rank.minXP) || playerRanks[0];\n};\nexport const getNextRank = currentLevel => {\n  return playerRanks.find(rank => rank.level > currentLevel);\n};\nexport const getRankByLevel = level => {\n  return playerRanks.find(rank => rank.level === level) || playerRanks[0];\n};","map":{"version":3,"names":["playerRanks","level","name","minXP","color","icon","description","getRankByXP","totalXP","reverse","find","rank","getNextRank","currentLevel","getRankByLevel"],"sources":["/Users/jenn/Projects/Pixel-Pages/frontend/src/data/ranks.js"],"sourcesContent":["export const playerRanks = [\n  // Beginner Ranks (Levels 1-5) - New exponential XP system\n  { level: 1, name: 'PIXEL NOVICE', minXP: 0, color: '#9CA3AF', icon: '🌱', description: 'Just getting started' },\n  { level: 2, name: 'DATA SEEKER', minXP: 500, color: '#9CA3AF', icon: '🔍', description: 'Learning the ropes' },\n  { level: 3, name: 'LOG KEEPER', minXP: 1500, color: '#10B981', icon: '📝', description: 'Building good habits' },\n  { level: 4, name: 'BYTE WARRIOR', minXP: 3000, color: '#10B981', icon: '⚔️', description: 'Finding your rhythm' },\n  { level: 5, name: 'CODE SCOUT', minXP: 5000, color: '#10B981', icon: '🎯', description: 'Consistent progress' },\n  \n  // Intermediate Ranks (Levels 6-10) \n  { level: 6, name: 'DIGITAL RANGER', minXP: 7500, color: '#3B82F6', icon: '🏹', description: 'Steady advancement' },\n  { level: 7, name: 'CYBER GUARDIAN', minXP: 10500, color: '#3B82F6', icon: '🛡️', description: 'Reliable performer' },\n  { level: 8, name: 'MATRIX EXPLORER', minXP: 14000, color: '#3B82F6', icon: '🗺️', description: 'Expanding horizons' },\n  { level: 9, name: 'PIXEL KNIGHT', minXP: 18000, color: '#8B5CF6', icon: '🗡️', description: 'Proven dedication' },\n  { level: 10, name: 'DATA CHAMPION', minXP: 22500, color: '#8B5CF6', icon: '🏆', description: 'Excellence achieved' },\n  \n  // Advanced Ranks (Levels 11-15)\n  { level: 11, name: 'BYTE COMMANDER', minXP: 27500, color: '#8B5CF6', icon: '⭐', description: 'Leading by example' },\n  { level: 12, name: 'LOGIC OVERLORD', minXP: 33000, color: '#8B5CF6', icon: '🔮', description: 'Mastering complexity' },\n  { level: 13, name: 'SYSTEM ARCHITECT', minXP: 39000, color: '#F59E0B', icon: '🏗️', description: 'Building greatness' },\n  { level: 14, name: 'NEURAL HACKER', minXP: 45500, color: '#F59E0B', icon: '🧠', description: 'Exceptional insight' },\n  { level: 15, name: 'QUANTUM ANALYST', minXP: 52500, color: '#F59E0B', icon: '⚛️', description: 'Transcending limits' },\n  \n  // Elite Ranks (Levels 16-20)\n  { level: 16, name: 'CYBER SAGE', minXP: 60000, color: '#06b6d4', icon: '🔯', description: 'Wisdom incarnate' },\n  { level: 17, name: 'MATRIX MASTER', minXP: 68000, color: '#06b6d4', icon: '👑', description: 'Legendary status' },\n  { level: 18, name: 'DIGITAL EMPEROR', minXP: 76500, color: '#06b6d4', icon: '🏛️', description: 'Ruling the realm' },\n  { level: 19, name: 'DATA DEITY', minXP: 85500, color: '#06b6d4', icon: '⚡', description: 'Divine mastery' },\n  { level: 20, name: 'PIXEL OMNARCH', minXP: 95000, color: '#06b6d4', icon: '♦️', description: 'Ultimate achievement' }\n];\n\nexport const getRankByXP = (totalXP) => {\n  return [...playerRanks].reverse().find(rank => totalXP >= rank.minXP) || playerRanks[0];\n};\n\nexport const getNextRank = (currentLevel) => {\n  return playerRanks.find(rank => rank.level > currentLevel);\n};\n\nexport const getRankByLevel = (level) => {\n  return playerRanks.find(rank => rank.level === level) || playerRanks[0];\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}