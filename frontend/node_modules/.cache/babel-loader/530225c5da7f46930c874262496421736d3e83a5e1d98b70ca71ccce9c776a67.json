{"ast":null,"code":"import{useState,useEffect,useCallback}from'react';const TAB_STORAGE_KEY='pixelPages_activeTab';const DEFAULT_TAB='dashboard';// Changed from 'notes' to 'dashboard'\nexport const useTabs=()=>{const[activeTab,setActiveTab]=useState('dashboard');// Load from localStorage on initialization\nuseEffect(()=>{try{const savedTab=localStorage.getItem(TAB_STORAGE_KEY);if(savedTab){setActiveTab(savedTab);}}catch(error){console.warn('Failed to load tab from localStorage:',error);}},[]);// Save to localStorage whenever tab changes\nuseEffect(()=>{try{localStorage.setItem(TAB_STORAGE_KEY,activeTab);}catch(error){console.warn('Failed to save tab to localStorage:',error);}},[activeTab]);const changeTab=useCallback(newTab=>{setActiveTab(newTab);},[]);const resetTabs=useCallback(()=>{setActiveTab(DEFAULT_TAB);try{localStorage.removeItem(TAB_STORAGE_KEY);}catch(error){console.warn('Failed to clear tab from localStorage:',error);}},[]);return{activeTab,changeTab,resetTabs};};","map":{"version":3,"names":["useState","useEffect","useCallback","TAB_STORAGE_KEY","DEFAULT_TAB","useTabs","activeTab","setActiveTab","savedTab","localStorage","getItem","error","console","warn","setItem","changeTab","newTab","resetTabs","removeItem"],"sources":["/Users/jenn/Projects/Pixel-Pages/frontend/src/hooks/useTabs.js"],"sourcesContent":["import { useState, useEffect, useCallback } from 'react';\n\nconst TAB_STORAGE_KEY = 'pixelPages_activeTab';\nconst DEFAULT_TAB = 'dashboard'; // Changed from 'notes' to 'dashboard'\n\nexport const useTabs = () => {\n  const [activeTab, setActiveTab] = useState('dashboard');\n\n  // Load from localStorage on initialization\n  useEffect(() => {\n    try {\n      const savedTab = localStorage.getItem(TAB_STORAGE_KEY);\n      if (savedTab) {\n        setActiveTab(savedTab);\n      }\n    } catch (error) {\n      console.warn('Failed to load tab from localStorage:', error);\n    }\n  }, []);\n\n  // Save to localStorage whenever tab changes\n  useEffect(() => {\n    try {\n      localStorage.setItem(TAB_STORAGE_KEY, activeTab);\n    } catch (error) {\n      console.warn('Failed to save tab to localStorage:', error);\n    }\n  }, [activeTab]);\n\n  const changeTab = useCallback((newTab) => {\n    setActiveTab(newTab);\n  }, []);\n\n  const resetTabs = useCallback(() => {\n    setActiveTab(DEFAULT_TAB);\n    try {\n      localStorage.removeItem(TAB_STORAGE_KEY);\n    } catch (error) {\n      console.warn('Failed to clear tab from localStorage:', error);\n    }\n  }, []);\n\n  return {\n    activeTab,\n    changeTab,\n    resetTabs\n  };\n};"],"mappings":"AAAA,OAASA,QAAQ,CAAEC,SAAS,CAAEC,WAAW,KAAQ,OAAO,CAExD,KAAM,CAAAC,eAAe,CAAG,sBAAsB,CAC9C,KAAM,CAAAC,WAAW,CAAG,WAAW,CAAE;AAEjC,MAAO,MAAM,CAAAC,OAAO,CAAGA,CAAA,GAAM,CAC3B,KAAM,CAACC,SAAS,CAAEC,YAAY,CAAC,CAAGP,QAAQ,CAAC,WAAW,CAAC,CAEvD;AACAC,SAAS,CAAC,IAAM,CACd,GAAI,CACF,KAAM,CAAAO,QAAQ,CAAGC,YAAY,CAACC,OAAO,CAACP,eAAe,CAAC,CACtD,GAAIK,QAAQ,CAAE,CACZD,YAAY,CAACC,QAAQ,CAAC,CACxB,CACF,CAAE,MAAOG,KAAK,CAAE,CACdC,OAAO,CAACC,IAAI,CAAC,uCAAuC,CAAEF,KAAK,CAAC,CAC9D,CACF,CAAC,CAAE,EAAE,CAAC,CAEN;AACAV,SAAS,CAAC,IAAM,CACd,GAAI,CACFQ,YAAY,CAACK,OAAO,CAACX,eAAe,CAAEG,SAAS,CAAC,CAClD,CAAE,MAAOK,KAAK,CAAE,CACdC,OAAO,CAACC,IAAI,CAAC,qCAAqC,CAAEF,KAAK,CAAC,CAC5D,CACF,CAAC,CAAE,CAACL,SAAS,CAAC,CAAC,CAEf,KAAM,CAAAS,SAAS,CAAGb,WAAW,CAAEc,MAAM,EAAK,CACxCT,YAAY,CAACS,MAAM,CAAC,CACtB,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAC,SAAS,CAAGf,WAAW,CAAC,IAAM,CAClCK,YAAY,CAACH,WAAW,CAAC,CACzB,GAAI,CACFK,YAAY,CAACS,UAAU,CAACf,eAAe,CAAC,CAC1C,CAAE,MAAOQ,KAAK,CAAE,CACdC,OAAO,CAACC,IAAI,CAAC,wCAAwC,CAAEF,KAAK,CAAC,CAC/D,CACF,CAAC,CAAE,EAAE,CAAC,CAEN,MAAO,CACLL,SAAS,CACTS,SAAS,CACTE,SACF,CAAC,CACH,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}