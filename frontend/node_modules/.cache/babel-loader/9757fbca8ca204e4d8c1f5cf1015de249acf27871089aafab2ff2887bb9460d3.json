{"ast":null,"code":"var _jsxFileName = \"/Users/jenn/Projects/Pixel-Pages/frontend/src/components/notes/NoteModal.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { X, FileText, Tag, Folder, BookOpen, Palette, Save, Plus, Maximize2, Minimize2, Download, FileDown, Archive } from 'lucide-react';\nimport PixelButton from '../PixelButton';\nimport PixelInput from '../PixelInput';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NoteModal = ({\n  isOpen,\n  onClose,\n  onSave,\n  folders,\n  notebooks,\n  existingNote = null,\n  defaultFolderId = null,\n  defaultNotebookId = null // Add this\n}) => {\n  _s();\n  const [noteData, setNoteData] = useState({\n    title: '',\n    content: '',\n    tags: '',\n    color: '#4ADE80',\n    folderId: null,\n    notebookId: null\n  });\n  const [isFullscreen, setIsFullscreen] = useState(false);\n  const [notification, setNotification] = useState(null);\n  const isEditing = existingNote !== null;\n  const colors = ['#4ADE80', '#60A5FA', '#F472B6', '#FBBF24', '#A78BFA', '#FB7185', '#34D399', '#FCD34D'];\n\n  // Load existing note data when editing\n  useEffect(() => {\n    if (existingNote) {\n      setNoteData({\n        title: existingNote.title || '',\n        content: existingNote.content || '',\n        tags: existingNote.tags || '',\n        color: existingNote.color || '#4ADE80',\n        folderId: existingNote.folderId || null,\n        notebookId: existingNote.notebookId || null\n      });\n    } else {\n      setNoteData({\n        title: '',\n        content: '',\n        tags: '',\n        color: '#4ADE80',\n        folderId: defaultFolderId,\n        notebookId: defaultNotebookId // Use default notebook\n      });\n    }\n  }, [existingNote, isOpen, defaultFolderId, defaultNotebookId]); // Add defaultNotebookId\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      console.log('Submitting note data:', noteData); // Debug log\n      await onSave(noteData);\n    } catch (error) {\n      console.error('Failed to save note:', error);\n      // Keep modal open if there's an error\n    }\n  };\n\n  // Helper function to show notifications\n  const showNotification = (message, type = 'success') => {\n    setNotification({\n      message,\n      type\n    });\n    setTimeout(() => setNotification(null), 3000);\n  };\n  return /*#__PURE__*/_jsxDEV(AnimatePresence, {\n    children: isOpen && /*#__PURE__*/_jsxDEV(motion.div, {\n      initial: {\n        opacity: 0\n      },\n      animate: {\n        opacity: 1\n      },\n      exit: {\n        opacity: 0\n      },\n      className: \"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50\",\n      onClick: onClose,\n      children: /*#__PURE__*/_jsxDEV(motion.div, {\n        initial: {\n          scale: 0.95,\n          opacity: 0\n        },\n        animate: {\n          scale: 1,\n          opacity: 1\n        },\n        exit: {\n          scale: 0.95,\n          opacity: 0\n        },\n        className: `bg-gray-900 border-2 border-gray-600 shadow-[8px_8px_0px_0px_rgba(0,0,0,1)] p-6 transition-all duration-300 ${isFullscreen ? 'w-full h-full max-w-none max-h-none m-0 overflow-y-auto' // Add overflow-y-auto\n        : 'w-full max-w-md max-h-[90vh] overflow-y-auto'}`,\n        onClick: e => e.stopPropagation(),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center justify-between mb-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center gap-3\",\n            children: [/*#__PURE__*/_jsxDEV(FileText, {\n              size: 24,\n              className: \"text-green-400\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"font-mono text-xl font-bold text-white\",\n              children: isEditing ? 'Edit Note' : 'Create Note'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center gap-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: () => setIsFullscreen(!isFullscreen),\n              className: \"text-gray-400 hover:text-white transition-colors p-1\",\n              title: isFullscreen ? 'Exit Fullscreen' : 'Enter Fullscreen',\n              children: isFullscreen ? /*#__PURE__*/_jsxDEV(Minimize2, {\n                size: 20\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 35\n              }, this) : /*#__PURE__*/_jsxDEV(Maximize2, {\n                size: 20\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 61\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: onClose,\n              className: \"text-gray-400 hover:text-white transition-colors\",\n              children: /*#__PURE__*/_jsxDEV(X, {\n                size: 20\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          className: `space-y-4 ${isFullscreen ? 'max-w-4xl mx-auto' : ''}`,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"block text-sm font-mono font-bold text-white mb-2\",\n              children: \"Title *\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(PixelInput, {\n              value: noteData.title,\n              onChange: e => setNoteData({\n                ...noteData,\n                title: e.target.value\n              }),\n              placeholder: \"Enter note title...\",\n              required: true,\n              style: {\n                color: '#000'\n              } // Add this line\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"block text-sm font-mono font-bold text-white mb-2\",\n              children: \"Content *\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              value: noteData.content,\n              onChange: e => setNoteData({\n                ...noteData,\n                content: e.target.value\n              }),\n              placeholder: \"Start writing your note...\",\n              className: `w-full px-3 py-2 bg-white border-2 border-gray-400 font-mono text-sm resize-none text-black transition-all duration-300 ${isFullscreen ? 'h-[70vh]' : 'h-48' // Changed from h-[60vh] to h-[70vh] for bigger fullscreen\n              }`,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"block text-sm font-mono font-bold text-white mb-2\",\n              children: [/*#__PURE__*/_jsxDEV(Tag, {\n                size: 16,\n                className: \"inline mr-1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 19\n              }, this), \"Tags (comma-separated)\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(PixelInput, {\n              value: noteData.tags,\n              onChange: e => setNoteData({\n                ...noteData,\n                tags: e.target.value\n              }),\n              placeholder: \"work, ideas, important...\",\n              style: {\n                color: '#000'\n              } // Add this line\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"block text-sm font-mono font-bold text-white mb-2\",\n              children: [/*#__PURE__*/_jsxDEV(Palette, {\n                size: 16,\n                className: \"inline mr-1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 19\n              }, this), \"Color\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex gap-2 flex-wrap\",\n              children: colors.map(color => /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                onClick: () => setNoteData({\n                  ...noteData,\n                  color\n                }),\n                className: `w-8 h-8 border-2 transition-all ${noteData.color === color ? 'border-white scale-110' : 'border-gray-600 hover:border-gray-400'}`,\n                style: {\n                  backgroundColor: color\n                },\n                title: color\n              }, color, false, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `${isFullscreen ? 'grid grid-cols-1 md:grid-cols-2 gap-6' : 'grid grid-cols-2 gap-4'}`,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-sm font-mono font-bold text-white mb-2\",\n                children: [/*#__PURE__*/_jsxDEV(Folder, {\n                  size: 16,\n                  className: \"inline mr-1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 193,\n                  columnNumber: 21\n                }, this), \"Folder\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                value: noteData.folderId || '',\n                onChange: e => setNoteData({\n                  ...noteData,\n                  folderId: e.target.value ? parseInt(e.target.value) : null\n                }),\n                className: `w-full px-3 py-2 bg-white border-2 border-gray-400 font-mono text-sm text-black ${isFullscreen ? 'text-base py-3' : ''}`,\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"No folder\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 206,\n                  columnNumber: 21\n                }, this), folders.map(folder => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: folder.id,\n                  children: [\"\\uD83D\\uDCC1 \", folder.name]\n                }, folder.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 208,\n                  columnNumber: 23\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-sm font-mono font-bold text-white mb-2\",\n                children: [/*#__PURE__*/_jsxDEV(BookOpen, {\n                  size: 16,\n                  className: \"inline mr-1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 217,\n                  columnNumber: 21\n                }, this), \"Notebook\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                value: noteData.notebookId || '',\n                onChange: e => setNoteData({\n                  ...noteData,\n                  notebookId: e.target.value ? parseInt(e.target.value) : null\n                }),\n                className: `w-full px-3 py-2 bg-white border-2 border-gray-400 font-mono text-sm text-black ${isFullscreen ? 'text-base py-3' : ''}`,\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"No notebook\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 230,\n                  columnNumber: 21\n                }, this), notebooks.map(notebook => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: notebook.id,\n                  children: [\"\\uD83D\\uDCD6 \", notebook.name]\n                }, notebook.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 232,\n                  columnNumber: 23\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex gap-3 pt-4\",\n            children: [/*#__PURE__*/_jsxDEV(PixelButton, {\n              type: \"button\",\n              onClick: onClose,\n              color: \"bg-gray-400\",\n              hoverColor: \"hover:bg-gray-500\",\n              className: \"flex-1\",\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(PixelButton, {\n              type: \"submit\",\n              color: \"bg-green-400\",\n              hoverColor: \"hover:bg-green-500\",\n              className: \"flex-1\",\n              icon: isEditing ? /*#__PURE__*/_jsxDEV(Save, {\n                size: 18\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 256,\n                columnNumber: 37\n              }, this) : /*#__PURE__*/_jsxDEV(Plus, {\n                size: 18\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 256,\n                columnNumber: 58\n              }, this),\n              children: isEditing ? 'Save Changes' : 'Create Note'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }, this), isEditing && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-6 pt-4 border-t-2 border-gray-600\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center gap-2 mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Download, {\n              size: 16,\n              className: \"text-blue-400\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"font-mono text-sm font-bold text-white\",\n              children: \"Export Options\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid grid-cols-1 gap-2\",\n            children: [/*#__PURE__*/_jsxDEV(PixelButton, {\n              type: \"button\",\n              onClick: async () => {\n                try {\n                  console.log('Exporting note:', existingNote.id);\n\n                  // Use relative URL (will use React proxy)\n                  const response = await fetch(`/api/notes/${existingNote.id}/export`);\n                  if (response.ok) {\n                    const blob = await response.blob();\n                    const url = window.URL.createObjectURL(blob);\n                    const a = document.createElement('a');\n                    a.href = url;\n                    a.download = `${existingNote.title.replace(/[^a-zA-Z0-9\\s]/g, '').replace(/\\s+/g, '_')}.md`;\n                    document.body.appendChild(a);\n                    a.click();\n                    window.URL.revokeObjectURL(url);\n                    document.body.removeChild(a);\n                    alert('Note exported successfully!');\n                  } else {\n                    throw new Error('Export failed');\n                  }\n                } catch (error) {\n                  console.error('Export error:', error);\n                  alert('Export failed. Please try again.');\n                }\n              },\n              color: \"bg-blue-500\",\n              hoverColor: \"hover:bg-blue-600\",\n              className: \"w-full text-sm\",\n              icon: /*#__PURE__*/_jsxDEV(FileDown, {\n                size: 16\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 305,\n                columnNumber: 27\n              }, this),\n              children: \"Export This Note (.md)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(PixelButton, {\n              type: \"button\",\n              onClick: async () => {\n                try {\n                  console.log('Exporting all notes for user');\n\n                  // Use relative URL (will use React proxy)\n                  const response = await fetch(`/api/notes/export/all?username=user`);\n                  if (response.ok) {\n                    const blob = await response.blob();\n                    const url = window.URL.createObjectURL(blob);\n                    const a = document.createElement('a');\n                    a.href = url;\n                    a.download = `all_notes_${new Date().toISOString().slice(0, 10)}.md`;\n                    document.body.appendChild(a);\n                    a.click();\n                    window.URL.revokeObjectURL(url);\n                    document.body.removeChild(a);\n                    alert('All notes exported successfully!');\n                  } else {\n                    throw new Error('Export failed');\n                  }\n                } catch (error) {\n                  console.error('Export error:', error);\n                  alert('Export failed. Please try again.');\n                }\n              },\n              color: \"bg-purple-500\",\n              hoverColor: \"hover:bg-purple-600\",\n              className: \"w-full text-sm\",\n              icon: /*#__PURE__*/_jsxDEV(Archive, {\n                size: 16\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 343,\n                columnNumber: 27\n              }, this),\n              children: \"Export All Notes (.md)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 311,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-xs text-gray-400 mt-2 font-mono\",\n            children: \"\\uD83D\\uDCA1 Files will download to your Downloads folder\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 15\n        }, this), notification && /*#__PURE__*/_jsxDEV(motion.div, {\n          initial: {\n            opacity: 0,\n            y: -20\n          },\n          animate: {\n            opacity: 1,\n            y: 0\n          },\n          exit: {\n            opacity: 0,\n            y: -20\n          },\n          className: `fixed top-4 right-4 p-4 border-2 font-mono text-sm z-50 ${notification.type === 'success' ? 'bg-green-400 border-green-600 text-black' : 'bg-red-400 border-red-600 text-black'}`,\n          children: notification.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n_s(NoteModal, \"l6SA3Cwt5APxrxfE7oMTfqvooaw=\");\n_c = NoteModal;\nexport default NoteModal;\nvar _c;\n$RefreshReg$(_c, \"NoteModal\");","map":{"version":3,"names":["React","useState","useEffect","motion","AnimatePresence","X","FileText","Tag","Folder","BookOpen","Palette","Save","Plus","Maximize2","Minimize2","Download","FileDown","Archive","PixelButton","PixelInput","jsxDEV","_jsxDEV","NoteModal","isOpen","onClose","onSave","folders","notebooks","existingNote","defaultFolderId","defaultNotebookId","_s","noteData","setNoteData","title","content","tags","color","folderId","notebookId","isFullscreen","setIsFullscreen","notification","setNotification","isEditing","colors","handleSubmit","e","preventDefault","console","log","error","showNotification","message","type","setTimeout","children","div","initial","opacity","animate","exit","className","onClick","scale","stopPropagation","size","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","value","onChange","target","placeholder","required","style","map","backgroundColor","parseInt","folder","id","name","notebook","hoverColor","icon","response","fetch","ok","blob","url","window","URL","createObjectURL","a","document","createElement","href","download","replace","body","appendChild","click","revokeObjectURL","removeChild","alert","Error","Date","toISOString","slice","y","_c","$RefreshReg$"],"sources":["/Users/jenn/Projects/Pixel-Pages/frontend/src/components/notes/NoteModal.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { X, FileText, Tag, Folder, BookOpen, Palette, Save, Plus, Maximize2, Minimize2, Download, FileDown, Archive } from 'lucide-react';\nimport PixelButton from '../PixelButton';\nimport PixelInput from '../PixelInput';\n\nconst NoteModal = ({ \n  isOpen, \n  onClose, \n  onSave, \n  folders, \n  notebooks, \n  existingNote = null,\n  defaultFolderId = null,\n  defaultNotebookId = null // Add this\n}) => {\n  const [noteData, setNoteData] = useState({\n    title: '',\n    content: '',\n    tags: '',\n    color: '#4ADE80',\n    folderId: null,\n    notebookId: null\n  });\n  const [isFullscreen, setIsFullscreen] = useState(false);\n  const [notification, setNotification] = useState(null);\n\n  const isEditing = existingNote !== null;\n\n  const colors = [\n    '#4ADE80', '#60A5FA', '#F472B6', '#FBBF24',\n    '#A78BFA', '#FB7185', '#34D399', '#FCD34D'\n  ];\n\n  // Load existing note data when editing\n  useEffect(() => {\n    if (existingNote) {\n      setNoteData({\n        title: existingNote.title || '',\n        content: existingNote.content || '',\n        tags: existingNote.tags || '',\n        color: existingNote.color || '#4ADE80',\n        folderId: existingNote.folderId || null,\n        notebookId: existingNote.notebookId || null\n      });\n    } else {\n      setNoteData({\n        title: '',\n        content: '',\n        tags: '',\n        color: '#4ADE80',\n        folderId: defaultFolderId,\n        notebookId: defaultNotebookId, // Use default notebook\n      });\n    }\n  }, [existingNote, isOpen, defaultFolderId, defaultNotebookId]); // Add defaultNotebookId\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      console.log('Submitting note data:', noteData); // Debug log\n      await onSave(noteData); \n    } catch (error) {\n      console.error('Failed to save note:', error);\n      // Keep modal open if there's an error\n    }\n  };\n\n  // Helper function to show notifications\n  const showNotification = (message, type = 'success') => {\n    setNotification({ message, type });\n    setTimeout(() => setNotification(null), 3000);\n  };\n\n  return (\n    <AnimatePresence>\n      {isOpen && (\n        <motion.div\n          initial={{ opacity: 0 }}\n          animate={{ opacity: 1 }}\n          exit={{ opacity: 0 }}\n          className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50\"\n          onClick={onClose}\n        >\n          <motion.div\n            initial={{ scale: 0.95, opacity: 0 }}\n            animate={{ scale: 1, opacity: 1 }}\n            exit={{ scale: 0.95, opacity: 0 }}\n            className={`bg-gray-900 border-2 border-gray-600 shadow-[8px_8px_0px_0px_rgba(0,0,0,1)] p-6 transition-all duration-300 ${\n              isFullscreen \n                ? 'w-full h-full max-w-none max-h-none m-0 overflow-y-auto' // Add overflow-y-auto\n                : 'w-full max-w-md max-h-[90vh] overflow-y-auto'\n            }`}\n            onClick={(e) => e.stopPropagation()}\n          >\n            {/* Header */}\n            <div className=\"flex items-center justify-between mb-6\">\n              <div className=\"flex items-center gap-3\">\n                <FileText size={24} className=\"text-green-400\" />\n                <h2 className=\"font-mono text-xl font-bold text-white\">\n                  {isEditing ? 'Edit Note' : 'Create Note'}\n                </h2>\n              </div>\n              <div className=\"flex items-center gap-2\">\n                <button\n                  type=\"button\"\n                  onClick={() => setIsFullscreen(!isFullscreen)}\n                  className=\"text-gray-400 hover:text-white transition-colors p-1\"\n                  title={isFullscreen ? 'Exit Fullscreen' : 'Enter Fullscreen'}\n                >\n                  {isFullscreen ? <Minimize2 size={20} /> : <Maximize2 size={20} />}\n                </button>\n                <button\n                  onClick={onClose}\n                  className=\"text-gray-400 hover:text-white transition-colors\"\n                >\n                  <X size={20} />\n                </button>\n              </div>\n            </div>\n\n            <form onSubmit={handleSubmit} className={`space-y-4 ${isFullscreen ? 'max-w-4xl mx-auto' : ''}`}>\n              {/* Title */}\n              <div>\n                <label className=\"block text-sm font-mono font-bold text-white mb-2\">\n                  Title *\n                </label>\n                <PixelInput\n                  value={noteData.title}\n                  onChange={(e) => setNoteData({ ...noteData, title: e.target.value })}\n                  placeholder=\"Enter note title...\"\n                  required\n                  style={{ color: '#000' }} // Add this line\n                />\n              </div>\n\n              {/* Content */}\n              <div>\n                <label className=\"block text-sm font-mono font-bold text-white mb-2\">\n                  Content *\n                </label>\n                <textarea\n                  value={noteData.content}\n                  onChange={(e) => setNoteData({ ...noteData, content: e.target.value })}\n                  placeholder=\"Start writing your note...\"\n                  className={`w-full px-3 py-2 bg-white border-2 border-gray-400 font-mono text-sm resize-none text-black transition-all duration-300 ${\n                    isFullscreen ? 'h-[70vh]' : 'h-48'  // Changed from h-[60vh] to h-[70vh] for bigger fullscreen\n                  }`}\n                  required\n                />\n              </div>\n\n              {/* Tags */}\n              <div>\n                <label className=\"block text-sm font-mono font-bold text-white mb-2\">\n                  <Tag size={16} className=\"inline mr-1\" />\n                  Tags (comma-separated)\n                </label>\n                <PixelInput\n                  value={noteData.tags}\n                  onChange={(e) => setNoteData({ ...noteData, tags: e.target.value })}\n                  placeholder=\"work, ideas, important...\"\n                  style={{ color: '#000' }} // Add this line\n                />\n              </div>\n\n              {/* Color Picker */}\n              <div>\n                <label className=\"block text-sm font-mono font-bold text-white mb-2\">\n                  <Palette size={16} className=\"inline mr-1\" />\n                  Color\n                </label>\n                <div className=\"flex gap-2 flex-wrap\">\n                  {colors.map(color => (\n                    <button\n                      key={color}\n                      type=\"button\"\n                      onClick={() => setNoteData({ ...noteData, color })}\n                      className={`w-8 h-8 border-2 transition-all ${\n                        noteData.color === color ? 'border-white scale-110' : 'border-gray-600 hover:border-gray-400'\n                      }`}\n                      style={{ backgroundColor: color }}\n                      title={color}\n                    />\n                  ))}\n                </div>\n              </div>\n\n              {/* Folder/Notebook Selection */}\n              <div className={`${isFullscreen ? 'grid grid-cols-1 md:grid-cols-2 gap-6' : 'grid grid-cols-2 gap-4'}`}>\n                <div>\n                  <label className=\"block text-sm font-mono font-bold text-white mb-2\">\n                    <Folder size={16} className=\"inline mr-1\" />\n                    Folder\n                  </label>\n                  <select\n                    value={noteData.folderId || ''}\n                    onChange={(e) => setNoteData({ \n                      ...noteData, \n                      folderId: e.target.value ? parseInt(e.target.value) : null \n                    })}\n                    className={`w-full px-3 py-2 bg-white border-2 border-gray-400 font-mono text-sm text-black ${\n                      isFullscreen ? 'text-base py-3' : ''\n                    }`}\n                  >\n                    <option value=\"\">No folder</option>\n                    {folders.map(folder => (\n                      <option key={folder.id} value={folder.id}>\n                        📁 {folder.name}\n                      </option>\n                    ))}\n                  </select>\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-mono font-bold text-white mb-2\">\n                    <BookOpen size={16} className=\"inline mr-1\" />\n                    Notebook\n                  </label>\n                  <select\n                    value={noteData.notebookId || ''}\n                    onChange={(e) => setNoteData({ \n                      ...noteData, \n                      notebookId: e.target.value ? parseInt(e.target.value) : null \n                    })}\n                    className={`w-full px-3 py-2 bg-white border-2 border-gray-400 font-mono text-sm text-black ${\n                      isFullscreen ? 'text-base py-3' : ''\n                    }`}\n                  >\n                    <option value=\"\">No notebook</option>\n                    {notebooks.map(notebook => (\n                      <option key={notebook.id} value={notebook.id}>\n                        📖 {notebook.name}\n                      </option>\n                    ))}\n                  </select>\n                </div>\n              </div>\n\n              {/* Buttons */}\n              <div className=\"flex gap-3 pt-4\">\n                <PixelButton\n                  type=\"button\"\n                  onClick={onClose}\n                  color=\"bg-gray-400\"\n                  hoverColor=\"hover:bg-gray-500\"\n                  className=\"flex-1\"\n                >\n                  Cancel\n                </PixelButton>\n                <PixelButton\n                  type=\"submit\"\n                  color=\"bg-green-400\"\n                  hoverColor=\"hover:bg-green-500\"\n                  className=\"flex-1\"\n                  icon={isEditing ? <Save size={18} /> : <Plus size={18} />}\n                >\n                  {isEditing ? 'Save Changes' : 'Create Note'}\n                </PixelButton>\n              </div>\n            </form>\n\n            {/* Export Section - Fixed */}\n            {isEditing && (\n              <div className=\"mt-6 pt-4 border-t-2 border-gray-600\">\n                <div className=\"flex items-center gap-2 mb-3\">\n                  <Download size={16} className=\"text-blue-400\" />\n                  <h3 className=\"font-mono text-sm font-bold text-white\">Export Options</h3>\n                </div>\n                \n                <div className=\"grid grid-cols-1 gap-2\">\n                  {/* Single Note Export - Fixed */}\n                  <PixelButton\n                    type=\"button\"\n                    onClick={async () => {\n                      try {\n                        console.log('Exporting note:', existingNote.id);\n                        \n                        // Use relative URL (will use React proxy)\n                        const response = await fetch(`/api/notes/${existingNote.id}/export`);\n                        \n                        if (response.ok) {\n                          const blob = await response.blob();\n                          const url = window.URL.createObjectURL(blob);\n                          const a = document.createElement('a');\n                          a.href = url;\n                          a.download = `${existingNote.title.replace(/[^a-zA-Z0-9\\s]/g, '').replace(/\\s+/g, '_')}.md`;\n                          document.body.appendChild(a);\n                          a.click();\n                          window.URL.revokeObjectURL(url);\n                          document.body.removeChild(a);\n                          \n                          alert('Note exported successfully!');\n                        } else {\n                          throw new Error('Export failed');\n                        }\n                      } catch (error) {\n                        console.error('Export error:', error);\n                        alert('Export failed. Please try again.');\n                      }\n                    }}\n                    color=\"bg-blue-500\"\n                    hoverColor=\"hover:bg-blue-600\"\n                    className=\"w-full text-sm\"\n                    icon={<FileDown size={16} />}\n                  >\n                    Export This Note (.md)\n                  </PixelButton>\n                  \n                  {/* Export All Notes - Fixed */}\n                  <PixelButton\n                    type=\"button\"\n                    onClick={async () => {\n                      try {\n                        console.log('Exporting all notes for user');\n                        \n                        // Use relative URL (will use React proxy)\n                        const response = await fetch(`/api/notes/export/all?username=user`);\n                        \n                        if (response.ok) {\n                          const blob = await response.blob();\n                          const url = window.URL.createObjectURL(blob);\n                          const a = document.createElement('a');\n                          a.href = url;\n                          a.download = `all_notes_${new Date().toISOString().slice(0, 10)}.md`;\n                          document.body.appendChild(a);\n                          a.click();\n                          window.URL.revokeObjectURL(url);\n                          document.body.removeChild(a);\n                          \n                          alert('All notes exported successfully!');\n                        } else {\n                          throw new Error('Export failed');\n                        }\n                      } catch (error) {\n                        console.error('Export error:', error);\n                        alert('Export failed. Please try again.');\n                      }\n                    }}\n                    color=\"bg-purple-500\"\n                    hoverColor=\"hover:bg-purple-600\"\n                    className=\"w-full text-sm\"\n                    icon={<Archive size={16} />}\n                  >\n                    Export All Notes (.md)\n                  </PixelButton>\n                </div>\n                \n                <p className=\"text-xs text-gray-400 mt-2 font-mono\">\n                  💡 Files will download to your Downloads folder\n                </p>\n              </div>\n            )}\n\n            {/* Notification Display */}\n            {notification && (\n              <motion.div\n                initial={{ opacity: 0, y: -20 }}\n                animate={{ opacity: 1, y: 0 }}\n                exit={{ opacity: 0, y: -20 }}\n                className={`fixed top-4 right-4 p-4 border-2 font-mono text-sm z-50 ${\n                  notification.type === 'success' \n                    ? 'bg-green-400 border-green-600 text-black' \n                    : 'bg-red-400 border-red-600 text-black'\n                }`}\n              >\n                {notification.message}\n              </motion.div>\n            )}\n          </motion.div>\n        </motion.div>\n      )}\n    </AnimatePresence>\n  );\n};\n\nexport default NoteModal;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}